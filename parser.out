Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AMPERSAND
    AND
    ARROW_FUNCTION_TYPE
    ARROW_SEND_RECEIVE
    AS
    ASSERT
    BITWISE_XOR
    BITWISE_XOR_ASSIGN
    CLASS
    COLON
    COMMENT
    COMMENT_MULTI
    CONTINUE
    DEL
    ELIF
    ELLIPSIS
    EXCEPT
    FALSE
    FAT_ARROW
    FINALLY
    FROM
    GLOBAL
    GREATER_THAN
    HEX_NUMBER
    IMPORT
    IN
    IS
    LAMBDA
    LBRACKET
    LESS_THAN
    NONE
    NONLOCAL
    NOT
    NULL
    OR
    PASS
    PIPE
    RAISE
    RBRACKET
    RETURN
    RULE_COMPARATION
    SCIENTIFIC_NOTATION
    TRUE
    TRY
    WITH
    YIELD

Grammar

Rule 0     S' -> loop_program
Rule 1     loop_program -> program
Rule 2     loop_program -> BREAK
Rule 3     loop_program -> loop_program program
Rule 4     loop_program -> loop_program BREAK
Rule 5     program -> sentencia
Rule 6     program -> loop
Rule 7     program -> program sentencia
Rule 8     program -> program loop
Rule 9     loop -> for
Rule 10    sentencia -> print
Rule 11    sentencia -> print_withoutvalue
Rule 12    sentencia -> def_function
Rule 13    sentencia -> call_function
Rule 14    sentencia -> input
Rule 15    sentencia -> assignment
Rule 16    sentencia -> short_assignment
Rule 17    sentencia -> arithmetic_operation
Rule 18    sentencia -> direct_arithmetic_operation
Rule 19    sentencia -> if_statement
Rule 20    sentencia -> function_call
Rule 21    for -> FOR LKEY loop_program RKEY
Rule 22    for -> FOR comparation_operation LKEY loop_program RKEY
Rule 23    if_statement -> IF rule_comparation LKEY program RKEY
Rule 24    if_statement -> IF rule_comparation LKEY program RKEY ELSE LKEY program RKEY
Rule 25    if_statement -> IF value LKEY program RKEY
Rule 26    if_statement -> IF value LKEY program RKEY ELSE LKEY program RKEY
Rule 27    print -> FMT_LIBRARY DOT PRINTLN LPAREN data RPAREN
Rule 28    print -> FMT_LIBRARY DOT PRINTF LPAREN value RPAREN
Rule 29    print -> FMT_LIBRARY DOT PRINTF LPAREN value COMMA RPAREN
Rule 30    print -> FMT_LIBRARY DOT PRINTF LPAREN value COMMA data RPAREN
Rule 31    data -> value
Rule 32    data -> IDENTIFIER
Rule 33    data -> data COMMA value
Rule 34    data -> data COMMA IDENTIFIER
Rule 35    print_withoutvalue -> FMT_LIBRARY DOT PRINTLN LPAREN RPAREN
Rule 36    print_withoutvalue -> FMT_LIBRARY DOT PRINTF LPAREN RPAREN
Rule 37    assignment -> VAR IDENTIFIER data_type EQUAL usable_value
Rule 38    assignment -> CONST IDENTIFIER data_type EQUAL usable_value
Rule 39    short_assignment -> IDENTIFIER SHORT_VAR_DECL usable_value
Rule 40    usable_value -> value
Rule 41    usable_value -> call_function
Rule 42    usable_value -> IDENTIFIER
Rule 43    usable_value -> arithmetic_operation
Rule 44    usable_value -> comparation_operation
Rule 45    direct_arithmetic_operation -> IDENTIFIER PLUS_EQ value
Rule 46    direct_arithmetic_operation -> IDENTIFIER MINUS_EQ value
Rule 47    direct_arithmetic_operation -> IDENTIFIER TIMES_EQ value
Rule 48    direct_arithmetic_operation -> IDENTIFIER DIVIDE_EQ value
Rule 49    direct_arithmetic_operation -> IDENTIFIER MODULO_EQ value
Rule 50    direct_arithmetic_operation -> IDENTIFIER BITWISE_AND_EQ value
Rule 51    direct_arithmetic_operation -> IDENTIFIER BITWISE_OR_EQ value
Rule 52    direct_arithmetic_operation -> IDENTIFIER BITWISE_XOR_EQ value
Rule 53    direct_arithmetic_operation -> IDENTIFIER LEFT_SHIFT_EQ value
Rule 54    direct_arithmetic_operation -> IDENTIFIER RIGHT_SHIFT_EQ value
Rule 55    arithmetic_operation -> usable_value PLUS usable_value
Rule 56    arithmetic_operation -> usable_value MINUS usable_value
Rule 57    arithmetic_operation -> usable_value DIVIDE usable_value
Rule 58    arithmetic_operation -> usable_value TIMES usable_value
Rule 59    arithmetic_operation -> usable_value ENTERE_DIVIDE usable_value
Rule 60    arithmetic_operation -> usable_value MODULE usable_value
Rule 61    comparation_operation -> usable_value EQUALEQUAL usable_value
Rule 62    comparation_operation -> usable_value NOT_EQUAL usable_value
Rule 63    comparation_operation -> usable_value LESS_EQUAL usable_value
Rule 64    comparation_operation -> usable_value GREATER_EQUAL usable_value
Rule 65    comparation_operation -> usable_value LESS usable_value
Rule 66    comparation_operation -> usable_value GREATER usable_value
Rule 67    comparation_operation -> usable_value LOGICAL_AND usable_value
Rule 68    comparation_operation -> usable_value LOGICAL_OR usable_value
Rule 69    identifiers -> IDENTIFIER
Rule 70    identifiers -> identifiers COMMA identifiers
Rule 71    rule_comparation -> IDENTIFIER EQUALEQUAL value
Rule 72    rule_comparation -> IDENTIFIER NOT_EQUAL value
Rule 73    rule_comparation -> IDENTIFIER LESS_EQUAL value
Rule 74    rule_comparation -> IDENTIFIER GREATER_EQUAL value
Rule 75    rule_comparation -> IDENTIFIER LESS value
Rule 76    rule_comparation -> IDENTIFIER GREATER value
Rule 77    rule_comparation -> IDENTIFIER LOGICAL_AND value
Rule 78    rule_comparation -> IDENTIFIER LOGICAL_OR value
Rule 79    condition -> value comparation_operation value
Rule 80    condition -> condition LOGICAL_AND condition
Rule 81    condition -> condition LOGICAL_OR condition
Rule 82    condition -> LOGICAL_NOT condition
Rule 83    def_function -> FUNC IDENTIFIER LPAREN parameters RPAREN LKEY program RKEY
Rule 84    call_function -> IDENTIFIER LPAREN values RPAREN
Rule 85    parameters -> parameter
Rule 86    parameters -> parameters COMMA parameter
Rule 87    parameter -> IDENTIFIER data_type
Rule 88    values -> value
Rule 89    values -> values COMMA value
Rule 90    value -> STRING
Rule 91    value -> INTEGER
Rule 92    value -> FLOAT32
Rule 93    value -> FLOAT64
Rule 94    value -> BOOLEAN
Rule 95    data_type -> INTEGER_DATA_TYPE
Rule 96    data_type -> FLOAT32_DATA_TYPE
Rule 97    data_type -> FLOAT64_DATA_TYPE
Rule 98    data_type -> BOOLEAN_DATA_TYPE
Rule 99    data_type -> STRING_DATA_TYPE
Rule 100   input -> INPUT LPAREN RPAREN
Rule 101   input -> INPUT LPAREN value RPAREN
Rule 102   input -> INPUT LPAREN identifiers RPAREN

Terminals, with rules where they appear

AMPERSAND            : 
AND                  : 
ARROW_FUNCTION_TYPE  : 
ARROW_SEND_RECEIVE   : 
AS                   : 
ASSERT               : 
BITWISE_AND_EQ       : 50
BITWISE_OR_EQ        : 51
BITWISE_XOR          : 
BITWISE_XOR_ASSIGN   : 
BITWISE_XOR_EQ       : 52
BOOLEAN              : 94
BOOLEAN_DATA_TYPE    : 98
BREAK                : 2 4
CLASS                : 
COLON                : 
COMMA                : 29 30 33 34 70 86 89
COMMENT              : 
COMMENT_MULTI        : 
CONST                : 38
CONTINUE             : 
DEL                  : 
DIVIDE               : 57
DIVIDE_EQ            : 48
DOT                  : 27 28 29 30 35 36
ELIF                 : 
ELLIPSIS             : 
ELSE                 : 24 26
ENTERE_DIVIDE        : 59
EQUAL                : 37 38
EQUALEQUAL           : 61 71
EXCEPT               : 
FALSE                : 
FAT_ARROW            : 
FINALLY              : 
FLOAT32              : 92
FLOAT32_DATA_TYPE    : 96
FLOAT64              : 93
FLOAT64_DATA_TYPE    : 97
FMT_LIBRARY          : 27 28 29 30 35 36
FOR                  : 21 22
FROM                 : 
FUNC                 : 83
GLOBAL               : 
GREATER              : 66 76
GREATER_EQUAL        : 64 74
GREATER_THAN         : 
HEX_NUMBER           : 
IDENTIFIER           : 32 34 37 38 39 42 45 46 47 48 49 50 51 52 53 54 69 71 72 73 74 75 76 77 78 83 84 87
IF                   : 23 24 25 26
IMPORT               : 
IN                   : 
INPUT                : 100 101 102
INTEGER              : 91
INTEGER_DATA_TYPE    : 95
IS                   : 
LAMBDA               : 
LBRACKET             : 
LEFT_SHIFT_EQ        : 53
LESS                 : 65 75
LESS_EQUAL           : 63 73
LESS_THAN            : 
LKEY                 : 21 22 23 24 24 25 26 26 83
LOGICAL_AND          : 67 77 80
LOGICAL_NOT          : 82
LOGICAL_OR           : 68 78 81
LPAREN               : 27 28 29 30 35 36 83 84 100 101 102
MINUS                : 56
MINUS_EQ             : 46
MODULE               : 60
MODULO_EQ            : 49
NONE                 : 
NONLOCAL             : 
NOT                  : 
NOT_EQUAL            : 62 72
NULL                 : 
OR                   : 
PASS                 : 
PIPE                 : 
PLUS                 : 55
PLUS_EQ              : 45
PRINTF               : 28 29 30 36
PRINTLN              : 27 35
RAISE                : 
RBRACKET             : 
RETURN               : 
RIGHT_SHIFT_EQ       : 54
RKEY                 : 21 22 23 24 24 25 26 26 83
RPAREN               : 27 28 29 30 35 36 83 84 100 101 102
RULE_COMPARATION     : 
SCIENTIFIC_NOTATION  : 
SHORT_VAR_DECL       : 39
STRING               : 90
STRING_DATA_TYPE     : 99
TIMES                : 58
TIMES_EQ             : 47
TRUE                 : 
TRY                  : 
VAR                  : 37
WITH                 : 
YIELD                : 
error                : 

Nonterminals, with rules where they appear

arithmetic_operation : 17 43
assignment           : 15
call_function        : 13 41
comparation_operation : 22 44 79
condition            : 80 80 81 81 82
data                 : 27 30 33 34
data_type            : 37 38 87
def_function         : 12
direct_arithmetic_operation : 18
for                  : 9
function_call        : 20
identifiers          : 70 70 102
if_statement         : 19
input                : 14
loop                 : 6 8
loop_program         : 3 4 21 22 0
parameter            : 85 86
parameters           : 83 86
print                : 10
print_withoutvalue   : 11
program              : 1 3 7 8 23 24 24 25 26 26 83
rule_comparation     : 23 24
sentencia            : 5 7
short_assignment     : 16
usable_value         : 37 38 39 55 55 56 56 57 57 58 58 59 59 60 60 61 61 62 62 63 63 64 64 65 65 66 66 67 67 68 68
value                : 25 26 28 29 30 31 33 40 45 46 47 48 49 50 51 52 53 54 71 72 73 74 75 76 77 78 79 79 88 89 101
values               : 84 89

