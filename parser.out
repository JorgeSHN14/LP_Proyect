Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AMPERSAND
    AND
    ARROW_FUNCTION_TYPE
    ARROW_SEND_RECEIVE
    AS
    ASSERT
    BITWISE_AND_EQ
    BITWISE_OR_EQ
    BITWISE_XOR
    BITWISE_XOR_ASSIGN
    BITWISE_XOR_EQ
    BREAK
    CLASS
    COMMENT
    COMMENT_MULTI
    CONTINUE
    DEL
    DIVIDE
    DIVIDE_EQ
    ELIF
    ELLIPSIS
    ELSE
    ENTERE_DIVIDE
    EQUALEQUAL
    EXCEPT
    FALSE
    FAT_ARROW
    FINALLY
    FOR
    FROM
    GLOBAL
    GREATER
    GREATER_EQUAL
    GREATER_THAN
    HEX_NUMBER
    IF
    IMPORT
    IN
    IS
    LAMBDA
    LBRACKET
    LEFT_SHIFT_EQ
    LESS
    LESS_EQUAL
    LESS_THAN
    LKEY
    LOGICAL_AND
    LOGICAL_NOT
    LOGICAL_OR
    MINUS
    MINUS_EQ
    MODULE
    MODULO_EQ
    NONE
    NONLOCAL
    NOT
    NOT_EQUAL
    NULL
    OR
    PASS
    PIPE
    PLUS
    PLUS_EQ
    RAISE
    RBRACKET
    RETURN
    RIGHT_SHIFT_EQ
    RKEY
    SCIENTIFIC_NOTATION
    SHORT_VAR_DECL
    TIMES
    TIMES_EQ
    TRY
    WITH
    YIELD

Grammar

Rule 0     S' -> print
Rule 1     print -> FMT_LIBRARY DOT PRINTLN LPAREN value RPAREN
Rule 2     print -> FMT_LIBRARY DOT PRINTF LPAREN value RPAREN
Rule 3     sentencia -> print
Rule 4     sentencia -> assignment
Rule 5     sentencia -> while
Rule 6     sentencia -> def_function
Rule 7     sentencia -> call_function
Rule 8     assignment -> VAR IDENTIFIER data_type EQUAL value
Rule 9     assignment -> CONST IDENTIFIER data_type EQUAL value
Rule 10    while -> WHILE P_IZQ TRUE P_DER COLON sentence
Rule 11    def_function -> DEF IDENTIFIER LPAREN parameters RPAREN COLON sentence
Rule 12    call_function -> IDENTIFIER LPAREN valores RPAREN
Rule 13    parameters -> parameter
Rule 14    parameters -> parameters COMMA parameter
Rule 15    parameter -> IDENTIFIER data_type
Rule 16    values -> value
Rule 17    values -> values COMA value
Rule 18    data_type -> STRING
Rule 19    data_type -> INTEGER_DATA_TYPE
Rule 20    data_type -> FLOAT32_DATA_TYPE
Rule 21    data_type -> FLOAT64_DATA_TYPE
Rule 22    data_type -> BOOLEAN_DATA_TYPE
Rule 23    data_type -> STRING_DATA_TYPE
Rule 24    value -> STRING
Rule 25    value -> INTEGER
Rule 26    value -> FLOAT32
Rule 27    value -> FLOAT64
Rule 28    value -> BOOLEAN
Rule 29    input -> INPUT LPAREN RPAREN

Terminals, with rules where they appear

AMPERSAND            : 
AND                  : 
ARROW_FUNCTION_TYPE  : 
ARROW_SEND_RECEIVE   : 
AS                   : 
ASSERT               : 
BITWISE_AND_EQ       : 
BITWISE_OR_EQ        : 
BITWISE_XOR          : 
BITWISE_XOR_ASSIGN   : 
BITWISE_XOR_EQ       : 
BOOLEAN              : 28
BOOLEAN_DATA_TYPE    : 22
BREAK                : 
CLASS                : 
COLON                : 10 11
COMMA                : 14
COMMENT              : 
COMMENT_MULTI        : 
CONST                : 9
CONTINUE             : 
DEF                  : 11
DEL                  : 
DIVIDE               : 
DIVIDE_EQ            : 
DOT                  : 1 2
ELIF                 : 
ELLIPSIS             : 
ELSE                 : 
ENTERE_DIVIDE        : 
EQUAL                : 8 9
EQUALEQUAL           : 
EXCEPT               : 
FALSE                : 
FAT_ARROW            : 
FINALLY              : 
FLOAT32              : 26
FLOAT32_DATA_TYPE    : 20
FLOAT64              : 27
FLOAT64_DATA_TYPE    : 21
FMT_LIBRARY          : 1 2
FOR                  : 
FROM                 : 
GLOBAL               : 
GREATER              : 
GREATER_EQUAL        : 
GREATER_THAN         : 
HEX_NUMBER           : 
IDENTIFIER           : 8 9 11 12 15
IF                   : 
IMPORT               : 
IN                   : 
INTEGER              : 25
INTEGER_DATA_TYPE    : 19
IS                   : 
LAMBDA               : 
LBRACKET             : 
LEFT_SHIFT_EQ        : 
LESS                 : 
LESS_EQUAL           : 
LESS_THAN            : 
LKEY                 : 
LOGICAL_AND          : 
LOGICAL_NOT          : 
LOGICAL_OR           : 
LPAREN               : 1 2 11 12 29
MINUS                : 
MINUS_EQ             : 
MODULE               : 
MODULO_EQ            : 
NONE                 : 
NONLOCAL             : 
NOT                  : 
NOT_EQUAL            : 
NULL                 : 
OR                   : 
PASS                 : 
PIPE                 : 
PLUS                 : 
PLUS_EQ              : 
PRINTF               : 2
PRINTLN              : 1
RAISE                : 
RBRACKET             : 
RETURN               : 
RIGHT_SHIFT_EQ       : 
RKEY                 : 
RPAREN               : 1 2 11 12 29
SCIENTIFIC_NOTATION  : 
SHORT_VAR_DECL       : 
STRING               : 18 24
STRING_DATA_TYPE     : 23
TIMES                : 
TIMES_EQ             : 
TRUE                 : 10
TRY                  : 
VAR                  : 8
WHILE                : 10
WITH                 : 
YIELD                : 
error                : 

Nonterminals, with rules where they appear

COMA                 : 17
INPUT                : 29
P_DER                : 10
P_IZQ                : 10
assignment           : 4
call_function        : 7
data_type            : 8 9 15
def_function         : 6
input                : 
parameter            : 13 14
parameters           : 11 14
print                : 3 0
sentence             : 10 11
sentencia            : 
valores              : 12
value                : 1 2 8 9 16 17
values               : 17
while                : 5

