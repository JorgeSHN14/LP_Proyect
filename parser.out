Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AMPERSAND
    AND
    ARROW_FUNCTION_TYPE
    ARROW_SEND_RECEIVE
    AS
    ASSERT
    BITWISE_XOR
    BITWISE_XOR_ASSIGN
    CLASS
    COLON
    COMMENT
    COMMENT_MULTI
    CONTINUE
    DEL
    ELIF
    ELLIPSIS
    EXCEPT
    FALSE
    FAT_ARROW
    FINALLY
    FROM
    GLOBAL
    GREATER_THAN
    HEX_NUMBER
    IMPORT
    IN
    IS
    LAMBDA
    LBRACKET
    LESS_THAN
    NONE
    NONLOCAL
    NOT
    NULL
    OR
    PASS
    PIPE
    RAISE
    RBRACKET
    RETURN
    RULE_COMPARATION
    SCIENTIFIC_NOTATION
    TRUE
    TRY
    WITH
    YIELD

Grammar

Rule 0     S' -> loop_program
Rule 1     loop_program -> program
Rule 2     loop_program -> BREAK
Rule 3     loop_program -> loop_program program
Rule 4     loop_program -> loop_program BREAK
Rule 5     program -> sentencia
Rule 6     program -> loop
Rule 7     program -> program sentencia
Rule 8     program -> program loop
Rule 9     loop -> for
Rule 10    sentencia -> print
Rule 11    sentencia -> print_withoutvalue
Rule 12    sentencia -> def_function
Rule 13    sentencia -> call_function
Rule 14    sentencia -> input
Rule 15    sentencia -> assignment
Rule 16    sentencia -> short_assignment
Rule 17    sentencia -> arithmetic_operation
Rule 18    sentencia -> direct_arithmetic_operation
Rule 19    sentencia -> if_statement
Rule 20    sentencia -> function_call
Rule 21    for -> FOR LKEY loop_program RKEY
Rule 22    for -> FOR comparation_operation LKEY loop_program RKEY
Rule 23    function_call -> IDENTIFIER LPAREN values RPAREN
Rule 24    if_statement -> IF rule_comparation LKEY program RKEY
Rule 25    if_statement -> IF rule_comparation LKEY program RKEY ELSE LKEY program RKEY
Rule 26    if_statement -> IF value LKEY program RKEY
Rule 27    if_statement -> IF value LKEY program RKEY ELSE LKEY program RKEY
Rule 28    print -> FMT_LIBRARY DOT PRINTLN LPAREN data RPAREN
Rule 29    print -> FMT_LIBRARY DOT PRINTF LPAREN value RPAREN
Rule 30    print -> FMT_LIBRARY DOT PRINTF LPAREN value COMMA RPAREN
Rule 31    print -> FMT_LIBRARY DOT PRINTF LPAREN value COMMA data RPAREN
Rule 32    data -> value
Rule 33    data -> IDENTIFIER
Rule 34    data -> data COMMA value
Rule 35    data -> data COMMA IDENTIFIER
Rule 36    print_withoutvalue -> FMT_LIBRARY DOT PRINTLN LPAREN RPAREN
Rule 37    print_withoutvalue -> FMT_LIBRARY DOT PRINTF LPAREN RPAREN
Rule 38    assignment -> VAR IDENTIFIER data_type EQUAL usable_value
Rule 39    assignment -> CONST IDENTIFIER data_type EQUAL usable_value
Rule 40    short_assignment -> IDENTIFIER SHORT_VAR_DECL usable_value
Rule 41    usable_value -> value
Rule 42    usable_value -> call_function
Rule 43    usable_value -> IDENTIFIER
Rule 44    usable_value -> arithmetic_operation
Rule 45    usable_value -> comparation_operation
Rule 46    direct_arithmetic_operation -> IDENTIFIER PLUS_EQ value
Rule 47    direct_arithmetic_operation -> IDENTIFIER MINUS_EQ value
Rule 48    direct_arithmetic_operation -> IDENTIFIER TIMES_EQ value
Rule 49    direct_arithmetic_operation -> IDENTIFIER DIVIDE_EQ value
Rule 50    direct_arithmetic_operation -> IDENTIFIER MODULO_EQ value
Rule 51    direct_arithmetic_operation -> IDENTIFIER BITWISE_AND_EQ value
Rule 52    direct_arithmetic_operation -> IDENTIFIER BITWISE_OR_EQ value
Rule 53    direct_arithmetic_operation -> IDENTIFIER BITWISE_XOR_EQ value
Rule 54    direct_arithmetic_operation -> IDENTIFIER LEFT_SHIFT_EQ value
Rule 55    direct_arithmetic_operation -> IDENTIFIER RIGHT_SHIFT_EQ value
Rule 56    arithmetic_operation -> usable_value PLUS usable_value
Rule 57    arithmetic_operation -> usable_value MINUS usable_value
Rule 58    arithmetic_operation -> usable_value DIVIDE usable_value
Rule 59    arithmetic_operation -> usable_value TIMES usable_value
Rule 60    arithmetic_operation -> usable_value ENTERE_DIVIDE usable_value
Rule 61    arithmetic_operation -> usable_value MODULE usable_value
Rule 62    comparation_operation -> usable_value EQUALEQUAL usable_value
Rule 63    comparation_operation -> usable_value NOT_EQUAL usable_value
Rule 64    comparation_operation -> usable_value LESS_EQUAL usable_value
Rule 65    comparation_operation -> usable_value GREATER_EQUAL usable_value
Rule 66    comparation_operation -> usable_value LESS usable_value
Rule 67    comparation_operation -> usable_value GREATER usable_value
Rule 68    comparation_operation -> usable_value LOGICAL_AND usable_value
Rule 69    comparation_operation -> usable_value LOGICAL_OR usable_value
Rule 70    identifiers -> IDENTIFIER
Rule 71    identifiers -> identifiers COMMA identifiers
Rule 72    rule_comparation -> IDENTIFIER EQUALEQUAL value
Rule 73    rule_comparation -> IDENTIFIER NOT_EQUAL value
Rule 74    rule_comparation -> IDENTIFIER LESS_EQUAL value
Rule 75    rule_comparation -> IDENTIFIER GREATER_EQUAL value
Rule 76    rule_comparation -> IDENTIFIER LESS value
Rule 77    rule_comparation -> IDENTIFIER GREATER value
Rule 78    rule_comparation -> IDENTIFIER LOGICAL_AND value
Rule 79    rule_comparation -> IDENTIFIER LOGICAL_OR value
Rule 80    condition -> value comparation_operation value
Rule 81    condition -> condition LOGICAL_AND condition
Rule 82    condition -> condition LOGICAL_OR condition
Rule 83    condition -> LOGICAL_NOT condition
Rule 84    def_function -> FUNC IDENTIFIER LPAREN parameters RPAREN LKEY program RKEY
Rule 85    call_function -> IDENTIFIER LPAREN values RPAREN
Rule 86    parameters -> parameter
Rule 87    parameters -> parameters COMMA parameter
Rule 88    parameter -> IDENTIFIER data_type
Rule 89    values -> value
Rule 90    values -> values COMMA value
Rule 91    value -> STRING
Rule 92    value -> INTEGER
Rule 93    value -> FLOAT32
Rule 94    value -> FLOAT64
Rule 95    value -> BOOLEAN
Rule 96    data_type -> INTEGER_DATA_TYPE
Rule 97    data_type -> FLOAT32_DATA_TYPE
Rule 98    data_type -> FLOAT64_DATA_TYPE
Rule 99    data_type -> BOOLEAN_DATA_TYPE
Rule 100   data_type -> STRING_DATA_TYPE
Rule 101   input -> INPUT LPAREN RPAREN
Rule 102   input -> INPUT LPAREN value RPAREN
Rule 103   input -> INPUT LPAREN identifiers RPAREN

Terminals, with rules where they appear

AMPERSAND            : 
AND                  : 
ARROW_FUNCTION_TYPE  : 
ARROW_SEND_RECEIVE   : 
AS                   : 
ASSERT               : 
BITWISE_AND_EQ       : 51
BITWISE_OR_EQ        : 52
BITWISE_XOR          : 
BITWISE_XOR_ASSIGN   : 
BITWISE_XOR_EQ       : 53
BOOLEAN              : 95
BOOLEAN_DATA_TYPE    : 99
BREAK                : 2 4
CLASS                : 
COLON                : 
COMMA                : 30 31 34 35 71 87 90
COMMENT              : 
COMMENT_MULTI        : 
CONST                : 39
CONTINUE             : 
DEL                  : 
DIVIDE               : 58
DIVIDE_EQ            : 49
DOT                  : 28 29 30 31 36 37
ELIF                 : 
ELLIPSIS             : 
ELSE                 : 25 27
ENTERE_DIVIDE        : 60
EQUAL                : 38 39
EQUALEQUAL           : 62 72
EXCEPT               : 
FALSE                : 
FAT_ARROW            : 
FINALLY              : 
FLOAT32              : 93
FLOAT32_DATA_TYPE    : 97
FLOAT64              : 94
FLOAT64_DATA_TYPE    : 98
FMT_LIBRARY          : 28 29 30 31 36 37
FOR                  : 21 22
FROM                 : 
FUNC                 : 84
GLOBAL               : 
GREATER              : 67 77
GREATER_EQUAL        : 65 75
GREATER_THAN         : 
HEX_NUMBER           : 
IDENTIFIER           : 23 33 35 38 39 40 43 46 47 48 49 50 51 52 53 54 55 70 72 73 74 75 76 77 78 79 84 85 88
IF                   : 24 25 26 27
IMPORT               : 
IN                   : 
INPUT                : 101 102 103
INTEGER_DATA_TYPE    : 96
IS                   : 
LAMBDA               : 
LBRACKET             : 
LEFT_SHIFT_EQ        : 54
LESS                 : 66 76
LESS_EQUAL           : 64 74
LESS_THAN            : 
LKEY                 : 21 22 24 25 25 26 27 27 84
LOGICAL_AND          : 68 78 81
LOGICAL_NOT          : 83
LOGICAL_OR           : 69 79 82
LPAREN               : 23 28 29 30 31 36 37 84 85 101 102 103
MINUS                : 57
MINUS_EQ             : 47
MODULE               : 61
MODULO_EQ            : 50
NONE                 : 
NONLOCAL             : 
NOT                  : 
NOT_EQUAL            : 63 73
NULL                 : 
OR                   : 
PASS                 : 
PIPE                 : 
PLUS                 : 56
PLUS_EQ              : 46
PRINTF               : 29 30 31 37
PRINTLN              : 28 36
RAISE                : 
RBRACKET             : 
RETURN               : 
RIGHT_SHIFT_EQ       : 55
RKEY                 : 21 22 24 25 25 26 27 27 84
RPAREN               : 23 28 29 30 31 36 37 84 85 101 102 103
RULE_COMPARATION     : 
SCIENTIFIC_NOTATION  : 
SHORT_VAR_DECL       : 40
STRING               : 91
STRING_DATA_TYPE     : 100
TIMES                : 59
TIMES_EQ             : 48
TRUE                 : 
TRY                  : 
VAR                  : 38
WITH                 : 
YIELD                : 
error                : 

Nonterminals, with rules where they appear

INTEGER              : 92
arithmetic_operation : 17 44
assignment           : 15
call_function        : 13 42
comparation_operation : 22 45 80
condition            : 81 81 82 82 83
data                 : 28 31 34 35
data_type            : 38 39 88
def_function         : 12
direct_arithmetic_operation : 18
for                  : 9
function_call        : 20
identifiers          : 71 71 103
if_statement         : 19
input                : 14
loop                 : 6 8
loop_program         : 3 4 21 22 0
parameter            : 86 87
parameters           : 84 87
print                : 10
print_withoutvalue   : 11
program              : 1 3 7 8 24 25 25 26 27 27 84
rule_comparation     : 24 25
sentencia            : 5 7
short_assignment     : 16
usable_value         : 38 39 40 56 56 57 57 58 58 59 59 60 60 61 61 62 62 63 63 64 64 65 65 66 66 67 67 68 68 69 69
value                : 26 27 29 30 31 32 34 41 46 47 48 49 50 51 52 53 54 55 72 73 74 75 76 77 78 79 80 80 89 90 102
values               : 23 85 90

