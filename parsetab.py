
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AMPERSAND AND ARROW_FUNCTION_TYPE ARROW_SEND_RECEIVE AS ASSERT BITWISE_AND_EQ BITWISE_OR_EQ BITWISE_XOR BITWISE_XOR_ASSIGN BITWISE_XOR_EQ BOOLEAN BOOLEAN_DATA_TYPE BREAK CLASS COLON COMMA COMMENT COMMENT_MULTI CONST CONTINUE DEL DIVIDE DIVIDE_EQ DOT ELIF ELLIPSIS ELSE ENTERE_DIVIDE EQUAL EQUALEQUAL EXCEPT FALSE FAT_ARROW FINALLY FLOAT32 FLOAT32_DATA_TYPE FLOAT64 FLOAT64_DATA_TYPE FMT_LIBRARY FOR FROM FUNC GLOBAL GREATER GREATER_EQUAL GREATER_THAN HEX_NUMBER IDENTIFIER IF IMPORT IN INPUT INTEGER INTEGER_DATA_TYPE IS LAMBDA LBRACKET LEFT_SHIFT_EQ LESS LESS_EQUAL LESS_THAN LKEY LOGICAL_AND LOGICAL_NOT LOGICAL_OR LPAREN MINUS MINUS_EQ MODULE MODULO_EQ NONE NONLOCAL NOT NOT_EQUAL NULL OR PASS PIPE PLUS PLUS_EQ PRINTF PRINTLN RAISE RBRACKET RETURN RIGHT_SHIFT_EQ RKEY RPAREN SCIENTIFIC_NOTATION SHORT_VAR_DECL STRING STRING_DATA_TYPE TIMES TIMES_EQ TRUE TRY VAR WITH YIELD loop_program : program\n                  | BREAK\n                  | loop_program program\n                  | loop_program BREAK\n  program : sentencia\n             | loop\n             | program sentencia\n             | program loop\n  loop : for\n  sentencia : print\n               | print_withoutvalue\n               | def_function\n               | call_function\n               | input\n               | assignment\n               | short_assignment\n               | arithmetic_operation\n               | direct_arithmetic_operationfor : FOR LKEY loop_program RKEY\n         | FOR comparation_operation LKEY loop_program RKEYprint : FMT_LIBRARY DOT PRINTLN LPAREN data RPAREN\n           | FMT_LIBRARY DOT PRINTF LPAREN value RPAREN\n           | FMT_LIBRARY DOT PRINTF LPAREN value COMMA RPAREN\n           | FMT_LIBRARY DOT PRINTF LPAREN value COMMA data RPARENdata : value\n         | IDENTIFIER\n         | data COMMA value\n         | data COMMA IDENTIFIERprint_withoutvalue : FMT_LIBRARY DOT PRINTLN LPAREN RPAREN\n            | FMT_LIBRARY DOT PRINTF LPAREN RPARENassignment : VAR IDENTIFIER data_type EQUAL usable_value\n                | CONST IDENTIFIER data_type EQUAL usable_valueshort_assignment : IDENTIFIER SHORT_VAR_DECL usable_value usable_value : value\n                 | call_function\n                 | IDENTIFIER\n                 | arithmetic_operation\n                 | comparation_operation\n  \n    direct_arithmetic_operation : IDENTIFIER PLUS_EQ value\n                        | IDENTIFIER MINUS_EQ value\n                        | IDENTIFIER TIMES_EQ value\n                        | IDENTIFIER DIVIDE_EQ value\n                        | IDENTIFIER MODULO_EQ value\n                        | IDENTIFIER BITWISE_AND_EQ value\n                        | IDENTIFIER BITWISE_OR_EQ value\n                        | IDENTIFIER BITWISE_XOR_EQ value\n                        | IDENTIFIER LEFT_SHIFT_EQ value\n                        | IDENTIFIER RIGHT_SHIFT_EQ value\n    \n    arithmetic_operation : usable_value PLUS usable_value\n                        | usable_value MINUS usable_value\n                        | usable_value DIVIDE usable_value\n                        | usable_value TIMES usable_value\n                        | usable_value ENTERE_DIVIDE usable_value\n                        | usable_value MODULE usable_value\n    \n    comparation_operation : usable_value EQUALEQUAL usable_value\n                        | usable_value NOT_EQUAL usable_value\n                        | usable_value LESS_EQUAL usable_value\n                        | usable_value GREATER_EQUAL usable_value\n                        | usable_value LESS usable_value\n                        | usable_value GREATER usable_value\n                        | usable_value LOGICAL_AND usable_value\n                        | usable_value LOGICAL_OR usable_value\n    identifiers : IDENTIFIER\n                 | identifiers COMMA identifiersdef_function : FUNC IDENTIFIER LPAREN parameters RPAREN LKEY program RKEYcall_function : IDENTIFIER LPAREN values RPARENparameters : parameter\n                | parameters COMMA parameter parameter : IDENTIFIER data_typevalues : value\n            | values COMMA valuevalue : STRING\n          | INTEGER\n          | FLOAT32\n          | FLOAT64\n          | BOOLEANdata_type : INTEGER_DATA_TYPE\n               | FLOAT32_DATA_TYPE\n               | FLOAT64_DATA_TYPE\n               | BOOLEAN_DATA_TYPE\n               | STRING_DATA_TYPEinput : INPUT LPAREN RPAREN\n             | INPUT LPAREN value RPAREN\n             | INPUT LPAREN identifiers RPAREN\n    '
    
_lr_action_items = {'BREAK':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,25,26,27,28,29,30,31,32,33,34,66,69,70,71,77,78,79,80,81,82,83,84,85,86,87,88,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,120,122,123,127,128,130,134,140,141,142,143,145,151,154,155,],[3,32,-1,-2,-5,-6,-10,-11,-12,-13,-14,-15,-16,-17,-18,-9,-34,-38,-72,-73,-74,-75,-76,-3,-4,-7,-8,3,-35,-36,-37,-33,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-82,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,32,3,-66,-83,-84,-19,32,-29,-30,-31,-32,-20,-21,-22,-23,-24,-65,]),'FMT_LIBRARY':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,25,26,27,28,29,30,31,32,33,34,66,69,70,71,77,78,79,80,81,82,83,84,85,86,87,88,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,120,122,123,127,128,130,134,140,141,142,143,145,147,151,153,154,155,],[16,16,16,-2,-5,-6,-10,-11,-12,-13,-14,-15,-16,-17,-18,-9,-34,-38,-72,-73,-74,-75,-76,16,-4,-7,-8,16,-35,-36,-37,-33,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-82,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,16,16,-66,-83,-84,-19,16,-29,-30,-31,-32,-20,-21,-22,16,-23,16,-24,-65,]),'FUNC':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,25,26,27,28,29,30,31,32,33,34,66,69,70,71,77,78,79,80,81,82,83,84,85,86,87,88,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,120,122,123,127,128,130,134,140,141,142,143,145,147,151,153,154,155,],[18,18,18,-2,-5,-6,-10,-11,-12,-13,-14,-15,-16,-17,-18,-9,-34,-38,-72,-73,-74,-75,-76,18,-4,-7,-8,18,-35,-36,-37,-33,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-82,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,18,18,-66,-83,-84,-19,18,-29,-30,-31,-32,-20,-21,-22,18,-23,18,-24,-65,]),'IDENTIFIER':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,21,23,24,25,26,27,28,29,30,31,32,33,34,38,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,69,70,71,74,77,78,79,80,81,82,83,84,85,86,87,88,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,120,122,123,124,125,126,127,128,130,134,137,140,141,142,143,144,145,146,147,151,153,154,155,],[19,19,19,-2,-5,-6,-10,-11,-12,-13,-14,-15,-16,-17,-18,-9,-34,36,50,65,70,-38,-72,-73,-74,-75,-76,19,-4,-7,-8,70,91,70,70,70,70,70,70,70,70,70,70,70,70,70,70,19,-35,-36,-37,117,-33,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-82,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,19,19,132,-66,-83,-84,91,70,70,-19,19,-29,-30,117,-31,-32,-20,-21,150,-22,132,19,-23,19,-24,-65,]),'INPUT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,25,26,27,28,29,30,31,32,33,34,66,69,70,71,77,78,79,80,81,82,83,84,85,86,87,88,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,120,122,123,127,128,130,134,140,141,142,143,145,147,151,153,154,155,],[20,20,20,-2,-5,-6,-10,-11,-12,-13,-14,-15,-16,-17,-18,-9,-34,-38,-72,-73,-74,-75,-76,20,-4,-7,-8,20,-35,-36,-37,-33,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-82,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,20,20,-66,-83,-84,-19,20,-29,-30,-31,-32,-20,-21,-22,20,-23,20,-24,-65,]),'VAR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,25,26,27,28,29,30,31,32,33,34,66,69,70,71,77,78,79,80,81,82,83,84,85,86,87,88,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,120,122,123,127,128,130,134,140,141,142,143,145,147,151,153,154,155,],[21,21,21,-2,-5,-6,-10,-11,-12,-13,-14,-15,-16,-17,-18,-9,-34,-38,-72,-73,-74,-75,-76,21,-4,-7,-8,21,-35,-36,-37,-33,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-82,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,21,21,-66,-83,-84,-19,21,-29,-30,-31,-32,-20,-21,-22,21,-23,21,-24,-65,]),'CONST':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,25,26,27,28,29,30,31,32,33,34,66,69,70,71,77,78,79,80,81,82,83,84,85,86,87,88,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,120,122,123,127,128,130,134,140,141,142,143,145,147,151,153,154,155,],[23,23,23,-2,-5,-6,-10,-11,-12,-13,-14,-15,-16,-17,-18,-9,-34,-38,-72,-73,-74,-75,-76,23,-4,-7,-8,23,-35,-36,-37,-33,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-82,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,23,23,-66,-83,-84,-19,23,-29,-30,-31,-32,-20,-21,-22,23,-23,23,-24,-65,]),'FOR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,25,26,27,28,29,30,31,32,33,34,66,69,70,71,77,78,79,80,81,82,83,84,85,86,87,88,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,120,122,123,127,128,130,134,140,141,142,143,145,147,151,153,154,155,],[24,24,24,-2,-5,-6,-10,-11,-12,-13,-14,-15,-16,-17,-18,-9,-34,-38,-72,-73,-74,-75,-76,24,-4,-7,-8,24,-35,-36,-37,-33,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-82,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,24,24,-66,-83,-84,-19,24,-29,-30,-31,-32,-20,-21,-22,24,-23,24,-24,-65,]),'STRING':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,24,25,26,27,28,29,30,31,32,33,34,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,69,70,71,77,78,79,80,81,82,83,84,85,86,87,88,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,120,121,122,123,125,126,127,128,130,134,140,141,142,143,144,145,146,147,151,153,154,155,],[26,26,26,-2,-5,-6,-10,-11,-12,-13,-14,-15,-16,-17,-18,-9,-34,26,-38,-72,-73,-74,-75,-76,26,-4,-7,-8,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-35,-36,-37,-33,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-82,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,26,26,26,26,-66,26,-83,-84,26,26,-19,26,-29,-30,-31,-32,-20,-21,26,-22,26,26,-23,26,-24,-65,]),'INTEGER':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,24,25,26,27,28,29,30,31,32,33,34,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,69,70,71,77,78,79,80,81,82,83,84,85,86,87,88,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,120,121,122,123,125,126,127,128,130,134,140,141,142,143,144,145,146,147,151,153,154,155,],[27,27,27,-2,-5,-6,-10,-11,-12,-13,-14,-15,-16,-17,-18,-9,-34,27,-38,-72,-73,-74,-75,-76,27,-4,-7,-8,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-35,-36,-37,-33,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-82,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,27,27,27,27,-66,27,-83,-84,27,27,-19,27,-29,-30,-31,-32,-20,-21,27,-22,27,27,-23,27,-24,-65,]),'FLOAT32':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,24,25,26,27,28,29,30,31,32,33,34,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,69,70,71,77,78,79,80,81,82,83,84,85,86,87,88,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,120,121,122,123,125,126,127,128,130,134,140,141,142,143,144,145,146,147,151,153,154,155,],[28,28,28,-2,-5,-6,-10,-11,-12,-13,-14,-15,-16,-17,-18,-9,-34,28,-38,-72,-73,-74,-75,-76,28,-4,-7,-8,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-35,-36,-37,-33,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-82,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,28,28,28,28,-66,28,-83,-84,28,28,-19,28,-29,-30,-31,-32,-20,-21,28,-22,28,28,-23,28,-24,-65,]),'FLOAT64':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,24,25,26,27,28,29,30,31,32,33,34,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,69,70,71,77,78,79,80,81,82,83,84,85,86,87,88,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,120,121,122,123,125,126,127,128,130,134,140,141,142,143,144,145,146,147,151,153,154,155,],[29,29,29,-2,-5,-6,-10,-11,-12,-13,-14,-15,-16,-17,-18,-9,-34,29,-38,-72,-73,-74,-75,-76,29,-4,-7,-8,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-35,-36,-37,-33,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-82,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,29,29,29,29,-66,29,-83,-84,29,29,-19,29,-29,-30,-31,-32,-20,-21,29,-22,29,29,-23,29,-24,-65,]),'BOOLEAN':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,24,25,26,27,28,29,30,31,32,33,34,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,69,70,71,77,78,79,80,81,82,83,84,85,86,87,88,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,120,121,122,123,125,126,127,128,130,134,140,141,142,143,144,145,146,147,151,153,154,155,],[30,30,30,-2,-5,-6,-10,-11,-12,-13,-14,-15,-16,-17,-18,-9,-34,30,-38,-72,-73,-74,-75,-76,30,-4,-7,-8,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-35,-36,-37,-33,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-82,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,30,30,30,30,-66,30,-83,-84,30,30,-19,30,-29,-30,-31,-32,-20,-21,30,-22,30,30,-23,30,-24,-65,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,25,26,27,28,29,30,31,32,33,34,69,70,71,77,78,79,80,81,82,83,84,85,86,87,88,98,99,100,101,102,103,104,105,106,107,108,109,110,111,120,122,123,127,130,134,140,141,142,143,145,151,154,155,],[0,-1,-2,-5,-6,-10,-11,-12,-13,-14,-15,-16,-17,-18,-9,-34,-38,-72,-73,-74,-75,-76,-3,-4,-7,-8,-35,-36,-37,-33,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-82,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-66,-83,-84,-19,-29,-30,-31,-32,-20,-21,-22,-23,-24,-65,]),'RKEY':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,25,26,27,28,29,30,31,32,33,34,69,70,71,77,78,79,80,81,82,83,84,85,86,87,88,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,120,122,123,127,128,130,134,140,141,142,143,145,151,153,154,155,],[-1,-2,-5,-6,-10,-11,-12,-13,-14,-15,-16,-17,-18,-9,-34,-38,-72,-73,-74,-75,-76,-3,-4,-7,-8,-35,-36,-37,-33,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-82,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,127,-66,-83,-84,-19,142,-29,-30,-31,-32,-20,-21,-22,-23,155,-24,-65,]),'PLUS':([9,13,17,19,22,25,26,27,28,29,30,67,68,69,70,71,77,98,99,100,101,102,103,104,105,106,107,108,109,110,111,120,140,141,],[-35,-37,-34,-36,51,-38,-72,-73,-74,-75,-76,-38,51,-35,-36,-37,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-66,51,51,]),'MINUS':([9,13,17,19,22,25,26,27,28,29,30,67,68,69,70,71,77,98,99,100,101,102,103,104,105,106,107,108,109,110,111,120,140,141,],[-35,-37,-34,-36,52,-38,-72,-73,-74,-75,-76,-38,52,-35,-36,-37,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-66,52,52,]),'DIVIDE':([9,13,17,19,22,25,26,27,28,29,30,67,68,69,70,71,77,98,99,100,101,102,103,104,105,106,107,108,109,110,111,120,140,141,],[-35,-37,-34,-36,53,-38,-72,-73,-74,-75,-76,-38,53,-35,-36,-37,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-66,53,53,]),'TIMES':([9,13,17,19,22,25,26,27,28,29,30,67,68,69,70,71,77,98,99,100,101,102,103,104,105,106,107,108,109,110,111,120,140,141,],[-35,-37,-34,-36,54,-38,-72,-73,-74,-75,-76,-38,54,-35,-36,-37,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-66,54,54,]),'ENTERE_DIVIDE':([9,13,17,19,22,25,26,27,28,29,30,67,68,69,70,71,77,98,99,100,101,102,103,104,105,106,107,108,109,110,111,120,140,141,],[-35,-37,-34,-36,55,-38,-72,-73,-74,-75,-76,-38,55,-35,-36,-37,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-66,55,55,]),'MODULE':([9,13,17,19,22,25,26,27,28,29,30,67,68,69,70,71,77,98,99,100,101,102,103,104,105,106,107,108,109,110,111,120,140,141,],[-35,-37,-34,-36,56,-38,-72,-73,-74,-75,-76,-38,56,-35,-36,-37,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-66,56,56,]),'EQUALEQUAL':([9,13,17,19,22,25,26,27,28,29,30,67,68,69,70,71,77,98,99,100,101,102,103,104,105,106,107,108,109,110,111,120,140,141,],[-35,-37,-34,-36,57,-38,-72,-73,-74,-75,-76,-38,57,-35,-36,-37,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-66,57,57,]),'NOT_EQUAL':([9,13,17,19,22,25,26,27,28,29,30,67,68,69,70,71,77,98,99,100,101,102,103,104,105,106,107,108,109,110,111,120,140,141,],[-35,-37,-34,-36,58,-38,-72,-73,-74,-75,-76,-38,58,-35,-36,-37,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-66,58,58,]),'LESS_EQUAL':([9,13,17,19,22,25,26,27,28,29,30,67,68,69,70,71,77,98,99,100,101,102,103,104,105,106,107,108,109,110,111,120,140,141,],[-35,-37,-34,-36,59,-38,-72,-73,-74,-75,-76,-38,59,-35,-36,-37,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-66,59,59,]),'GREATER_EQUAL':([9,13,17,19,22,25,26,27,28,29,30,67,68,69,70,71,77,98,99,100,101,102,103,104,105,106,107,108,109,110,111,120,140,141,],[-35,-37,-34,-36,60,-38,-72,-73,-74,-75,-76,-38,60,-35,-36,-37,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-66,60,60,]),'LESS':([9,13,17,19,22,25,26,27,28,29,30,67,68,69,70,71,77,98,99,100,101,102,103,104,105,106,107,108,109,110,111,120,140,141,],[-35,-37,-34,-36,61,-38,-72,-73,-74,-75,-76,-38,61,-35,-36,-37,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-66,61,61,]),'GREATER':([9,13,17,19,22,25,26,27,28,29,30,67,68,69,70,71,77,98,99,100,101,102,103,104,105,106,107,108,109,110,111,120,140,141,],[-35,-37,-34,-36,62,-38,-72,-73,-74,-75,-76,-38,62,-35,-36,-37,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-66,62,62,]),'LOGICAL_AND':([9,13,17,19,22,25,26,27,28,29,30,67,68,69,70,71,77,98,99,100,101,102,103,104,105,106,107,108,109,110,111,120,140,141,],[-35,-37,-34,-36,63,-38,-72,-73,-74,-75,-76,-38,63,-35,-36,-37,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-66,63,63,]),'LOGICAL_OR':([9,13,17,19,22,25,26,27,28,29,30,67,68,69,70,71,77,98,99,100,101,102,103,104,105,106,107,108,109,110,111,120,140,141,],[-35,-37,-34,-36,64,-38,-72,-73,-74,-75,-76,-38,64,-35,-36,-37,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-66,64,64,]),'DOT':([16,],[35,]),'LKEY':([17,24,25,26,27,28,29,30,67,69,70,71,98,99,100,101,102,103,104,105,106,107,108,109,110,111,120,136,],[-34,66,-38,-72,-73,-74,-75,-76,114,-35,-36,-37,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-66,147,]),'LPAREN':([19,20,36,70,72,73,],[37,49,74,37,115,116,]),'SHORT_VAR_DECL':([19,],[38,]),'PLUS_EQ':([19,],[39,]),'MINUS_EQ':([19,],[40,]),'TIMES_EQ':([19,],[41,]),'DIVIDE_EQ':([19,],[42,]),'MODULO_EQ':([19,],[43,]),'BITWISE_AND_EQ':([19,],[44,]),'BITWISE_OR_EQ':([19,],[45,]),'BITWISE_XOR_EQ':([19,],[46,]),'LEFT_SHIFT_EQ':([19,],[47,]),'RIGHT_SHIFT_EQ':([19,],[48,]),'RPAREN':([26,27,28,29,30,49,75,76,89,90,91,93,94,95,96,97,115,116,118,119,129,131,132,133,135,138,139,146,148,149,150,152,],[-72,-73,-74,-75,-76,88,120,-70,122,123,-63,-77,-78,-79,-80,-81,130,134,136,-67,143,-25,-26,145,-69,-71,-64,151,-68,-27,-28,154,]),'COMMA':([26,27,28,29,30,75,76,90,91,93,94,95,96,97,118,119,129,131,132,133,135,138,139,148,149,150,152,],[-72,-73,-74,-75,-76,121,-70,124,-63,-77,-78,-79,-80,-81,137,-67,144,-25,-26,146,-69,-71,124,-68,-27,-28,144,]),'PRINTLN':([35,],[72,]),'PRINTF':([35,],[73,]),'INTEGER_DATA_TYPE':([50,65,117,],[93,93,93,]),'FLOAT32_DATA_TYPE':([50,65,117,],[94,94,94,]),'FLOAT64_DATA_TYPE':([50,65,117,],[95,95,95,]),'BOOLEAN_DATA_TYPE':([50,65,117,],[96,96,96,]),'STRING_DATA_TYPE':([50,65,117,],[97,97,97,]),'EQUAL':([92,93,94,95,96,97,112,],[125,-77,-78,-79,-80,-81,126,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'loop_program':([0,66,114,],[1,113,128,]),'program':([0,1,66,113,114,128,147,],[2,31,2,31,2,31,153,]),'sentencia':([0,1,2,31,66,113,114,128,147,153,],[4,4,33,33,4,4,4,4,4,33,]),'loop':([0,1,2,31,66,113,114,128,147,153,],[5,5,34,34,5,5,5,5,5,34,]),'print':([0,1,2,31,66,113,114,128,147,153,],[6,6,6,6,6,6,6,6,6,6,]),'print_withoutvalue':([0,1,2,31,66,113,114,128,147,153,],[7,7,7,7,7,7,7,7,7,7,]),'def_function':([0,1,2,31,66,113,114,128,147,153,],[8,8,8,8,8,8,8,8,8,8,]),'call_function':([0,1,2,24,31,38,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,113,114,125,126,128,147,153,],[9,9,9,69,9,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,9,9,9,69,69,9,9,9,]),'input':([0,1,2,31,66,113,114,128,147,153,],[10,10,10,10,10,10,10,10,10,10,]),'assignment':([0,1,2,31,66,113,114,128,147,153,],[11,11,11,11,11,11,11,11,11,11,]),'short_assignment':([0,1,2,31,66,113,114,128,147,153,],[12,12,12,12,12,12,12,12,12,12,]),'arithmetic_operation':([0,1,2,24,31,38,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,113,114,125,126,128,147,153,],[13,13,13,71,13,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,13,13,13,71,71,13,13,13,]),'direct_arithmetic_operation':([0,1,2,31,66,113,114,128,147,153,],[14,14,14,14,14,14,14,14,14,14,]),'for':([0,1,2,31,66,113,114,128,147,153,],[15,15,15,15,15,15,15,15,15,15,]),'value':([0,1,2,24,31,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,113,114,115,116,121,125,126,128,144,146,147,153,],[17,17,17,17,17,76,17,78,79,80,81,82,83,84,85,86,87,89,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,131,133,138,17,17,17,149,131,17,17,]),'usable_value':([0,1,2,24,31,38,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,113,114,125,126,128,147,153,],[22,22,22,68,22,77,98,99,100,101,102,103,104,105,106,107,108,109,110,111,22,22,22,140,141,22,22,22,]),'comparation_operation':([0,1,2,24,31,38,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,113,114,125,126,128,147,153,],[25,25,25,67,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'values':([37,],[75,]),'identifiers':([49,124,],[90,139,]),'data_type':([50,65,117,],[92,112,135,]),'parameters':([74,],[118,]),'parameter':([74,137,],[119,148,]),'data':([115,146,],[129,152,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> loop_program","S'",1,None,None,None),
  ('loop_program -> program','loop_program',1,'p_loop_program','syntax_analyzer.py',5),
  ('loop_program -> BREAK','loop_program',1,'p_loop_program','syntax_analyzer.py',6),
  ('loop_program -> loop_program program','loop_program',2,'p_loop_program','syntax_analyzer.py',7),
  ('loop_program -> loop_program BREAK','loop_program',2,'p_loop_program','syntax_analyzer.py',8),
  ('program -> sentencia','program',1,'p_program','syntax_analyzer.py',12),
  ('program -> loop','program',1,'p_program','syntax_analyzer.py',13),
  ('program -> program sentencia','program',2,'p_program','syntax_analyzer.py',14),
  ('program -> program loop','program',2,'p_program','syntax_analyzer.py',15),
  ('loop -> for','loop',1,'p_loop','syntax_analyzer.py',19),
  ('sentencia -> print','sentencia',1,'p_sentencia','syntax_analyzer.py',23),
  ('sentencia -> print_withoutvalue','sentencia',1,'p_sentencia','syntax_analyzer.py',24),
  ('sentencia -> def_function','sentencia',1,'p_sentencia','syntax_analyzer.py',25),
  ('sentencia -> call_function','sentencia',1,'p_sentencia','syntax_analyzer.py',26),
  ('sentencia -> input','sentencia',1,'p_sentencia','syntax_analyzer.py',27),
  ('sentencia -> assignment','sentencia',1,'p_sentencia','syntax_analyzer.py',28),
  ('sentencia -> short_assignment','sentencia',1,'p_sentencia','syntax_analyzer.py',29),
  ('sentencia -> arithmetic_operation','sentencia',1,'p_sentencia','syntax_analyzer.py',30),
  ('sentencia -> direct_arithmetic_operation','sentencia',1,'p_sentencia','syntax_analyzer.py',31),
  ('for -> FOR LKEY loop_program RKEY','for',4,'p_for','syntax_analyzer.py',36),
  ('for -> FOR comparation_operation LKEY loop_program RKEY','for',5,'p_for','syntax_analyzer.py',37),
  ('print -> FMT_LIBRARY DOT PRINTLN LPAREN data RPAREN','print',6,'p_print','syntax_analyzer.py',43),
  ('print -> FMT_LIBRARY DOT PRINTF LPAREN value RPAREN','print',6,'p_print','syntax_analyzer.py',44),
  ('print -> FMT_LIBRARY DOT PRINTF LPAREN value COMMA RPAREN','print',7,'p_print','syntax_analyzer.py',45),
  ('print -> FMT_LIBRARY DOT PRINTF LPAREN value COMMA data RPAREN','print',8,'p_print','syntax_analyzer.py',46),
  ('data -> value','data',1,'p_data','syntax_analyzer.py',49),
  ('data -> IDENTIFIER','data',1,'p_data','syntax_analyzer.py',50),
  ('data -> data COMMA value','data',3,'p_data','syntax_analyzer.py',51),
  ('data -> data COMMA IDENTIFIER','data',3,'p_data','syntax_analyzer.py',52),
  ('print_withoutvalue -> FMT_LIBRARY DOT PRINTLN LPAREN RPAREN','print_withoutvalue',5,'p_print_withoutvalue','syntax_analyzer.py',55),
  ('print_withoutvalue -> FMT_LIBRARY DOT PRINTF LPAREN RPAREN','print_withoutvalue',5,'p_print_withoutvalue','syntax_analyzer.py',56),
  ('assignment -> VAR IDENTIFIER data_type EQUAL usable_value','assignment',5,'p_assignment','syntax_analyzer.py',59),
  ('assignment -> CONST IDENTIFIER data_type EQUAL usable_value','assignment',5,'p_assignment','syntax_analyzer.py',60),
  ('short_assignment -> IDENTIFIER SHORT_VAR_DECL usable_value','short_assignment',3,'p_short_assignment','syntax_analyzer.py',63),
  ('usable_value -> value','usable_value',1,'p_usable_value','syntax_analyzer.py',66),
  ('usable_value -> call_function','usable_value',1,'p_usable_value','syntax_analyzer.py',67),
  ('usable_value -> IDENTIFIER','usable_value',1,'p_usable_value','syntax_analyzer.py',68),
  ('usable_value -> arithmetic_operation','usable_value',1,'p_usable_value','syntax_analyzer.py',69),
  ('usable_value -> comparation_operation','usable_value',1,'p_usable_value','syntax_analyzer.py',70),
  ('direct_arithmetic_operation -> IDENTIFIER PLUS_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',76),
  ('direct_arithmetic_operation -> IDENTIFIER MINUS_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',77),
  ('direct_arithmetic_operation -> IDENTIFIER TIMES_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',78),
  ('direct_arithmetic_operation -> IDENTIFIER DIVIDE_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',79),
  ('direct_arithmetic_operation -> IDENTIFIER MODULO_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',80),
  ('direct_arithmetic_operation -> IDENTIFIER BITWISE_AND_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',81),
  ('direct_arithmetic_operation -> IDENTIFIER BITWISE_OR_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',82),
  ('direct_arithmetic_operation -> IDENTIFIER BITWISE_XOR_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',83),
  ('direct_arithmetic_operation -> IDENTIFIER LEFT_SHIFT_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',84),
  ('direct_arithmetic_operation -> IDENTIFIER RIGHT_SHIFT_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',85),
  ('arithmetic_operation -> usable_value PLUS usable_value','arithmetic_operation',3,'p_arithmetic_operation','syntax_analyzer.py',90),
  ('arithmetic_operation -> usable_value MINUS usable_value','arithmetic_operation',3,'p_arithmetic_operation','syntax_analyzer.py',91),
  ('arithmetic_operation -> usable_value DIVIDE usable_value','arithmetic_operation',3,'p_arithmetic_operation','syntax_analyzer.py',92),
  ('arithmetic_operation -> usable_value TIMES usable_value','arithmetic_operation',3,'p_arithmetic_operation','syntax_analyzer.py',93),
  ('arithmetic_operation -> usable_value ENTERE_DIVIDE usable_value','arithmetic_operation',3,'p_arithmetic_operation','syntax_analyzer.py',94),
  ('arithmetic_operation -> usable_value MODULE usable_value','arithmetic_operation',3,'p_arithmetic_operation','syntax_analyzer.py',95),
  ('comparation_operation -> usable_value EQUALEQUAL usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',102),
  ('comparation_operation -> usable_value NOT_EQUAL usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',103),
  ('comparation_operation -> usable_value LESS_EQUAL usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',104),
  ('comparation_operation -> usable_value GREATER_EQUAL usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',105),
  ('comparation_operation -> usable_value LESS usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',106),
  ('comparation_operation -> usable_value GREATER usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',107),
  ('comparation_operation -> usable_value LOGICAL_AND usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',108),
  ('comparation_operation -> usable_value LOGICAL_OR usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',109),
  ('identifiers -> IDENTIFIER','identifiers',1,'p_identifiers','syntax_analyzer.py',114),
  ('identifiers -> identifiers COMMA identifiers','identifiers',3,'p_identifiers','syntax_analyzer.py',115),
  ('def_function -> FUNC IDENTIFIER LPAREN parameters RPAREN LKEY program RKEY','def_function',8,'p_def_function','syntax_analyzer.py',120),
  ('call_function -> IDENTIFIER LPAREN values RPAREN','call_function',4,'p_call_funcion','syntax_analyzer.py',123),
  ('parameters -> parameter','parameters',1,'p_parameters','syntax_analyzer.py',126),
  ('parameters -> parameters COMMA parameter','parameters',3,'p_parameters','syntax_analyzer.py',127),
  ('parameter -> IDENTIFIER data_type','parameter',2,'p_parameter','syntax_analyzer.py',130),
  ('values -> value','values',1,'p_values','syntax_analyzer.py',133),
  ('values -> values COMMA value','values',3,'p_values','syntax_analyzer.py',134),
  ('value -> STRING','value',1,'p_value','syntax_analyzer.py',138),
  ('value -> INTEGER','value',1,'p_value','syntax_analyzer.py',139),
  ('value -> FLOAT32','value',1,'p_value','syntax_analyzer.py',140),
  ('value -> FLOAT64','value',1,'p_value','syntax_analyzer.py',141),
  ('value -> BOOLEAN','value',1,'p_value','syntax_analyzer.py',142),
  ('data_type -> INTEGER_DATA_TYPE','data_type',1,'p_data_type','syntax_analyzer.py',145),
  ('data_type -> FLOAT32_DATA_TYPE','data_type',1,'p_data_type','syntax_analyzer.py',146),
  ('data_type -> FLOAT64_DATA_TYPE','data_type',1,'p_data_type','syntax_analyzer.py',147),
  ('data_type -> BOOLEAN_DATA_TYPE','data_type',1,'p_data_type','syntax_analyzer.py',148),
  ('data_type -> STRING_DATA_TYPE','data_type',1,'p_data_type','syntax_analyzer.py',149),
  ('input -> INPUT LPAREN RPAREN','input',3,'p_input','syntax_analyzer.py',153),
  ('input -> INPUT LPAREN value RPAREN','input',4,'p_input','syntax_analyzer.py',154),
  ('input -> INPUT LPAREN identifiers RPAREN','input',4,'p_input','syntax_analyzer.py',155),
]
