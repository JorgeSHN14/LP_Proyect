
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AMPERSAND AND ARROW_FUNCTION_TYPE ARROW_SEND_RECEIVE AS ASSERT BITWISE_AND_EQ BITWISE_OR_EQ BITWISE_XOR BITWISE_XOR_ASSIGN BITWISE_XOR_EQ BOOLEAN BOOLEAN_DATA_TYPE BREAK CASE CLASS COLON COMMA COMMENT COMMENT_MULTI CONST CONTINUE DEFAULT DEL DIVIDE DIVIDE_EQ DOT ELIF ELLIPSIS ELSE ENTERE_DIVIDE EQUAL EQUALEQUAL EXCEPT FALSE FAT_ARROW FINALLY FLOAT32 FLOAT32_DATA_TYPE FLOAT64 FLOAT64_DATA_TYPE FMT_LIBRARY FOR FROM FUNC GLOBAL GREATER GREATER_EQUAL GREATER_THAN HEX_NUMBER IDENTIFIER IF IMPORT IN INPUT INTEGER INTEGER_DATA_TYPE IS LAMBDA LBRACKET LEFT_SHIFT_EQ LESS LESS_EQUAL LESS_THAN LKEY LOGICAL_AND LOGICAL_NOT LOGICAL_OR LPAREN MINUS MINUS_EQ MODULE MODULO_EQ NONE NONLOCAL NOT NOT_EQUAL NULL OR PASS PIPE PLUS PLUS_EQ PRINTF PRINTLN RAISE RBRACKET RETURN RIGHT_SHIFT_EQ RKEY RPAREN RULE_COMPARATION SCIENTIFIC_NOTATION SHORT_VAR_DECL STRING STRING_DATA_TYPE SWITCH TIMES TIMES_EQ TRUE TRY VAR WITH YIELD loop_program : program\n                  | BREAK\n                  | loop_program program\n                  | loop_program BREAK\n  program : sentencia\n             | loop\n             | program sentencia\n             | program loop\n  loop : for\n  sentencia : print\n               | print_withoutvalue\n               | def_function\n               | call_function\n               | input\n               | assignment\n               | short_assignment\n               | arithmetic_operation\n               | direct_arithmetic_operation\n               | if_statement\n               | function_call\n               | switch_statementfor : FOR LKEY loop_program RKEY\n         | FOR comparation_operation LKEY loop_program RKEYfunction_call : IDENTIFIER LPAREN values RPARENif_statement : IF rule_comparation LKEY program RKEY\n                    | IF rule_comparation LKEY program RKEY ELSE LKEY program RKEY\n                    | IF value LKEY program RKEY\n                    | IF value LKEY program RKEY ELSE LKEY program RKEY\n    \n    switch_statement : SWITCH expression LKEY case_clauses RKEY\n                     | SWITCH expression LKEY case_clauses DEFAULT COLON statements RKEY\n    \n    case_clauses : case_clause case_clauses\n                 |\n    \n    case_clause : CASE value COLON statements\n    \n    statements : statement statements\n              |\n    statement : print\n                 | print_withoutvalue\n                 | def_function\n                 | call_function\n                 | input\n                 | assignment\n                 | short_assignment\n                 | arithmetic_operation\n                 | direct_arithmetic_operation\n                 | if_statement\n                 | function_call\n                 | switch_statement\n                 | statement\n    \n    expression : value\n               | expression PLUS expression\n               | expression MINUS expression\n               | expression TIMES expression\n               | expression DIVIDE expression\n               | expression ENTERE_DIVIDE expression\n               | expression MODULE expression\n               | expression EQUALEQUAL expression\n               | expression NOT_EQUAL expression\n               | expression LESS_EQUAL expression\n               | expression GREATER_EQUAL expression\n               | expression LESS expression\n               | expression GREATER expression\n               | expression LOGICAL_AND expression\n               | expression LOGICAL_OR expression\n    print : FMT_LIBRARY DOT PRINTLN LPAREN data RPAREN\n           | FMT_LIBRARY DOT PRINTF LPAREN value RPAREN\n           | FMT_LIBRARY DOT PRINTF LPAREN value COMMA RPAREN\n           | FMT_LIBRARY DOT PRINTF LPAREN value COMMA data RPARENdata : value\n         | IDENTIFIER\n         | data COMMA value\n         | data COMMA IDENTIFIERprint_withoutvalue : FMT_LIBRARY DOT PRINTLN LPAREN RPAREN\n            | FMT_LIBRARY DOT PRINTF LPAREN RPARENassignment : VAR IDENTIFIER data_type EQUAL usable_value\n                | CONST IDENTIFIER data_type EQUAL usable_valueshort_assignment : IDENTIFIER SHORT_VAR_DECL usable_value usable_value : value\n                 | call_function\n                 | IDENTIFIER\n                 | arithmetic_operation\n                 | comparation_operation\n  \n  direct_arithmetic_operation : IDENTIFIER PLUS_EQ value\n                      | IDENTIFIER MINUS_EQ value\n                      | IDENTIFIER TIMES_EQ value\n                      | IDENTIFIER DIVIDE_EQ value\n                      | IDENTIFIER MODULO_EQ value\n                      | IDENTIFIER BITWISE_AND_EQ value\n                      | IDENTIFIER BITWISE_OR_EQ value\n                      | IDENTIFIER BITWISE_XOR_EQ value\n                      | IDENTIFIER LEFT_SHIFT_EQ value\n                      | IDENTIFIER RIGHT_SHIFT_EQ value\n  \n  arithmetic_operation : usable_value PLUS usable_value\n                      | usable_value MINUS usable_value\n                      | usable_value DIVIDE usable_value\n                      | usable_value TIMES usable_value\n                      | usable_value ENTERE_DIVIDE usable_value\n                      | usable_value MODULE usable_value\n  \n    comparation_operation : usable_value EQUALEQUAL usable_value\n                        | usable_value NOT_EQUAL usable_value\n                        | usable_value LESS_EQUAL usable_value\n                        | usable_value GREATER_EQUAL usable_value\n                        | usable_value LESS usable_value\n                        | usable_value GREATER usable_value\n                        | usable_value LOGICAL_AND usable_value\n                        | usable_value LOGICAL_OR usable_value\n    identifiers : IDENTIFIER\n                 | identifiers COMMA identifiersrule_comparation : IDENTIFIER EQUALEQUAL value\n                        | IDENTIFIER NOT_EQUAL value\n                        | IDENTIFIER LESS_EQUAL value\n                        | IDENTIFIER GREATER_EQUAL value\n                        | IDENTIFIER LESS value\n                        | IDENTIFIER GREATER value\n                        | IDENTIFIER LOGICAL_AND value\n                        | IDENTIFIER LOGICAL_OR value\n    condition : value comparation_operation value\n              | condition LOGICAL_AND condition\n              | condition LOGICAL_OR condition\n              | LOGICAL_NOT condition\n    def_function : FUNC IDENTIFIER LPAREN parameters RPAREN LKEY program RKEYcall_function : IDENTIFIER LPAREN values RPARENparameters : parameter\n                | parameters COMMA parameter parameter : IDENTIFIER data_typevalues : value\n            | values COMMA valuevalue : STRING\n          | INTEGER\n          | FLOAT32\n          | FLOAT64\n          | BOOLEAN\n          | IDENTIFIERdata_type : INTEGER_DATA_TYPE\n               | FLOAT32_DATA_TYPE\n               | FLOAT64_DATA_TYPE\n               | BOOLEAN_DATA_TYPE\n               | STRING_DATA_TYPEinput : INPUT LPAREN RPAREN\n             | INPUT LPAREN value RPAREN\n             | INPUT LPAREN identifiers RPAREN\n    '
    
_lr_action_items = {'BREAK':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,30,31,32,33,34,35,36,37,38,39,76,77,80,81,82,88,89,90,91,92,93,94,95,96,97,98,99,109,110,111,112,113,114,115,116,117,118,119,120,121,122,149,150,157,159,160,191,192,195,199,206,207,208,209,210,214,215,216,218,228,248,249,252,254,255,],[3,37,-1,-2,-5,-6,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-9,-77,-81,-127,-128,-129,-130,-131,-3,-4,-7,-8,-132,3,-78,-79,-80,-76,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-138,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,37,3,-24,-139,-140,-22,37,-72,-73,-74,-75,-25,-27,-29,-23,-121,-64,-65,-66,-67,-120,-30,-26,-28,]),'FMT_LIBRARY':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,30,31,32,33,34,35,36,37,38,39,76,77,80,81,82,88,89,90,91,92,93,94,95,96,97,98,99,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,149,150,157,159,160,164,165,191,192,195,199,206,207,208,209,210,214,215,216,218,220,224,225,228,230,231,232,234,235,236,237,238,239,240,241,242,243,244,245,246,248,249,250,251,252,254,255,],[19,19,19,-2,-5,-6,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-9,-77,-81,-127,-128,-129,-130,-131,19,-4,-7,-8,-132,19,-78,-79,-80,-76,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-138,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,19,19,19,19,-24,-139,-140,19,19,-22,19,-72,-73,-74,-75,-25,-27,-29,-23,-121,-64,-65,19,19,19,-66,19,19,19,19,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-67,-120,19,19,-30,-26,-28,]),'FUNC':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,30,31,32,33,34,35,36,37,38,39,76,77,80,81,82,88,89,90,91,92,93,94,95,96,97,98,99,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,149,150,157,159,160,164,165,191,192,195,199,206,207,208,209,210,214,215,216,218,220,224,225,228,230,231,232,234,235,236,237,238,239,240,241,242,243,244,245,246,248,249,250,251,252,254,255,],[21,21,21,-2,-5,-6,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-9,-77,-81,-127,-128,-129,-130,-131,21,-4,-7,-8,-132,21,-78,-79,-80,-76,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-138,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,21,21,21,21,-24,-139,-140,21,21,-22,21,-72,-73,-74,-75,-25,-27,-29,-23,-121,-64,-65,21,21,21,-66,21,21,21,21,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-67,-120,21,21,-30,-26,-28,]),'IDENTIFIER':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,76,77,80,81,82,85,88,89,90,91,92,93,94,95,96,97,98,99,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,157,158,159,160,161,162,163,164,165,176,191,192,195,199,202,206,207,208,209,210,214,215,216,217,218,219,220,224,225,228,230,231,232,234,235,236,237,238,239,240,241,242,243,244,245,246,248,249,250,251,252,254,255,],[22,22,22,-2,-5,-6,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-9,-77,41,55,70,73,76,81,-81,-127,-128,-129,-130,-131,22,-4,-7,-8,76,81,76,76,76,76,76,76,76,76,76,76,102,81,81,81,81,81,81,81,81,81,81,81,81,81,81,-132,22,-78,-79,-80,154,-76,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-138,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,22,22,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,22,22,76,197,76,-24,76,-139,-140,205,81,81,22,22,76,-22,22,-72,-73,154,-74,-75,-25,-27,-29,-23,-121,-64,227,-65,197,22,22,22,-66,22,22,22,22,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-67,-120,22,22,-30,-26,-28,]),'INPUT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,30,31,32,33,34,35,36,37,38,39,76,77,80,81,82,88,89,90,91,92,93,94,95,96,97,98,99,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,149,150,157,159,160,164,165,191,192,195,199,206,207,208,209,210,214,215,216,218,220,224,225,228,230,231,232,234,235,236,237,238,239,240,241,242,243,244,245,246,248,249,250,251,252,254,255,],[23,23,23,-2,-5,-6,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-9,-77,-81,-127,-128,-129,-130,-131,23,-4,-7,-8,-132,23,-78,-79,-80,-76,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-138,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,23,23,23,23,-24,-139,-140,23,23,-22,23,-72,-73,-74,-75,-25,-27,-29,-23,-121,-64,-65,23,23,23,-66,23,23,23,23,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-67,-120,23,23,-30,-26,-28,]),'VAR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,30,31,32,33,34,35,36,37,38,39,76,77,80,81,82,88,89,90,91,92,93,94,95,96,97,98,99,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,149,150,157,159,160,164,165,191,192,195,199,206,207,208,209,210,214,215,216,218,220,224,225,228,230,231,232,234,235,236,237,238,239,240,241,242,243,244,245,246,248,249,250,251,252,254,255,],[24,24,24,-2,-5,-6,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-9,-77,-81,-127,-128,-129,-130,-131,24,-4,-7,-8,-132,24,-78,-79,-80,-76,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-138,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,24,24,24,24,-24,-139,-140,24,24,-22,24,-72,-73,-74,-75,-25,-27,-29,-23,-121,-64,-65,24,24,24,-66,24,24,24,24,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-67,-120,24,24,-30,-26,-28,]),'CONST':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,30,31,32,33,34,35,36,37,38,39,76,77,80,81,82,88,89,90,91,92,93,94,95,96,97,98,99,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,149,150,157,159,160,164,165,191,192,195,199,206,207,208,209,210,214,215,216,218,220,224,225,228,230,231,232,234,235,236,237,238,239,240,241,242,243,244,245,246,248,249,250,251,252,254,255,],[26,26,26,-2,-5,-6,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-9,-77,-81,-127,-128,-129,-130,-131,26,-4,-7,-8,-132,26,-78,-79,-80,-76,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-138,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,26,26,26,26,-24,-139,-140,26,26,-22,26,-72,-73,-74,-75,-25,-27,-29,-23,-121,-64,-65,26,26,26,-66,26,26,26,26,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-67,-120,26,26,-30,-26,-28,]),'IF':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,30,31,32,33,34,35,36,37,38,39,76,77,80,81,82,88,89,90,91,92,93,94,95,96,97,98,99,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,149,150,157,159,160,164,165,191,192,195,199,206,207,208,209,210,214,215,216,218,220,224,225,228,230,231,232,234,235,236,237,238,239,240,241,242,243,244,245,246,248,249,250,251,252,254,255,],[27,27,27,-2,-5,-6,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-9,-77,-81,-127,-128,-129,-130,-131,27,-4,-7,-8,-132,27,-78,-79,-80,-76,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-138,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,27,27,27,27,-24,-139,-140,27,27,-22,27,-72,-73,-74,-75,-25,-27,-29,-23,-121,-64,-65,27,27,27,-66,27,27,27,27,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-67,-120,27,27,-30,-26,-28,]),'SWITCH':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,30,31,32,33,34,35,36,37,38,39,76,77,80,81,82,88,89,90,91,92,93,94,95,96,97,98,99,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,149,150,157,159,160,164,165,191,192,195,199,206,207,208,209,210,214,215,216,218,220,224,225,228,230,231,232,234,235,236,237,238,239,240,241,242,243,244,245,246,248,249,250,251,252,254,255,],[28,28,28,-2,-5,-6,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-9,-77,-81,-127,-128,-129,-130,-131,28,-4,-7,-8,-132,28,-78,-79,-80,-76,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-138,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,28,28,28,28,-24,-139,-140,28,28,-22,28,-72,-73,-74,-75,-25,-27,-29,-23,-121,-64,-65,28,28,28,-66,28,28,28,28,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-67,-120,28,28,-30,-26,-28,]),'FOR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,30,31,32,33,34,35,36,37,38,39,76,77,80,81,82,88,89,90,91,92,93,94,95,96,97,98,99,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,149,150,157,159,160,164,165,191,192,195,199,206,207,208,209,210,214,215,216,218,220,228,230,231,232,248,249,250,251,252,254,255,],[29,29,29,-2,-5,-6,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-9,-77,-81,-127,-128,-129,-130,-131,29,-4,-7,-8,-132,29,-78,-79,-80,-76,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-138,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,29,29,29,29,-24,-139,-140,29,29,-22,29,-72,-73,-74,-75,-25,-27,-29,-23,-121,-64,-65,29,-66,29,29,29,-67,-120,29,29,-30,-26,-28,]),'STRING':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,27,28,29,30,31,32,33,34,35,36,37,38,39,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,76,77,80,81,82,88,89,90,91,92,93,94,95,96,97,98,99,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,157,158,159,160,162,163,164,165,176,191,192,195,199,206,207,208,209,210,214,215,216,217,218,219,220,224,225,228,230,231,232,234,235,236,237,238,239,240,241,242,243,244,245,246,248,249,250,251,252,254,255,],[31,31,31,-2,-5,-6,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-9,-77,31,31,31,-81,-127,-128,-129,-130,-131,31,-4,-7,-8,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-132,31,-78,-79,-80,-76,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-138,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-24,31,-139,-140,31,31,31,31,31,-22,31,-72,-73,-74,-75,-25,-27,-29,-23,-121,-64,31,-65,31,31,31,31,-66,31,31,31,31,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-67,-120,31,31,-30,-26,-28,]),'INTEGER':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,27,28,29,30,31,32,33,34,35,36,37,38,39,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,76,77,80,81,82,88,89,90,91,92,93,94,95,96,97,98,99,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,157,158,159,160,162,163,164,165,176,191,192,195,199,206,207,208,209,210,214,215,216,217,218,219,220,224,225,228,230,231,232,234,235,236,237,238,239,240,241,242,243,244,245,246,248,249,250,251,252,254,255,],[32,32,32,-2,-5,-6,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-9,-77,32,32,32,-81,-127,-128,-129,-130,-131,32,-4,-7,-8,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-132,32,-78,-79,-80,-76,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-138,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-24,32,-139,-140,32,32,32,32,32,-22,32,-72,-73,-74,-75,-25,-27,-29,-23,-121,-64,32,-65,32,32,32,32,-66,32,32,32,32,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-67,-120,32,32,-30,-26,-28,]),'FLOAT32':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,27,28,29,30,31,32,33,34,35,36,37,38,39,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,76,77,80,81,82,88,89,90,91,92,93,94,95,96,97,98,99,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,157,158,159,160,162,163,164,165,176,191,192,195,199,206,207,208,209,210,214,215,216,217,218,219,220,224,225,228,230,231,232,234,235,236,237,238,239,240,241,242,243,244,245,246,248,249,250,251,252,254,255,],[33,33,33,-2,-5,-6,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-9,-77,33,33,33,-81,-127,-128,-129,-130,-131,33,-4,-7,-8,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-132,33,-78,-79,-80,-76,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-138,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-24,33,-139,-140,33,33,33,33,33,-22,33,-72,-73,-74,-75,-25,-27,-29,-23,-121,-64,33,-65,33,33,33,33,-66,33,33,33,33,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-67,-120,33,33,-30,-26,-28,]),'FLOAT64':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,27,28,29,30,31,32,33,34,35,36,37,38,39,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,76,77,80,81,82,88,89,90,91,92,93,94,95,96,97,98,99,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,157,158,159,160,162,163,164,165,176,191,192,195,199,206,207,208,209,210,214,215,216,217,218,219,220,224,225,228,230,231,232,234,235,236,237,238,239,240,241,242,243,244,245,246,248,249,250,251,252,254,255,],[34,34,34,-2,-5,-6,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-9,-77,34,34,34,-81,-127,-128,-129,-130,-131,34,-4,-7,-8,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-132,34,-78,-79,-80,-76,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-138,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-24,34,-139,-140,34,34,34,34,34,-22,34,-72,-73,-74,-75,-25,-27,-29,-23,-121,-64,34,-65,34,34,34,34,-66,34,34,34,34,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-67,-120,34,34,-30,-26,-28,]),'BOOLEAN':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,27,28,29,30,31,32,33,34,35,36,37,38,39,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,76,77,80,81,82,88,89,90,91,92,93,94,95,96,97,98,99,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,157,158,159,160,162,163,164,165,176,191,192,195,199,206,207,208,209,210,214,215,216,217,218,219,220,224,225,228,230,231,232,234,235,236,237,238,239,240,241,242,243,244,245,246,248,249,250,251,252,254,255,],[35,35,35,-2,-5,-6,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-9,-77,35,35,35,-81,-127,-128,-129,-130,-131,35,-4,-7,-8,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-132,35,-78,-79,-80,-76,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-138,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-24,35,-139,-140,35,35,35,35,35,-22,35,-72,-73,-74,-75,-25,-27,-29,-23,-121,-64,35,-65,35,35,35,35,-66,35,35,35,35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-67,-120,35,35,-30,-26,-28,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,30,31,32,33,34,35,36,37,38,39,76,80,81,82,88,89,90,91,92,93,94,95,96,97,98,99,109,110,111,112,113,114,115,116,117,118,119,120,121,122,157,159,160,191,195,199,206,207,208,209,210,214,215,216,218,228,248,249,252,254,255,],[0,-1,-2,-5,-6,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-9,-77,-81,-127,-128,-129,-130,-131,-3,-4,-7,-8,-132,-78,-79,-80,-76,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-138,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-24,-139,-140,-22,-72,-73,-74,-75,-25,-27,-29,-23,-121,-64,-65,-66,-67,-120,-30,-26,-28,]),'RKEY':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,30,31,32,33,34,35,36,37,38,39,76,80,81,82,88,89,90,91,92,93,94,95,96,97,98,99,109,110,111,112,113,114,115,116,117,118,119,120,121,122,134,149,157,159,160,164,165,174,175,191,192,195,199,206,207,208,209,210,212,214,215,216,218,224,225,228,230,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,],[-1,-2,-5,-6,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-9,-77,-81,-127,-128,-129,-130,-131,-3,-4,-7,-8,-132,-78,-79,-80,-76,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-138,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-32,191,-24,-139,-140,208,209,210,-32,-22,214,-72,-73,-74,-75,-25,-27,-29,-31,-23,-121,-64,-65,-35,-35,-66,249,252,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-33,-67,-120,254,255,-30,-34,-26,-28,]),'PLUS':([9,13,20,22,25,30,31,32,33,34,35,74,75,76,78,79,80,81,82,88,109,110,111,112,113,114,115,116,117,118,119,120,121,122,157,177,178,179,180,181,182,183,184,185,186,187,188,189,190,206,207,215,238,242,],[-78,-80,-77,-79,56,-81,-127,-128,-129,-130,-131,135,-49,-132,-81,56,-78,-79,-80,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-121,135,135,135,135,135,135,135,135,135,135,135,135,135,135,56,56,-121,-78,-80,]),'MINUS':([9,13,20,22,25,30,31,32,33,34,35,74,75,76,78,79,80,81,82,88,109,110,111,112,113,114,115,116,117,118,119,120,121,122,157,177,178,179,180,181,182,183,184,185,186,187,188,189,190,206,207,215,238,242,],[-78,-80,-77,-79,57,-81,-127,-128,-129,-130,-131,136,-49,-132,-81,57,-78,-79,-80,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-121,136,136,136,136,136,136,136,136,136,136,136,136,136,136,57,57,-121,-78,-80,]),'DIVIDE':([9,13,20,22,25,30,31,32,33,34,35,74,75,76,78,79,80,81,82,88,109,110,111,112,113,114,115,116,117,118,119,120,121,122,157,177,178,179,180,181,182,183,184,185,186,187,188,189,190,206,207,215,238,242,],[-78,-80,-77,-79,58,-81,-127,-128,-129,-130,-131,138,-49,-132,-81,58,-78,-79,-80,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-121,138,138,138,138,138,138,138,138,138,138,138,138,138,138,58,58,-121,-78,-80,]),'TIMES':([9,13,20,22,25,30,31,32,33,34,35,74,75,76,78,79,80,81,82,88,109,110,111,112,113,114,115,116,117,118,119,120,121,122,157,177,178,179,180,181,182,183,184,185,186,187,188,189,190,206,207,215,238,242,],[-78,-80,-77,-79,59,-81,-127,-128,-129,-130,-131,137,-49,-132,-81,59,-78,-79,-80,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-121,137,137,137,137,137,137,137,137,137,137,137,137,137,137,59,59,-121,-78,-80,]),'ENTERE_DIVIDE':([9,13,20,22,25,30,31,32,33,34,35,74,75,76,78,79,80,81,82,88,109,110,111,112,113,114,115,116,117,118,119,120,121,122,157,177,178,179,180,181,182,183,184,185,186,187,188,189,190,206,207,215,238,242,],[-78,-80,-77,-79,60,-81,-127,-128,-129,-130,-131,139,-49,-132,-81,60,-78,-79,-80,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-121,139,139,139,139,139,139,139,139,139,139,139,139,139,139,60,60,-121,-78,-80,]),'MODULE':([9,13,20,22,25,30,31,32,33,34,35,74,75,76,78,79,80,81,82,88,109,110,111,112,113,114,115,116,117,118,119,120,121,122,157,177,178,179,180,181,182,183,184,185,186,187,188,189,190,206,207,215,238,242,],[-78,-80,-77,-79,61,-81,-127,-128,-129,-130,-131,140,-49,-132,-81,61,-78,-79,-80,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-121,140,140,140,140,140,140,140,140,140,140,140,140,140,140,61,61,-121,-78,-80,]),'EQUALEQUAL':([9,13,20,22,25,30,31,32,33,34,35,73,74,75,76,78,79,80,81,82,88,109,110,111,112,113,114,115,116,117,118,119,120,121,122,157,177,178,179,180,181,182,183,184,185,186,187,188,189,190,206,207,215,238,242,],[-78,-80,-77,-79,62,-81,-127,-128,-129,-130,-131,126,141,-49,-132,-81,62,-78,-79,-80,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-121,141,141,141,141,141,141,141,141,141,141,141,141,141,141,62,62,-121,-78,-80,]),'NOT_EQUAL':([9,13,20,22,25,30,31,32,33,34,35,73,74,75,76,78,79,80,81,82,88,109,110,111,112,113,114,115,116,117,118,119,120,121,122,157,177,178,179,180,181,182,183,184,185,186,187,188,189,190,206,207,215,238,242,],[-78,-80,-77,-79,63,-81,-127,-128,-129,-130,-131,127,142,-49,-132,-81,63,-78,-79,-80,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-121,142,142,142,142,142,142,142,142,142,142,142,142,142,142,63,63,-121,-78,-80,]),'LESS_EQUAL':([9,13,20,22,25,30,31,32,33,34,35,73,74,75,76,78,79,80,81,82,88,109,110,111,112,113,114,115,116,117,118,119,120,121,122,157,177,178,179,180,181,182,183,184,185,186,187,188,189,190,206,207,215,238,242,],[-78,-80,-77,-79,64,-81,-127,-128,-129,-130,-131,128,143,-49,-132,-81,64,-78,-79,-80,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-121,143,143,143,143,143,143,143,143,143,143,143,143,143,143,64,64,-121,-78,-80,]),'GREATER_EQUAL':([9,13,20,22,25,30,31,32,33,34,35,73,74,75,76,78,79,80,81,82,88,109,110,111,112,113,114,115,116,117,118,119,120,121,122,157,177,178,179,180,181,182,183,184,185,186,187,188,189,190,206,207,215,238,242,],[-78,-80,-77,-79,65,-81,-127,-128,-129,-130,-131,129,144,-49,-132,-81,65,-78,-79,-80,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-121,144,144,144,144,144,144,144,144,144,144,144,144,144,144,65,65,-121,-78,-80,]),'LESS':([9,13,20,22,25,30,31,32,33,34,35,73,74,75,76,78,79,80,81,82,88,109,110,111,112,113,114,115,116,117,118,119,120,121,122,157,177,178,179,180,181,182,183,184,185,186,187,188,189,190,206,207,215,238,242,],[-78,-80,-77,-79,66,-81,-127,-128,-129,-130,-131,130,145,-49,-132,-81,66,-78,-79,-80,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-121,145,145,145,145,145,145,145,145,145,145,145,145,145,145,66,66,-121,-78,-80,]),'GREATER':([9,13,20,22,25,30,31,32,33,34,35,73,74,75,76,78,79,80,81,82,88,109,110,111,112,113,114,115,116,117,118,119,120,121,122,157,177,178,179,180,181,182,183,184,185,186,187,188,189,190,206,207,215,238,242,],[-78,-80,-77,-79,67,-81,-127,-128,-129,-130,-131,131,146,-49,-132,-81,67,-78,-79,-80,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-121,146,146,146,146,146,146,146,146,146,146,146,146,146,146,67,67,-121,-78,-80,]),'LOGICAL_AND':([9,13,20,22,25,30,31,32,33,34,35,73,74,75,76,78,79,80,81,82,88,109,110,111,112,113,114,115,116,117,118,119,120,121,122,157,177,178,179,180,181,182,183,184,185,186,187,188,189,190,206,207,215,238,242,],[-78,-80,-77,-79,68,-81,-127,-128,-129,-130,-131,132,147,-49,-132,-81,68,-78,-79,-80,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-121,147,147,147,147,147,147,147,147,147,147,147,147,147,147,68,68,-121,-78,-80,]),'LOGICAL_OR':([9,13,20,22,25,30,31,32,33,34,35,73,74,75,76,78,79,80,81,82,88,109,110,111,112,113,114,115,116,117,118,119,120,121,122,157,177,178,179,180,181,182,183,184,185,186,187,188,189,190,206,207,215,238,242,],[-78,-80,-77,-79,69,-81,-127,-128,-129,-130,-131,133,148,-49,-132,-81,69,-78,-79,-80,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,-121,148,148,148,148,148,148,148,148,148,148,148,148,148,148,69,69,-121,-78,-80,]),'DOT':([19,],[40,]),'CASE':([20,30,31,32,33,34,35,76,80,81,82,88,89,90,91,92,93,94,95,96,97,98,99,109,110,111,112,113,114,115,116,117,118,119,120,121,122,134,157,159,160,175,195,199,206,207,208,209,210,215,216,218,225,228,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,252,253,254,255,],[-77,-81,-127,-128,-129,-130,-131,-132,-78,-79,-80,-76,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-138,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,176,-24,-139,-140,176,-72,-73,-74,-75,-25,-27,-29,-121,-64,-65,-35,-66,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-33,-67,-120,-30,-34,-26,-28,]),'DEFAULT':([20,30,31,32,33,34,35,76,80,81,82,88,89,90,91,92,93,94,95,96,97,98,99,109,110,111,112,113,114,115,116,117,118,119,120,121,122,134,157,159,160,174,175,195,199,206,207,208,209,210,212,215,216,218,225,228,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,252,253,254,255,],[-77,-81,-127,-128,-129,-130,-131,-132,-78,-79,-80,-76,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-138,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-32,-24,-139,-140,211,-32,-72,-73,-74,-75,-25,-27,-29,-31,-121,-64,-65,-35,-66,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-33,-67,-120,-30,-34,-26,-28,]),'LKEY':([20,29,30,31,32,33,34,35,71,72,73,74,75,76,78,80,81,82,109,110,111,112,113,114,115,116,117,118,119,120,121,122,166,167,168,169,170,171,172,173,177,178,179,180,181,182,183,184,185,186,187,188,189,190,201,215,222,223,],[-77,77,-81,-127,-128,-129,-130,-131,124,125,-132,134,-49,-132,150,-78,-79,-80,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-108,-109,-110,-111,-112,-113,-114,-115,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,220,-121,231,232,]),'LPAREN':([22,23,41,81,83,84,],[42,54,85,151,152,153,]),'SHORT_VAR_DECL':([22,],[43,]),'PLUS_EQ':([22,],[44,]),'MINUS_EQ':([22,],[45,]),'TIMES_EQ':([22,],[46,]),'DIVIDE_EQ':([22,],[47,]),'MODULO_EQ':([22,],[48,]),'BITWISE_AND_EQ':([22,],[49,]),'BITWISE_OR_EQ':([22,],[50,]),'BITWISE_XOR_EQ':([22,],[51,]),'LEFT_SHIFT_EQ':([22,],[52,]),'RIGHT_SHIFT_EQ':([22,],[53,]),'RPAREN':([31,32,33,34,35,54,76,86,87,100,101,102,104,105,106,107,108,152,153,155,156,193,194,196,197,198,200,203,204,205,219,221,226,227,229,],[-127,-128,-129,-130,-131,99,-132,157,-125,159,160,-106,-133,-134,-135,-136,-137,195,199,201,-122,215,216,-68,-69,218,-124,-126,-107,-106,228,-123,-70,-71,248,]),'COMMA':([31,32,33,34,35,76,86,87,101,102,104,105,106,107,108,155,156,193,194,196,197,198,200,203,204,205,221,226,227,229,],[-127,-128,-129,-130,-131,-132,158,-125,161,-106,-133,-134,-135,-136,-137,202,-122,158,217,-68,-69,219,-124,-126,161,-106,-123,-70,-71,217,]),'COLON':([31,32,33,34,35,76,211,213,],[-127,-128,-129,-130,-131,-132,224,225,]),'PRINTLN':([40,],[83,]),'PRINTF':([40,],[84,]),'INTEGER_DATA_TYPE':([55,70,154,],[104,104,104,]),'FLOAT32_DATA_TYPE':([55,70,154,],[105,105,105,]),'FLOAT64_DATA_TYPE':([55,70,154,],[106,106,106,]),'BOOLEAN_DATA_TYPE':([55,70,154,],[107,107,107,]),'STRING_DATA_TYPE':([55,70,154,],[108,108,108,]),'EQUAL':([103,104,105,106,107,108,123,],[162,-133,-134,-135,-136,-137,163,]),'ELSE':([208,209,],[222,223,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'loop_program':([0,77,150,],[1,149,192,]),'program':([0,1,77,124,125,149,150,192,220,231,232,],[2,36,2,164,165,36,2,36,230,250,251,]),'sentencia':([0,1,2,36,77,124,125,149,150,164,165,192,220,230,231,232,250,251,],[4,4,38,38,4,4,4,4,4,38,38,4,4,38,4,4,38,38,]),'loop':([0,1,2,36,77,124,125,149,150,164,165,192,220,230,231,232,250,251,],[5,5,39,39,5,5,5,5,5,39,39,5,5,39,5,5,39,39,]),'print':([0,1,2,36,77,124,125,149,150,164,165,192,220,224,225,230,231,232,234,250,251,],[6,6,6,6,6,6,6,6,6,6,6,6,6,235,235,6,6,6,235,6,6,]),'print_withoutvalue':([0,1,2,36,77,124,125,149,150,164,165,192,220,224,225,230,231,232,234,250,251,],[7,7,7,7,7,7,7,7,7,7,7,7,7,236,236,7,7,7,236,7,7,]),'def_function':([0,1,2,36,77,124,125,149,150,164,165,192,220,224,225,230,231,232,234,250,251,],[8,8,8,8,8,8,8,8,8,8,8,8,8,237,237,8,8,8,237,8,8,]),'call_function':([0,1,2,29,36,43,56,57,58,59,60,61,62,63,64,65,66,67,68,69,77,124,125,149,150,162,163,164,165,192,220,224,225,230,231,232,234,250,251,],[9,9,9,80,9,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,9,9,9,9,9,80,80,9,9,9,9,238,238,9,9,9,238,9,9,]),'input':([0,1,2,36,77,124,125,149,150,164,165,192,220,224,225,230,231,232,234,250,251,],[10,10,10,10,10,10,10,10,10,10,10,10,10,239,239,10,10,10,239,10,10,]),'assignment':([0,1,2,36,77,124,125,149,150,164,165,192,220,224,225,230,231,232,234,250,251,],[11,11,11,11,11,11,11,11,11,11,11,11,11,240,240,11,11,11,240,11,11,]),'short_assignment':([0,1,2,36,77,124,125,149,150,164,165,192,220,224,225,230,231,232,234,250,251,],[12,12,12,12,12,12,12,12,12,12,12,12,12,241,241,12,12,12,241,12,12,]),'arithmetic_operation':([0,1,2,29,36,43,56,57,58,59,60,61,62,63,64,65,66,67,68,69,77,124,125,149,150,162,163,164,165,192,220,224,225,230,231,232,234,250,251,],[13,13,13,82,13,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,13,13,13,13,13,82,82,13,13,13,13,242,242,13,13,13,242,13,13,]),'direct_arithmetic_operation':([0,1,2,36,77,124,125,149,150,164,165,192,220,224,225,230,231,232,234,250,251,],[14,14,14,14,14,14,14,14,14,14,14,14,14,243,243,14,14,14,243,14,14,]),'if_statement':([0,1,2,36,77,124,125,149,150,164,165,192,220,224,225,230,231,232,234,250,251,],[15,15,15,15,15,15,15,15,15,15,15,15,15,244,244,15,15,15,244,15,15,]),'function_call':([0,1,2,36,77,124,125,149,150,164,165,192,220,224,225,230,231,232,234,250,251,],[16,16,16,16,16,16,16,16,16,16,16,16,16,245,245,16,16,16,245,16,16,]),'switch_statement':([0,1,2,36,77,124,125,149,150,164,165,192,220,224,225,230,231,232,234,250,251,],[17,17,17,17,17,17,17,17,17,17,17,17,17,246,246,17,17,17,246,17,17,]),'for':([0,1,2,36,77,124,125,149,150,164,165,192,220,230,231,232,250,251,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'value':([0,1,2,27,28,29,36,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,77,124,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,158,162,163,164,165,176,192,217,219,220,224,225,230,231,232,234,250,251,],[20,20,20,72,75,20,20,87,20,89,90,91,92,93,94,95,96,97,98,100,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,166,167,168,169,170,171,172,173,75,75,75,75,75,75,75,75,75,75,75,75,75,75,20,20,87,196,198,203,20,20,20,20,213,20,226,196,20,20,20,20,20,20,20,20,20,]),'usable_value':([0,1,2,29,36,43,56,57,58,59,60,61,62,63,64,65,66,67,68,69,77,124,125,149,150,162,163,164,165,192,220,224,225,230,231,232,234,250,251,],[25,25,25,79,25,88,109,110,111,112,113,114,115,116,117,118,119,120,121,122,25,25,25,25,25,206,207,25,25,25,25,25,25,25,25,25,25,25,25,]),'comparation_operation':([0,1,2,29,36,43,56,57,58,59,60,61,62,63,64,65,66,67,68,69,77,124,125,149,150,162,163,164,165,192,220,224,225,230,231,232,234,250,251,],[30,30,30,78,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'rule_comparation':([27,],[71,]),'expression':([28,135,136,137,138,139,140,141,142,143,144,145,146,147,148,],[74,177,178,179,180,181,182,183,184,185,186,187,188,189,190,]),'values':([42,151,],[86,193,]),'identifiers':([54,161,],[101,204,]),'data_type':([55,70,154,],[103,123,200,]),'parameters':([85,],[155,]),'parameter':([85,202,],[156,221,]),'case_clauses':([134,175,],[174,212,]),'case_clause':([134,175,],[175,175,]),'data':([152,219,],[194,229,]),'statements':([224,225,234,],[233,247,253,]),'statement':([224,225,234,],[234,234,234,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> loop_program","S'",1,None,None,None),
  ('loop_program -> program','loop_program',1,'p_loop_program','syntax_analyzer.py',5),
  ('loop_program -> BREAK','loop_program',1,'p_loop_program','syntax_analyzer.py',6),
  ('loop_program -> loop_program program','loop_program',2,'p_loop_program','syntax_analyzer.py',7),
  ('loop_program -> loop_program BREAK','loop_program',2,'p_loop_program','syntax_analyzer.py',8),
  ('program -> sentencia','program',1,'p_program','syntax_analyzer.py',12),
  ('program -> loop','program',1,'p_program','syntax_analyzer.py',13),
  ('program -> program sentencia','program',2,'p_program','syntax_analyzer.py',14),
  ('program -> program loop','program',2,'p_program','syntax_analyzer.py',15),
  ('loop -> for','loop',1,'p_loop','syntax_analyzer.py',19),
  ('sentencia -> print','sentencia',1,'p_sentencia','syntax_analyzer.py',23),
  ('sentencia -> print_withoutvalue','sentencia',1,'p_sentencia','syntax_analyzer.py',24),
  ('sentencia -> def_function','sentencia',1,'p_sentencia','syntax_analyzer.py',25),
  ('sentencia -> call_function','sentencia',1,'p_sentencia','syntax_analyzer.py',26),
  ('sentencia -> input','sentencia',1,'p_sentencia','syntax_analyzer.py',27),
  ('sentencia -> assignment','sentencia',1,'p_sentencia','syntax_analyzer.py',28),
  ('sentencia -> short_assignment','sentencia',1,'p_sentencia','syntax_analyzer.py',29),
  ('sentencia -> arithmetic_operation','sentencia',1,'p_sentencia','syntax_analyzer.py',30),
  ('sentencia -> direct_arithmetic_operation','sentencia',1,'p_sentencia','syntax_analyzer.py',31),
  ('sentencia -> if_statement','sentencia',1,'p_sentencia','syntax_analyzer.py',32),
  ('sentencia -> function_call','sentencia',1,'p_sentencia','syntax_analyzer.py',33),
  ('sentencia -> switch_statement','sentencia',1,'p_sentencia','syntax_analyzer.py',34),
  ('for -> FOR LKEY loop_program RKEY','for',4,'p_for','syntax_analyzer.py',39),
  ('for -> FOR comparation_operation LKEY loop_program RKEY','for',5,'p_for','syntax_analyzer.py',40),
  ('function_call -> IDENTIFIER LPAREN values RPAREN','function_call',4,'p_function_call','syntax_analyzer.py',43),
  ('if_statement -> IF rule_comparation LKEY program RKEY','if_statement',5,'p_if_statement','syntax_analyzer.py',46),
  ('if_statement -> IF rule_comparation LKEY program RKEY ELSE LKEY program RKEY','if_statement',9,'p_if_statement','syntax_analyzer.py',47),
  ('if_statement -> IF value LKEY program RKEY','if_statement',5,'p_if_statement','syntax_analyzer.py',48),
  ('if_statement -> IF value LKEY program RKEY ELSE LKEY program RKEY','if_statement',9,'p_if_statement','syntax_analyzer.py',49),
  ('switch_statement -> SWITCH expression LKEY case_clauses RKEY','switch_statement',5,'p_switch_statement','syntax_analyzer.py',54),
  ('switch_statement -> SWITCH expression LKEY case_clauses DEFAULT COLON statements RKEY','switch_statement',8,'p_switch_statement','syntax_analyzer.py',55),
  ('case_clauses -> case_clause case_clauses','case_clauses',2,'p_case_clauses','syntax_analyzer.py',60),
  ('case_clauses -> <empty>','case_clauses',0,'p_case_clauses','syntax_analyzer.py',61),
  ('case_clause -> CASE value COLON statements','case_clause',4,'p_case_clause','syntax_analyzer.py',66),
  ('statements -> statement statements','statements',2,'p_statements','syntax_analyzer.py',71),
  ('statements -> <empty>','statements',0,'p_statements','syntax_analyzer.py',72),
  ('statement -> print','statement',1,'p_statement','syntax_analyzer.py',76),
  ('statement -> print_withoutvalue','statement',1,'p_statement','syntax_analyzer.py',77),
  ('statement -> def_function','statement',1,'p_statement','syntax_analyzer.py',78),
  ('statement -> call_function','statement',1,'p_statement','syntax_analyzer.py',79),
  ('statement -> input','statement',1,'p_statement','syntax_analyzer.py',80),
  ('statement -> assignment','statement',1,'p_statement','syntax_analyzer.py',81),
  ('statement -> short_assignment','statement',1,'p_statement','syntax_analyzer.py',82),
  ('statement -> arithmetic_operation','statement',1,'p_statement','syntax_analyzer.py',83),
  ('statement -> direct_arithmetic_operation','statement',1,'p_statement','syntax_analyzer.py',84),
  ('statement -> if_statement','statement',1,'p_statement','syntax_analyzer.py',85),
  ('statement -> function_call','statement',1,'p_statement','syntax_analyzer.py',86),
  ('statement -> switch_statement','statement',1,'p_statement','syntax_analyzer.py',87),
  ('statement -> statement','statement',1,'p_statement','syntax_analyzer.py',88),
  ('expression -> value','expression',1,'p_expression','syntax_analyzer.py',93),
  ('expression -> expression PLUS expression','expression',3,'p_expression','syntax_analyzer.py',94),
  ('expression -> expression MINUS expression','expression',3,'p_expression','syntax_analyzer.py',95),
  ('expression -> expression TIMES expression','expression',3,'p_expression','syntax_analyzer.py',96),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','syntax_analyzer.py',97),
  ('expression -> expression ENTERE_DIVIDE expression','expression',3,'p_expression','syntax_analyzer.py',98),
  ('expression -> expression MODULE expression','expression',3,'p_expression','syntax_analyzer.py',99),
  ('expression -> expression EQUALEQUAL expression','expression',3,'p_expression','syntax_analyzer.py',100),
  ('expression -> expression NOT_EQUAL expression','expression',3,'p_expression','syntax_analyzer.py',101),
  ('expression -> expression LESS_EQUAL expression','expression',3,'p_expression','syntax_analyzer.py',102),
  ('expression -> expression GREATER_EQUAL expression','expression',3,'p_expression','syntax_analyzer.py',103),
  ('expression -> expression LESS expression','expression',3,'p_expression','syntax_analyzer.py',104),
  ('expression -> expression GREATER expression','expression',3,'p_expression','syntax_analyzer.py',105),
  ('expression -> expression LOGICAL_AND expression','expression',3,'p_expression','syntax_analyzer.py',106),
  ('expression -> expression LOGICAL_OR expression','expression',3,'p_expression','syntax_analyzer.py',107),
  ('print -> FMT_LIBRARY DOT PRINTLN LPAREN data RPAREN','print',6,'p_print','syntax_analyzer.py',115),
  ('print -> FMT_LIBRARY DOT PRINTF LPAREN value RPAREN','print',6,'p_print','syntax_analyzer.py',116),
  ('print -> FMT_LIBRARY DOT PRINTF LPAREN value COMMA RPAREN','print',7,'p_print','syntax_analyzer.py',117),
  ('print -> FMT_LIBRARY DOT PRINTF LPAREN value COMMA data RPAREN','print',8,'p_print','syntax_analyzer.py',118),
  ('data -> value','data',1,'p_data','syntax_analyzer.py',121),
  ('data -> IDENTIFIER','data',1,'p_data','syntax_analyzer.py',122),
  ('data -> data COMMA value','data',3,'p_data','syntax_analyzer.py',123),
  ('data -> data COMMA IDENTIFIER','data',3,'p_data','syntax_analyzer.py',124),
  ('print_withoutvalue -> FMT_LIBRARY DOT PRINTLN LPAREN RPAREN','print_withoutvalue',5,'p_print_withoutvalue','syntax_analyzer.py',127),
  ('print_withoutvalue -> FMT_LIBRARY DOT PRINTF LPAREN RPAREN','print_withoutvalue',5,'p_print_withoutvalue','syntax_analyzer.py',128),
  ('assignment -> VAR IDENTIFIER data_type EQUAL usable_value','assignment',5,'p_assignment','syntax_analyzer.py',131),
  ('assignment -> CONST IDENTIFIER data_type EQUAL usable_value','assignment',5,'p_assignment','syntax_analyzer.py',132),
  ('short_assignment -> IDENTIFIER SHORT_VAR_DECL usable_value','short_assignment',3,'p_short_assignment','syntax_analyzer.py',135),
  ('usable_value -> value','usable_value',1,'p_usable_value','syntax_analyzer.py',138),
  ('usable_value -> call_function','usable_value',1,'p_usable_value','syntax_analyzer.py',139),
  ('usable_value -> IDENTIFIER','usable_value',1,'p_usable_value','syntax_analyzer.py',140),
  ('usable_value -> arithmetic_operation','usable_value',1,'p_usable_value','syntax_analyzer.py',141),
  ('usable_value -> comparation_operation','usable_value',1,'p_usable_value','syntax_analyzer.py',142),
  ('direct_arithmetic_operation -> IDENTIFIER PLUS_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',148),
  ('direct_arithmetic_operation -> IDENTIFIER MINUS_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',149),
  ('direct_arithmetic_operation -> IDENTIFIER TIMES_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',150),
  ('direct_arithmetic_operation -> IDENTIFIER DIVIDE_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',151),
  ('direct_arithmetic_operation -> IDENTIFIER MODULO_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',152),
  ('direct_arithmetic_operation -> IDENTIFIER BITWISE_AND_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',153),
  ('direct_arithmetic_operation -> IDENTIFIER BITWISE_OR_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',154),
  ('direct_arithmetic_operation -> IDENTIFIER BITWISE_XOR_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',155),
  ('direct_arithmetic_operation -> IDENTIFIER LEFT_SHIFT_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',156),
  ('direct_arithmetic_operation -> IDENTIFIER RIGHT_SHIFT_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',157),
  ('arithmetic_operation -> usable_value PLUS usable_value','arithmetic_operation',3,'p_arithmetic_operation','syntax_analyzer.py',162),
  ('arithmetic_operation -> usable_value MINUS usable_value','arithmetic_operation',3,'p_arithmetic_operation','syntax_analyzer.py',163),
  ('arithmetic_operation -> usable_value DIVIDE usable_value','arithmetic_operation',3,'p_arithmetic_operation','syntax_analyzer.py',164),
  ('arithmetic_operation -> usable_value TIMES usable_value','arithmetic_operation',3,'p_arithmetic_operation','syntax_analyzer.py',165),
  ('arithmetic_operation -> usable_value ENTERE_DIVIDE usable_value','arithmetic_operation',3,'p_arithmetic_operation','syntax_analyzer.py',166),
  ('arithmetic_operation -> usable_value MODULE usable_value','arithmetic_operation',3,'p_arithmetic_operation','syntax_analyzer.py',167),
  ('comparation_operation -> usable_value EQUALEQUAL usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',174),
  ('comparation_operation -> usable_value NOT_EQUAL usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',175),
  ('comparation_operation -> usable_value LESS_EQUAL usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',176),
  ('comparation_operation -> usable_value GREATER_EQUAL usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',177),
  ('comparation_operation -> usable_value LESS usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',178),
  ('comparation_operation -> usable_value GREATER usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',179),
  ('comparation_operation -> usable_value LOGICAL_AND usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',180),
  ('comparation_operation -> usable_value LOGICAL_OR usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',181),
  ('identifiers -> IDENTIFIER','identifiers',1,'p_identifiers','syntax_analyzer.py',186),
  ('identifiers -> identifiers COMMA identifiers','identifiers',3,'p_identifiers','syntax_analyzer.py',187),
  ('rule_comparation -> IDENTIFIER EQUALEQUAL value','rule_comparation',3,'p_rule_comparation','syntax_analyzer.py',191),
  ('rule_comparation -> IDENTIFIER NOT_EQUAL value','rule_comparation',3,'p_rule_comparation','syntax_analyzer.py',192),
  ('rule_comparation -> IDENTIFIER LESS_EQUAL value','rule_comparation',3,'p_rule_comparation','syntax_analyzer.py',193),
  ('rule_comparation -> IDENTIFIER GREATER_EQUAL value','rule_comparation',3,'p_rule_comparation','syntax_analyzer.py',194),
  ('rule_comparation -> IDENTIFIER LESS value','rule_comparation',3,'p_rule_comparation','syntax_analyzer.py',195),
  ('rule_comparation -> IDENTIFIER GREATER value','rule_comparation',3,'p_rule_comparation','syntax_analyzer.py',196),
  ('rule_comparation -> IDENTIFIER LOGICAL_AND value','rule_comparation',3,'p_rule_comparation','syntax_analyzer.py',197),
  ('rule_comparation -> IDENTIFIER LOGICAL_OR value','rule_comparation',3,'p_rule_comparation','syntax_analyzer.py',198),
  ('condition -> value comparation_operation value','condition',3,'p_condition','syntax_analyzer.py',202),
  ('condition -> condition LOGICAL_AND condition','condition',3,'p_condition','syntax_analyzer.py',203),
  ('condition -> condition LOGICAL_OR condition','condition',3,'p_condition','syntax_analyzer.py',204),
  ('condition -> LOGICAL_NOT condition','condition',2,'p_condition','syntax_analyzer.py',205),
  ('def_function -> FUNC IDENTIFIER LPAREN parameters RPAREN LKEY program RKEY','def_function',8,'p_def_function','syntax_analyzer.py',211),
  ('call_function -> IDENTIFIER LPAREN values RPAREN','call_function',4,'p_call_funcion','syntax_analyzer.py',214),
  ('parameters -> parameter','parameters',1,'p_parameters','syntax_analyzer.py',217),
  ('parameters -> parameters COMMA parameter','parameters',3,'p_parameters','syntax_analyzer.py',218),
  ('parameter -> IDENTIFIER data_type','parameter',2,'p_parameter','syntax_analyzer.py',223),
  ('values -> value','values',1,'p_values','syntax_analyzer.py',226),
  ('values -> values COMMA value','values',3,'p_values','syntax_analyzer.py',227),
  ('value -> STRING','value',1,'p_value','syntax_analyzer.py',231),
  ('value -> INTEGER','value',1,'p_value','syntax_analyzer.py',232),
  ('value -> FLOAT32','value',1,'p_value','syntax_analyzer.py',233),
  ('value -> FLOAT64','value',1,'p_value','syntax_analyzer.py',234),
  ('value -> BOOLEAN','value',1,'p_value','syntax_analyzer.py',235),
  ('value -> IDENTIFIER','value',1,'p_value','syntax_analyzer.py',236),
  ('data_type -> INTEGER_DATA_TYPE','data_type',1,'p_data_type','syntax_analyzer.py',239),
  ('data_type -> FLOAT32_DATA_TYPE','data_type',1,'p_data_type','syntax_analyzer.py',240),
  ('data_type -> FLOAT64_DATA_TYPE','data_type',1,'p_data_type','syntax_analyzer.py',241),
  ('data_type -> BOOLEAN_DATA_TYPE','data_type',1,'p_data_type','syntax_analyzer.py',242),
  ('data_type -> STRING_DATA_TYPE','data_type',1,'p_data_type','syntax_analyzer.py',243),
  ('input -> INPUT LPAREN RPAREN','input',3,'p_input','syntax_analyzer.py',247),
  ('input -> INPUT LPAREN value RPAREN','input',4,'p_input','syntax_analyzer.py',248),
  ('input -> INPUT LPAREN identifiers RPAREN','input',4,'p_input','syntax_analyzer.py',249),
]
