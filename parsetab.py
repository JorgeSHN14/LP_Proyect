
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AMPERSAND AND ARROW_FUNCTION_TYPE ARROW_SEND_RECEIVE AS ASSERT BITWISE_AND_EQ BITWISE_OR_EQ BITWISE_XOR BITWISE_XOR_ASSIGN BITWISE_XOR_EQ BOOLEAN BOOLEAN_DATA_TYPE BREAK CASE CLASS COLON COMMA COMMENT COMMENT_MULTI CONST CONTINUE DECREASE DEFAULT DEL DIVIDE DIVIDE_EQ DOT DOUBLE_QUOTE ELIF ELLIPSIS ELSE ENTERE_DIVIDE EQUAL EQUALEQUAL EXCEPT FALSE FAT_ARROW FINALLY FLOAT FLOAT_DATA_TYPE FMT_FORMAT_STRING FMT_LIBRARY FMT_LIBRARY FOR FROM FUNC GLOBAL GREATER GREATER_EQUAL GREATER_THAN HEX_NUMBER IDENTIFIER IF IMPORT IN INCREASE INPUT INTEGER INTEGER_DATA_TYPE IS LAMBDA LBRACKET LEFT_SHIFT_EQ LESS LESS_EQUAL LESS_THAN LKEY LOGICAL_AND LOGICAL_NOT LOGICAL_OR LPAREN MINUS MINUS_EQ MODULE MODULO_EQ NONE NONLOCAL NOT NOT_EQUAL NULL OR PASS PERCENT_D PIPE PLUS PLUS_EQ PRINTF PRINTLN RAISE RBRACKET RETURN RIGHT_SHIFT_EQ RKEY RPAREN SCIENTIFIC_NOTATION SEMICOLON SHORT_VAR_DECL STRING STRING_DATA_TYPE SWITCH TIMES TIMES_EQ TRUE TRY VAR WITH YIELD loop_program : program\n                  | loop_reserved\n                  | loop_program program\n                  | loop_program loop_reserved\n   func_program : program\n                  | RETURN\n                  | RETURN usable_value\n                  | func_program program\n                  | func_program RETURN\n                  | func_program RETURN usable_value\n  program : sentencia\n             | loop\n             | program sentencia\n             | program loop\n   loop_reserved : BREAK\n                  | CONTINUE\n                  | PASS\n  loop : for\n  sentencia : print\n               | print_withoutvalue\n               | def_function\n               | call_function\n               | input\n               | assignment\n               | short_assignment\n               | arithmetic_operation\n               | direct_arithmetic_operation\n               | if_statement\n               | function_call\n               | switch_statementfor : FOR LKEY loop_program RKEY\n         | FOR comparation_operation LKEY loop_program RKEY\n         | FOR short_assignment SEMICOLON comparation_operation SEMICOLON IDENTIFIER operator_for LKEY loop_program RKEYoperator_for : INCREASE\n                   | DECREASEfunction_call : IDENTIFIER LPAREN values RPARENif_statement : IF comparation_operation LKEY program RKEY\n                    | IF comparation_operation LKEY program RKEY conditions_elseif\n                    | IF comparation_operation LKEY program RKEY ELSE LKEY program RKEY\n                    | IF comparation_operation LKEY program RKEY conditions_elseif ELSE LKEY program RKEY\n    conditions_elseif : else_if\n                        | conditions_elseif else_if\n   else_if : ELSE IF comparation_operation LKEY program RKEY\n   \n    switch_statement : SWITCH expression LKEY case_clauses RKEY\n                     | SWITCH expression LKEY case_clauses DEFAULT COLON statements RKEY\n    \n    case_clauses : case_clause case_clauses\n                 |\n    \n    case_clause : CASE value COLON statements\n    \n    statements : statement statements\n              |\n    statement : print\n                 | print_withoutvalue\n                 | def_function\n                 | call_function\n                 | input\n                 | assignment\n                 | short_assignment\n                 | arithmetic_operation\n                 | direct_arithmetic_operation\n                 | if_statement\n                 | function_call\n                 | switch_statement\n                 | statement\n    \n    expression : value\n               | expression PLUS expression\n               | expression MINUS expression\n               | expression TIMES expression\n               | expression DIVIDE expression\n               | expression ENTERE_DIVIDE expression\n               | expression MODULE expression\n               | expression EQUALEQUAL expression\n               | expression NOT_EQUAL expression\n               | expression LESS_EQUAL expression\n               | expression GREATER_EQUAL expression\n               | expression LESS expression\n               | expression GREATER expression\n               | expression LOGICAL_AND expression\n               | expression LOGICAL_OR expression\n    print : FMT_LIBRARY DOT PRINTLN LPAREN data RPAREN\n           | FMT_LIBRARY DOT PRINTF LPAREN value RPAREN\n           | FMT_LIBRARY DOT PRINTF LPAREN value COMMA RPAREN\n           | FMT_LIBRARY DOT PRINTF LPAREN value COMMA data RPARENdata : value\n         | IDENTIFIER\n         | data COMMA value\n         | data COMMA IDENTIFIERprint_withoutvalue : FMT_LIBRARY DOT PRINTLN LPAREN RPAREN\n            | FMT_LIBRARY DOT PRINTF LPAREN RPARENassignment : VAR IDENTIFIER data_type EQUAL usable_value\n                | CONST IDENTIFIER data_type EQUAL usable_valueshort_assignment : IDENTIFIER SHORT_VAR_DECL usable_value usable_value : value\n                 | call_function\n                 | IDENTIFIER\n                 | arithmetic_operation\n                 | comparation_operation\n  \n  direct_arithmetic_operation : IDENTIFIER PLUS_EQ value\n                      | IDENTIFIER MINUS_EQ value\n                      | IDENTIFIER TIMES_EQ value\n                      | IDENTIFIER DIVIDE_EQ value\n                      | IDENTIFIER MODULO_EQ value\n                      | IDENTIFIER BITWISE_AND_EQ value\n                      | IDENTIFIER BITWISE_OR_EQ value\n                      | IDENTIFIER BITWISE_XOR_EQ value\n                      | IDENTIFIER LEFT_SHIFT_EQ value\n                      | IDENTIFIER RIGHT_SHIFT_EQ value\n  \n  arithmetic_operation : usable_value PLUS usable_value\n                      | usable_value MINUS usable_value\n                      | usable_value DIVIDE usable_value\n                      | usable_value TIMES usable_value\n                      | usable_value ENTERE_DIVIDE usable_value\n                      | usable_value MODULE usable_value\n  \n    comparation_operation : usable_value EQUALEQUAL usable_value\n                        | usable_value NOT_EQUAL usable_value\n                        | usable_value LESS_EQUAL usable_value\n                        | usable_value GREATER_EQUAL usable_value\n                        | usable_value LESS usable_value\n                        | usable_value GREATER usable_value\n                        | usable_value LOGICAL_AND usable_value\n                        | usable_value LOGICAL_OR usable_value\n    identifiers : IDENTIFIER\n                 | identifiers COMMA identifiersrule_comparation : IDENTIFIER EQUALEQUAL value\n                        | IDENTIFIER NOT_EQUAL value\n                        | IDENTIFIER LESS_EQUAL value\n                        | IDENTIFIER GREATER_EQUAL value\n                        | IDENTIFIER LESS value\n                        | IDENTIFIER GREATER value\n                        | IDENTIFIER LOGICAL_AND value\n                        | IDENTIFIER LOGICAL_OR value\n    condition : value comparation_operation value\n              | condition LOGICAL_AND condition\n              | condition LOGICAL_OR condition\n              | LOGICAL_NOT condition\n    def_function : FUNC IDENTIFIER LPAREN parameters RPAREN LKEY func_program RKEY\n                  | FUNC IDENTIFIER LPAREN parameters RPAREN data_type LKEY func_program RKEYcall_function : IDENTIFIER LPAREN values RPARENparameters : parameter\n                | parameters COMMA parameter parameter : IDENTIFIER data_typevalues : value\n            | values COMMA valuevalue : STRING\n          | INTEGER\n          | FLOAT\n          | BOOLEAN\n          | IDENTIFIERdata_type : INTEGER_DATA_TYPE\n               | FLOAT_DATA_TYPE\n               | BOOLEAN_DATA_TYPE\n               | STRING_DATA_TYPEinput : INPUT LPAREN RPAREN\n             | INPUT LPAREN value RPAREN\n             | INPUT LPAREN identifiers RPAREN\n    '
    
_lr_action_items = {'BREAK':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,31,34,35,36,37,38,39,40,41,75,76,77,80,81,90,91,92,93,94,95,96,97,98,99,100,101,110,111,112,113,114,115,116,117,118,119,120,121,122,123,142,143,150,152,153,176,177,180,184,191,192,193,194,195,199,201,203,208,210,216,223,244,245,253,255,257,260,261,262,264,265,],[6,6,-1,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-92,-96,-143,-144,-145,-146,-3,-4,-13,-14,-93,-94,-95,-147,6,-91,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-152,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,6,6,-36,-153,-154,-31,6,-87,-88,-89,-90,-37,-137,-44,-32,-79,-80,-38,-41,-81,-42,-82,-135,-45,6,-136,-39,6,-40,-33,-43,]),'CONTINUE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,31,34,35,36,37,38,39,40,41,75,76,77,80,81,90,91,92,93,94,95,96,97,98,99,100,101,110,111,112,113,114,115,116,117,118,119,120,121,122,123,142,143,150,152,153,176,177,180,184,191,192,193,194,195,199,201,203,208,210,216,223,244,245,253,255,257,260,261,262,264,265,],[7,7,-1,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-92,-96,-143,-144,-145,-146,-3,-4,-13,-14,-93,-94,-95,-147,7,-91,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-152,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,7,7,-36,-153,-154,-31,7,-87,-88,-89,-90,-37,-137,-44,-32,-79,-80,-38,-41,-81,-42,-82,-135,-45,7,-136,-39,7,-40,-33,-43,]),'PASS':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,31,34,35,36,37,38,39,40,41,75,76,77,80,81,90,91,92,93,94,95,96,97,98,99,100,101,110,111,112,113,114,115,116,117,118,119,120,121,122,123,142,143,150,152,153,176,177,180,184,191,192,193,194,195,199,201,203,208,210,216,223,244,245,253,255,257,260,261,262,264,265,],[8,8,-1,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-92,-96,-143,-144,-145,-146,-3,-4,-13,-14,-93,-94,-95,-147,8,-91,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-152,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,8,8,-36,-153,-154,-31,8,-87,-88,-89,-90,-37,-137,-44,-32,-79,-80,-38,-41,-81,-42,-82,-135,-45,8,-136,-39,8,-40,-33,-43,]),'FMT_LIBRARY':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,31,34,35,36,37,38,39,40,41,75,76,77,80,81,90,91,92,93,94,95,96,97,98,99,100,101,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,142,143,150,152,153,157,176,177,180,184,191,192,193,194,195,199,201,203,205,208,210,211,212,216,218,219,220,221,223,225,227,228,229,230,231,232,233,234,235,236,237,238,239,244,245,246,247,248,249,250,252,253,255,256,257,258,259,260,261,262,263,264,265,],[22,22,22,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-92,-96,-143,-144,-145,-146,22,-4,-13,-14,-93,-94,-95,-147,22,-91,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-152,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,22,22,22,-36,-153,-154,22,-31,22,-87,-88,-89,-90,-37,-137,-44,-32,-79,-80,22,-38,-41,22,22,-81,22,22,-6,22,-42,22,22,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-82,-135,22,-9,-7,22,22,22,-45,22,-10,-136,22,22,-39,22,-40,22,-33,-43,]),'FUNC':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,31,34,35,36,37,38,39,40,41,75,76,77,80,81,90,91,92,93,94,95,96,97,98,99,100,101,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,142,143,150,152,153,157,176,177,180,184,191,192,193,194,195,199,201,203,205,208,210,211,212,216,218,219,220,221,223,225,227,228,229,230,231,232,233,234,235,236,237,238,239,244,245,246,247,248,249,250,252,253,255,256,257,258,259,260,261,262,263,264,265,],[24,24,24,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-92,-96,-143,-144,-145,-146,24,-4,-13,-14,-93,-94,-95,-147,24,-91,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-152,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,24,24,24,-36,-153,-154,24,-31,24,-87,-88,-89,-90,-37,-137,-44,-32,-79,-80,24,-38,-41,24,24,-81,24,24,-6,24,-42,24,24,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-82,-135,24,-9,-7,24,24,24,-45,24,-10,-136,24,24,-39,24,-40,24,-33,-43,]),'IDENTIFIER':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,27,29,30,31,32,33,34,35,36,37,38,39,40,41,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,75,76,77,80,81,87,90,91,92,93,94,95,96,97,98,99,100,101,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,150,151,152,153,154,155,156,157,161,176,177,180,184,187,191,192,193,194,195,199,200,201,202,203,204,205,208,210,211,212,216,218,219,220,221,223,224,225,227,228,229,230,231,232,233,234,235,236,237,238,239,244,245,246,247,248,249,250,252,253,255,256,257,258,259,260,261,262,263,264,265,],[25,25,25,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-92,43,57,72,76,-96,80,84,-143,-144,-145,-146,25,-4,-13,-14,80,76,80,80,80,80,80,80,80,80,80,80,104,76,76,76,76,76,76,76,76,76,76,76,76,76,76,-93,-94,-95,-147,25,147,-91,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-152,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,25,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,25,25,76,182,80,-36,80,-153,-154,190,76,76,25,80,-31,25,-87,-88,147,-89,-90,-37,-137,-44,-32,213,-79,215,-80,182,25,-38,-41,25,25,-81,25,25,76,25,-42,76,25,25,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-82,-135,25,76,-7,25,25,25,-45,25,-10,-136,25,25,-39,25,-40,25,-33,-43,]),'INPUT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,31,34,35,36,37,38,39,40,41,75,76,77,80,81,90,91,92,93,94,95,96,97,98,99,100,101,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,142,143,150,152,153,157,176,177,180,184,191,192,193,194,195,199,201,203,205,208,210,211,212,216,218,219,220,221,223,225,227,228,229,230,231,232,233,234,235,236,237,238,239,244,245,246,247,248,249,250,252,253,255,256,257,258,259,260,261,262,263,264,265,],[26,26,26,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-92,-96,-143,-144,-145,-146,26,-4,-13,-14,-93,-94,-95,-147,26,-91,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-152,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,26,26,26,-36,-153,-154,26,-31,26,-87,-88,-89,-90,-37,-137,-44,-32,-79,-80,26,-38,-41,26,26,-81,26,26,-6,26,-42,26,26,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-82,-135,26,-9,-7,26,26,26,-45,26,-10,-136,26,26,-39,26,-40,26,-33,-43,]),'VAR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,31,34,35,36,37,38,39,40,41,75,76,77,80,81,90,91,92,93,94,95,96,97,98,99,100,101,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,142,143,150,152,153,157,176,177,180,184,191,192,193,194,195,199,201,203,205,208,210,211,212,216,218,219,220,221,223,225,227,228,229,230,231,232,233,234,235,236,237,238,239,244,245,246,247,248,249,250,252,253,255,256,257,258,259,260,261,262,263,264,265,],[27,27,27,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-92,-96,-143,-144,-145,-146,27,-4,-13,-14,-93,-94,-95,-147,27,-91,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-152,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,27,27,27,-36,-153,-154,27,-31,27,-87,-88,-89,-90,-37,-137,-44,-32,-79,-80,27,-38,-41,27,27,-81,27,27,-6,27,-42,27,27,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-82,-135,27,-9,-7,27,27,27,-45,27,-10,-136,27,27,-39,27,-40,27,-33,-43,]),'CONST':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,31,34,35,36,37,38,39,40,41,75,76,77,80,81,90,91,92,93,94,95,96,97,98,99,100,101,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,142,143,150,152,153,157,176,177,180,184,191,192,193,194,195,199,201,203,205,208,210,211,212,216,218,219,220,221,223,225,227,228,229,230,231,232,233,234,235,236,237,238,239,244,245,246,247,248,249,250,252,253,255,256,257,258,259,260,261,262,263,264,265,],[29,29,29,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-92,-96,-143,-144,-145,-146,29,-4,-13,-14,-93,-94,-95,-147,29,-91,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-152,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,29,29,29,-36,-153,-154,29,-31,29,-87,-88,-89,-90,-37,-137,-44,-32,-79,-80,29,-38,-41,29,29,-81,29,29,-6,29,-42,29,29,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-82,-135,29,-9,-7,29,29,29,-45,29,-10,-136,29,29,-39,29,-40,29,-33,-43,]),'IF':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,31,34,35,36,37,38,39,40,41,75,76,77,80,81,90,91,92,93,94,95,96,97,98,99,100,101,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,142,143,150,152,153,157,176,177,180,184,191,192,193,194,195,199,201,203,205,208,209,210,211,212,216,218,219,220,221,222,223,225,227,228,229,230,231,232,233,234,235,236,237,238,239,244,245,246,247,248,249,250,252,253,255,256,257,258,259,260,261,262,263,264,265,],[30,30,30,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-92,-96,-143,-144,-145,-146,30,-4,-13,-14,-93,-94,-95,-147,30,-91,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-152,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,30,30,30,-36,-153,-154,30,-31,30,-87,-88,-89,-90,-37,-137,-44,-32,-79,-80,30,-38,224,-41,30,30,-81,30,30,-6,30,224,-42,30,30,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-82,-135,30,-9,-7,30,30,30,-45,30,-10,-136,30,30,-39,30,-40,30,-33,-43,]),'SWITCH':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,31,34,35,36,37,38,39,40,41,75,76,77,80,81,90,91,92,93,94,95,96,97,98,99,100,101,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,142,143,150,152,153,157,176,177,180,184,191,192,193,194,195,199,201,203,205,208,210,211,212,216,218,219,220,221,223,225,227,228,229,230,231,232,233,234,235,236,237,238,239,244,245,246,247,248,249,250,252,253,255,256,257,258,259,260,261,262,263,264,265,],[32,32,32,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-92,-96,-143,-144,-145,-146,32,-4,-13,-14,-93,-94,-95,-147,32,-91,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-152,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,32,32,32,-36,-153,-154,32,-31,32,-87,-88,-89,-90,-37,-137,-44,-32,-79,-80,32,-38,-41,32,32,-81,32,32,-6,32,-42,32,32,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-82,-135,32,-9,-7,32,32,32,-45,32,-10,-136,32,32,-39,32,-40,32,-33,-43,]),'FOR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,31,34,35,36,37,38,39,40,41,75,76,77,80,81,90,91,92,93,94,95,96,97,98,99,100,101,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,142,143,150,152,153,157,176,177,180,184,191,192,193,194,195,199,201,203,205,208,210,216,218,219,220,221,223,225,244,245,246,247,248,249,250,252,253,255,256,257,258,259,260,261,262,263,264,265,],[33,33,33,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-92,-96,-143,-144,-145,-146,33,-4,-13,-14,-93,-94,-95,-147,33,-91,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-152,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,33,33,33,-36,-153,-154,33,-31,33,-87,-88,-89,-90,-37,-137,-44,-32,-79,-80,33,-38,-41,-81,33,33,-6,33,-42,33,-82,-135,33,-9,-7,33,33,33,-45,33,-10,-136,33,33,-39,33,-40,33,-33,-43,]),'STRING':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,30,31,32,33,34,35,36,37,38,39,40,41,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,75,76,77,80,81,90,91,92,93,94,95,96,97,98,99,100,101,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,150,151,152,153,155,156,157,161,176,177,180,184,191,192,193,194,195,199,201,202,203,204,205,208,210,211,212,216,218,219,220,221,223,224,225,227,228,229,230,231,232,233,234,235,236,237,238,239,244,245,246,247,248,249,250,252,253,255,256,257,258,259,260,261,262,263,264,265,],[34,34,34,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-92,34,-96,34,34,-143,-144,-145,-146,34,-4,-13,-14,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-93,-94,-95,-147,34,-91,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-152,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-36,34,-153,-154,34,34,34,34,-31,34,-87,-88,-89,-90,-37,-137,-44,-32,-79,34,-80,34,34,-38,-41,34,34,-81,34,34,34,34,-42,34,34,34,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-82,-135,34,34,-7,34,34,34,-45,34,-10,-136,34,34,-39,34,-40,34,-33,-43,]),'INTEGER':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,30,31,32,33,34,35,36,37,38,39,40,41,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,75,76,77,80,81,90,91,92,93,94,95,96,97,98,99,100,101,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,150,151,152,153,155,156,157,161,176,177,180,184,191,192,193,194,195,199,201,202,203,204,205,208,210,211,212,216,218,219,220,221,223,224,225,227,228,229,230,231,232,233,234,235,236,237,238,239,244,245,246,247,248,249,250,252,253,255,256,257,258,259,260,261,262,263,264,265,],[35,35,35,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-92,35,-96,35,35,-143,-144,-145,-146,35,-4,-13,-14,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-93,-94,-95,-147,35,-91,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-152,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-36,35,-153,-154,35,35,35,35,-31,35,-87,-88,-89,-90,-37,-137,-44,-32,-79,35,-80,35,35,-38,-41,35,35,-81,35,35,35,35,-42,35,35,35,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-82,-135,35,35,-7,35,35,35,-45,35,-10,-136,35,35,-39,35,-40,35,-33,-43,]),'FLOAT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,30,31,32,33,34,35,36,37,38,39,40,41,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,75,76,77,80,81,90,91,92,93,94,95,96,97,98,99,100,101,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,150,151,152,153,155,156,157,161,176,177,180,184,191,192,193,194,195,199,201,202,203,204,205,208,210,211,212,216,218,219,220,221,223,224,225,227,228,229,230,231,232,233,234,235,236,237,238,239,244,245,246,247,248,249,250,252,253,255,256,257,258,259,260,261,262,263,264,265,],[36,36,36,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-92,36,-96,36,36,-143,-144,-145,-146,36,-4,-13,-14,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-93,-94,-95,-147,36,-91,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-152,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-36,36,-153,-154,36,36,36,36,-31,36,-87,-88,-89,-90,-37,-137,-44,-32,-79,36,-80,36,36,-38,-41,36,36,-81,36,36,36,36,-42,36,36,36,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-82,-135,36,36,-7,36,36,36,-45,36,-10,-136,36,36,-39,36,-40,36,-33,-43,]),'BOOLEAN':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,30,31,32,33,34,35,36,37,38,39,40,41,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,75,76,77,80,81,90,91,92,93,94,95,96,97,98,99,100,101,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,150,151,152,153,155,156,157,161,176,177,180,184,191,192,193,194,195,199,201,202,203,204,205,208,210,211,212,216,218,219,220,221,223,224,225,227,228,229,230,231,232,233,234,235,236,237,238,239,244,245,246,247,248,249,250,252,253,255,256,257,258,259,260,261,262,263,264,265,],[37,37,37,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-92,37,-96,37,37,-143,-144,-145,-146,37,-4,-13,-14,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-93,-94,-95,-147,37,-91,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-152,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-36,37,-153,-154,37,37,37,37,-31,37,-87,-88,-89,-90,-37,-137,-44,-32,-79,37,-80,37,37,-38,-41,37,37,-81,37,37,37,37,-42,37,37,37,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-82,-135,37,37,-7,37,37,37,-45,37,-10,-136,37,37,-39,37,-40,37,-33,-43,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,31,34,35,36,37,38,39,40,41,75,76,77,80,90,91,92,93,94,95,96,97,98,99,100,101,110,111,112,113,114,115,116,117,118,119,120,121,122,123,150,152,153,176,180,184,191,192,193,194,195,199,201,203,208,210,216,223,244,245,253,257,260,262,264,265,],[0,-1,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-92,-96,-143,-144,-145,-146,-3,-4,-13,-14,-93,-94,-95,-147,-91,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-152,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-36,-153,-154,-31,-87,-88,-89,-90,-37,-137,-44,-32,-79,-80,-38,-41,-81,-42,-82,-135,-45,-136,-39,-40,-33,-43,]),'RKEY':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,31,34,35,36,37,38,39,40,41,75,76,77,80,90,91,92,93,94,95,96,97,98,99,100,101,110,111,112,113,114,115,116,117,118,119,120,121,122,123,127,142,150,152,153,157,159,160,176,177,180,184,191,192,193,194,195,197,199,201,203,208,210,211,212,216,218,219,220,223,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,],[-1,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-92,-96,-143,-144,-145,-146,-3,-4,-13,-14,-93,-94,-95,-147,-91,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-152,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-47,176,-36,-153,-154,193,195,-47,-31,199,-87,-88,-89,-90,-37,-137,-44,-46,-32,-79,-80,-38,-41,-50,-50,-81,245,-5,-6,-42,253,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-48,-82,-135,-8,-9,-7,257,260,-45,-49,-10,-136,262,-39,264,-40,265,-33,-43,]),'RETURN':([4,5,9,10,11,12,13,14,15,16,17,18,19,20,21,23,31,34,35,36,37,40,41,75,76,77,80,90,91,92,93,94,95,96,97,98,99,100,101,110,111,112,113,114,115,116,117,118,119,120,121,122,123,150,152,153,176,180,184,191,192,193,194,195,199,201,203,205,208,210,216,218,219,220,221,223,244,245,246,247,248,249,253,256,257,260,262,264,265,],[-11,-12,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-92,-96,-143,-144,-145,-146,-13,-14,-93,-94,-95,-147,-91,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-152,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-36,-153,-154,-31,-87,-88,-89,-90,-37,-137,-44,-32,-79,-80,220,-38,-41,-81,247,-5,-6,220,-42,-82,-135,-8,-9,-7,247,-45,-10,-136,-39,-40,-33,-43,]),'PLUS':([12,16,23,25,28,31,34,35,36,37,73,74,75,76,77,78,79,80,82,84,90,110,111,112,113,114,115,116,117,118,119,120,121,122,123,150,162,163,164,165,166,167,168,169,170,171,172,173,174,175,178,191,192,194,231,235,248,251,256,],[-93,-95,-92,-94,58,-96,-143,-144,-145,-146,-96,58,-93,-94,-95,128,-64,-147,-96,-94,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-137,128,128,128,128,128,128,128,128,128,128,128,128,128,128,-96,58,58,-137,-93,-95,58,-96,58,]),'MINUS':([12,16,23,25,28,31,34,35,36,37,73,74,75,76,77,78,79,80,82,84,90,110,111,112,113,114,115,116,117,118,119,120,121,122,123,150,162,163,164,165,166,167,168,169,170,171,172,173,174,175,178,191,192,194,231,235,248,251,256,],[-93,-95,-92,-94,59,-96,-143,-144,-145,-146,-96,59,-93,-94,-95,129,-64,-147,-96,-94,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-137,129,129,129,129,129,129,129,129,129,129,129,129,129,129,-96,59,59,-137,-93,-95,59,-96,59,]),'DIVIDE':([12,16,23,25,28,31,34,35,36,37,73,74,75,76,77,78,79,80,82,84,90,110,111,112,113,114,115,116,117,118,119,120,121,122,123,150,162,163,164,165,166,167,168,169,170,171,172,173,174,175,178,191,192,194,231,235,248,251,256,],[-93,-95,-92,-94,60,-96,-143,-144,-145,-146,-96,60,-93,-94,-95,131,-64,-147,-96,-94,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-137,131,131,131,131,131,131,131,131,131,131,131,131,131,131,-96,60,60,-137,-93,-95,60,-96,60,]),'TIMES':([12,16,23,25,28,31,34,35,36,37,73,74,75,76,77,78,79,80,82,84,90,110,111,112,113,114,115,116,117,118,119,120,121,122,123,150,162,163,164,165,166,167,168,169,170,171,172,173,174,175,178,191,192,194,231,235,248,251,256,],[-93,-95,-92,-94,61,-96,-143,-144,-145,-146,-96,61,-93,-94,-95,130,-64,-147,-96,-94,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-137,130,130,130,130,130,130,130,130,130,130,130,130,130,130,-96,61,61,-137,-93,-95,61,-96,61,]),'ENTERE_DIVIDE':([12,16,23,25,28,31,34,35,36,37,73,74,75,76,77,78,79,80,82,84,90,110,111,112,113,114,115,116,117,118,119,120,121,122,123,150,162,163,164,165,166,167,168,169,170,171,172,173,174,175,178,191,192,194,231,235,248,251,256,],[-93,-95,-92,-94,62,-96,-143,-144,-145,-146,-96,62,-93,-94,-95,132,-64,-147,-96,-94,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-137,132,132,132,132,132,132,132,132,132,132,132,132,132,132,-96,62,62,-137,-93,-95,62,-96,62,]),'MODULE':([12,16,23,25,28,31,34,35,36,37,73,74,75,76,77,78,79,80,82,84,90,110,111,112,113,114,115,116,117,118,119,120,121,122,123,150,162,163,164,165,166,167,168,169,170,171,172,173,174,175,178,191,192,194,231,235,248,251,256,],[-93,-95,-92,-94,63,-96,-143,-144,-145,-146,-96,63,-93,-94,-95,133,-64,-147,-96,-94,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-137,133,133,133,133,133,133,133,133,133,133,133,133,133,133,-96,63,63,-137,-93,-95,63,-96,63,]),'EQUALEQUAL':([12,16,23,25,28,31,34,35,36,37,73,74,75,76,77,78,79,80,82,84,90,110,111,112,113,114,115,116,117,118,119,120,121,122,123,150,162,163,164,165,166,167,168,169,170,171,172,173,174,175,178,191,192,194,231,235,248,251,256,],[-93,-95,-92,-94,64,-96,-143,-144,-145,-146,-96,64,-93,-94,-95,134,-64,-147,-96,-94,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-137,134,134,134,134,134,134,134,134,134,134,134,134,134,134,-96,64,64,-137,-93,-95,64,-96,64,]),'NOT_EQUAL':([12,16,23,25,28,31,34,35,36,37,73,74,75,76,77,78,79,80,82,84,90,110,111,112,113,114,115,116,117,118,119,120,121,122,123,150,162,163,164,165,166,167,168,169,170,171,172,173,174,175,178,191,192,194,231,235,248,251,256,],[-93,-95,-92,-94,65,-96,-143,-144,-145,-146,-96,65,-93,-94,-95,135,-64,-147,-96,-94,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-137,135,135,135,135,135,135,135,135,135,135,135,135,135,135,-96,65,65,-137,-93,-95,65,-96,65,]),'LESS_EQUAL':([12,16,23,25,28,31,34,35,36,37,73,74,75,76,77,78,79,80,82,84,90,110,111,112,113,114,115,116,117,118,119,120,121,122,123,150,162,163,164,165,166,167,168,169,170,171,172,173,174,175,178,191,192,194,231,235,248,251,256,],[-93,-95,-92,-94,66,-96,-143,-144,-145,-146,-96,66,-93,-94,-95,136,-64,-147,-96,-94,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-137,136,136,136,136,136,136,136,136,136,136,136,136,136,136,-96,66,66,-137,-93,-95,66,-96,66,]),'GREATER_EQUAL':([12,16,23,25,28,31,34,35,36,37,73,74,75,76,77,78,79,80,82,84,90,110,111,112,113,114,115,116,117,118,119,120,121,122,123,150,162,163,164,165,166,167,168,169,170,171,172,173,174,175,178,191,192,194,231,235,248,251,256,],[-93,-95,-92,-94,67,-96,-143,-144,-145,-146,-96,67,-93,-94,-95,137,-64,-147,-96,-94,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,-96,67,67,-137,-93,-95,67,-96,67,]),'LESS':([12,16,23,25,28,31,34,35,36,37,73,74,75,76,77,78,79,80,82,84,90,110,111,112,113,114,115,116,117,118,119,120,121,122,123,150,162,163,164,165,166,167,168,169,170,171,172,173,174,175,178,191,192,194,231,235,248,251,256,],[-93,-95,-92,-94,68,-96,-143,-144,-145,-146,-96,68,-93,-94,-95,138,-64,-147,-96,-94,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-137,138,138,138,138,138,138,138,138,138,138,138,138,138,138,-96,68,68,-137,-93,-95,68,-96,68,]),'GREATER':([12,16,23,25,28,31,34,35,36,37,73,74,75,76,77,78,79,80,82,84,90,110,111,112,113,114,115,116,117,118,119,120,121,122,123,150,162,163,164,165,166,167,168,169,170,171,172,173,174,175,178,191,192,194,231,235,248,251,256,],[-93,-95,-92,-94,69,-96,-143,-144,-145,-146,-96,69,-93,-94,-95,139,-64,-147,-96,-94,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,-137,139,139,139,139,139,139,139,139,139,139,139,139,139,139,-96,69,69,-137,-93,-95,69,-96,69,]),'LOGICAL_AND':([12,16,23,25,28,31,34,35,36,37,73,74,75,76,77,78,79,80,82,84,90,110,111,112,113,114,115,116,117,118,119,120,121,122,123,150,162,163,164,165,166,167,168,169,170,171,172,173,174,175,178,191,192,194,231,235,248,251,256,],[-93,-95,-92,-94,70,-96,-143,-144,-145,-146,-96,70,-93,-94,-95,140,-64,-147,-96,-94,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,-137,140,140,140,140,140,140,140,140,140,140,140,140,140,140,-96,70,70,-137,-93,-95,70,-96,70,]),'LOGICAL_OR':([12,16,23,25,28,31,34,35,36,37,73,74,75,76,77,78,79,80,82,84,90,110,111,112,113,114,115,116,117,118,119,120,121,122,123,150,162,163,164,165,166,167,168,169,170,171,172,173,174,175,178,191,192,194,231,235,248,251,256,],[-93,-95,-92,-94,71,-96,-143,-144,-145,-146,-96,71,-93,-94,-95,141,-64,-147,-96,-94,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-137,141,141,141,141,141,141,141,141,141,141,141,141,141,141,-96,71,71,-137,-93,-95,71,-96,71,]),'DOT':([22,],[42,]),'SEMICOLON':([23,31,34,35,36,37,75,76,77,83,90,110,111,112,113,114,115,116,117,118,119,120,121,122,123,178,194,],[-92,-96,-143,-144,-145,-146,-93,-94,-95,144,-91,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,200,-137,]),'CASE':([23,31,34,35,36,37,75,76,77,80,90,91,92,93,94,95,96,97,98,99,100,101,110,111,112,113,114,115,116,117,118,119,120,121,122,123,127,150,152,153,160,180,184,191,192,193,194,195,201,203,208,210,212,216,223,227,228,229,230,231,232,233,234,235,236,237,238,239,240,244,245,253,254,257,260,262,265,],[-92,-96,-143,-144,-145,-146,-93,-94,-95,-147,-91,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-152,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,161,-36,-153,-154,161,-87,-88,-89,-90,-37,-137,-44,-79,-80,-38,-41,-50,-81,-42,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-48,-82,-135,-45,-49,-136,-39,-40,-43,]),'DEFAULT':([23,31,34,35,36,37,75,76,77,80,90,91,92,93,94,95,96,97,98,99,100,101,110,111,112,113,114,115,116,117,118,119,120,121,122,123,127,150,152,153,159,160,180,184,191,192,193,194,195,197,201,203,208,210,212,216,223,227,228,229,230,231,232,233,234,235,236,237,238,239,240,244,245,253,254,257,260,262,265,],[-92,-96,-143,-144,-145,-146,-93,-94,-95,-147,-91,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-152,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-47,-36,-153,-154,196,-47,-87,-88,-89,-90,-37,-137,-44,-46,-79,-80,-38,-41,-50,-81,-42,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-48,-82,-135,-45,-49,-136,-39,-40,-43,]),'LKEY':([23,31,33,34,35,36,37,73,75,76,77,78,79,80,82,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,162,163,164,165,166,167,168,169,170,171,172,173,174,175,186,194,206,209,222,241,242,243,251,],[-92,-96,81,-143,-144,-145,-146,125,-93,-94,-95,127,-64,-147,143,-148,-149,-150,-151,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,205,-137,221,225,250,255,-34,-35,259,]),'LPAREN':([25,26,43,76,84,85,86,],[44,56,87,126,126,145,146,]),'SHORT_VAR_DECL':([25,84,],[45,45,]),'PLUS_EQ':([25,],[46,]),'MINUS_EQ':([25,],[47,]),'TIMES_EQ':([25,],[48,]),'DIVIDE_EQ':([25,],[49,]),'MODULO_EQ':([25,],[50,]),'BITWISE_AND_EQ':([25,],[51,]),'BITWISE_OR_EQ':([25,],[52,]),'BITWISE_XOR_EQ':([25,],[53,]),'LEFT_SHIFT_EQ':([25,],[54,]),'RIGHT_SHIFT_EQ':([25,],[55,]),'RPAREN':([34,35,36,37,56,80,88,89,102,103,104,106,107,108,109,145,146,148,149,158,179,181,182,183,185,188,189,190,204,207,214,215,217,],[-143,-144,-145,-146,101,-147,150,-141,152,153,-121,-148,-149,-150,-151,180,184,186,-138,194,201,-83,-84,203,-140,-142,-122,-121,216,-139,-85,-86,244,]),'COMMA':([34,35,36,37,80,88,89,103,104,106,107,108,109,148,149,158,179,181,182,183,185,188,189,190,207,214,215,217,],[-143,-144,-145,-146,-147,151,-141,154,-121,-148,-149,-150,-151,187,-138,151,202,-83,-84,204,-140,-142,154,-121,-139,-85,-86,202,]),'COLON':([34,35,36,37,80,196,198,],[-143,-144,-145,-146,-147,211,212,]),'PRINTLN':([42,],[85,]),'PRINTF':([42,],[86,]),'INTEGER_DATA_TYPE':([57,72,147,186,],[106,106,106,106,]),'FLOAT_DATA_TYPE':([57,72,147,186,],[107,107,107,107,]),'BOOLEAN_DATA_TYPE':([57,72,147,186,],[108,108,108,108,]),'STRING_DATA_TYPE':([57,72,147,186,],[109,109,109,109,]),'EQUAL':([105,106,107,108,109,124,],[155,-148,-149,-150,-151,156,]),'ELSE':([193,208,210,223,265,],[209,222,-41,-42,-43,]),'INCREASE':([213,],[242,]),'DECREASE':([213,],[243,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'loop_program':([0,81,143,255,],[1,142,177,261,]),'program':([0,1,81,125,142,143,177,205,218,221,225,249,250,255,259,261,],[2,38,2,157,38,2,38,219,246,219,252,246,258,2,263,38,]),'loop_reserved':([0,1,81,142,143,177,255,261,],[3,39,3,39,3,39,3,39,]),'sentencia':([0,1,2,38,81,125,142,143,157,177,205,218,219,221,225,246,249,250,252,255,258,259,261,263,],[4,4,40,40,4,4,4,4,40,4,4,4,40,4,4,40,4,4,40,4,40,4,4,40,]),'loop':([0,1,2,38,81,125,142,143,157,177,205,218,219,221,225,246,249,250,252,255,258,259,261,263,],[5,5,41,41,5,5,5,5,41,5,5,5,41,5,5,41,5,5,41,5,41,5,5,41,]),'print':([0,1,2,38,81,125,142,143,157,177,205,211,212,218,219,221,225,227,246,249,250,252,255,258,259,261,263,],[9,9,9,9,9,9,9,9,9,9,9,228,228,9,9,9,9,228,9,9,9,9,9,9,9,9,9,]),'print_withoutvalue':([0,1,2,38,81,125,142,143,157,177,205,211,212,218,219,221,225,227,246,249,250,252,255,258,259,261,263,],[10,10,10,10,10,10,10,10,10,10,10,229,229,10,10,10,10,229,10,10,10,10,10,10,10,10,10,]),'def_function':([0,1,2,38,81,125,142,143,157,177,205,211,212,218,219,221,225,227,246,249,250,252,255,258,259,261,263,],[11,11,11,11,11,11,11,11,11,11,11,230,230,11,11,11,11,230,11,11,11,11,11,11,11,11,11,]),'call_function':([0,1,2,30,33,38,45,58,59,60,61,62,63,64,65,66,67,68,69,70,71,81,125,142,143,144,155,156,157,177,205,211,212,218,219,220,221,224,225,227,246,247,249,250,252,255,258,259,261,263,],[12,12,12,75,75,12,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,12,12,12,12,75,75,75,12,12,12,231,231,12,12,75,12,75,12,231,12,75,12,12,12,12,12,12,12,12,]),'input':([0,1,2,38,81,125,142,143,157,177,205,211,212,218,219,221,225,227,246,249,250,252,255,258,259,261,263,],[13,13,13,13,13,13,13,13,13,13,13,232,232,13,13,13,13,232,13,13,13,13,13,13,13,13,13,]),'assignment':([0,1,2,38,81,125,142,143,157,177,205,211,212,218,219,221,225,227,246,249,250,252,255,258,259,261,263,],[14,14,14,14,14,14,14,14,14,14,14,233,233,14,14,14,14,233,14,14,14,14,14,14,14,14,14,]),'short_assignment':([0,1,2,33,38,81,125,142,143,157,177,205,211,212,218,219,221,225,227,246,249,250,252,255,258,259,261,263,],[15,15,15,83,15,15,15,15,15,15,15,15,234,234,15,15,15,15,234,15,15,15,15,15,15,15,15,15,]),'arithmetic_operation':([0,1,2,30,33,38,45,58,59,60,61,62,63,64,65,66,67,68,69,70,71,81,125,142,143,144,155,156,157,177,205,211,212,218,219,220,221,224,225,227,246,247,249,250,252,255,258,259,261,263,],[16,16,16,77,77,16,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,16,16,16,16,77,77,77,16,16,16,235,235,16,16,77,16,77,16,235,16,77,16,16,16,16,16,16,16,16,]),'direct_arithmetic_operation':([0,1,2,38,81,125,142,143,157,177,205,211,212,218,219,221,225,227,246,249,250,252,255,258,259,261,263,],[17,17,17,17,17,17,17,17,17,17,17,236,236,17,17,17,17,236,17,17,17,17,17,17,17,17,17,]),'if_statement':([0,1,2,38,81,125,142,143,157,177,205,211,212,218,219,221,225,227,246,249,250,252,255,258,259,261,263,],[18,18,18,18,18,18,18,18,18,18,18,237,237,18,18,18,18,237,18,18,18,18,18,18,18,18,18,]),'function_call':([0,1,2,38,81,125,142,143,157,177,205,211,212,218,219,221,225,227,246,249,250,252,255,258,259,261,263,],[19,19,19,19,19,19,19,19,19,19,19,238,238,19,19,19,19,238,19,19,19,19,19,19,19,19,19,]),'switch_statement':([0,1,2,38,81,125,142,143,157,177,205,211,212,218,219,221,225,227,246,249,250,252,255,258,259,261,263,],[20,20,20,20,20,20,20,20,20,20,20,239,239,20,20,20,20,239,20,20,20,20,20,20,20,20,20,]),'for':([0,1,2,38,81,125,142,143,157,177,205,218,219,221,225,246,249,250,252,255,258,259,261,263,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'value':([0,1,2,30,32,33,38,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,81,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,151,155,156,157,161,177,202,204,205,211,212,218,219,220,221,224,225,227,246,247,249,250,252,255,258,259,261,263,],[23,23,23,23,79,23,23,89,23,91,92,93,94,95,96,97,98,99,100,102,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,89,79,79,79,79,79,79,79,79,79,79,79,79,79,79,23,23,23,181,183,188,23,23,23,198,23,214,181,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'usable_value':([0,1,2,30,33,38,45,58,59,60,61,62,63,64,65,66,67,68,69,70,71,81,125,142,143,144,155,156,157,177,205,211,212,218,219,220,221,224,225,227,246,247,249,250,252,255,258,259,261,263,],[28,28,28,74,74,28,90,110,111,112,113,114,115,116,117,118,119,120,121,122,123,28,28,28,28,74,191,192,28,28,28,28,28,28,28,248,28,74,28,28,28,256,28,28,28,28,28,28,28,28,]),'comparation_operation':([0,1,2,30,33,38,45,58,59,60,61,62,63,64,65,66,67,68,69,70,71,81,125,142,143,144,155,156,157,177,205,211,212,218,219,220,221,224,225,227,246,247,249,250,252,255,258,259,261,263,],[31,31,31,73,82,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,178,31,31,31,31,31,31,31,31,31,31,31,251,31,31,31,31,31,31,31,31,31,31,31,31,]),'expression':([32,128,129,130,131,132,133,134,135,136,137,138,139,140,141,],[78,162,163,164,165,166,167,168,169,170,171,172,173,174,175,]),'values':([44,126,],[88,158,]),'identifiers':([56,154,],[103,189,]),'data_type':([57,72,147,186,],[105,124,185,206,]),'parameters':([87,],[148,]),'parameter':([87,187,],[149,207,]),'case_clauses':([127,160,],[159,197,]),'case_clause':([127,160,],[160,160,]),'data':([145,204,],[179,217,]),'conditions_elseif':([193,],[208,]),'else_if':([193,208,],[210,223,]),'func_program':([205,221,],[218,249,]),'statements':([211,212,227,],[226,240,254,]),'statement':([211,212,227,],[227,227,227,]),'operator_for':([213,],[241,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> loop_program","S'",1,None,None,None),
  ('loop_program -> program','loop_program',1,'p_loop_program','syntax_analyzer.py',5),
  ('loop_program -> loop_reserved','loop_program',1,'p_loop_program','syntax_analyzer.py',6),
  ('loop_program -> loop_program program','loop_program',2,'p_loop_program','syntax_analyzer.py',7),
  ('loop_program -> loop_program loop_reserved','loop_program',2,'p_loop_program','syntax_analyzer.py',8),
  ('func_program -> program','func_program',1,'p_func_program','syntax_analyzer.py',11),
  ('func_program -> RETURN','func_program',1,'p_func_program','syntax_analyzer.py',12),
  ('func_program -> RETURN usable_value','func_program',2,'p_func_program','syntax_analyzer.py',13),
  ('func_program -> func_program program','func_program',2,'p_func_program','syntax_analyzer.py',14),
  ('func_program -> func_program RETURN','func_program',2,'p_func_program','syntax_analyzer.py',15),
  ('func_program -> func_program RETURN usable_value','func_program',3,'p_func_program','syntax_analyzer.py',16),
  ('program -> sentencia','program',1,'p_program','syntax_analyzer.py',20),
  ('program -> loop','program',1,'p_program','syntax_analyzer.py',21),
  ('program -> program sentencia','program',2,'p_program','syntax_analyzer.py',22),
  ('program -> program loop','program',2,'p_program','syntax_analyzer.py',23),
  ('loop_reserved -> BREAK','loop_reserved',1,'p_loop_reserved','syntax_analyzer.py',27),
  ('loop_reserved -> CONTINUE','loop_reserved',1,'p_loop_reserved','syntax_analyzer.py',28),
  ('loop_reserved -> PASS','loop_reserved',1,'p_loop_reserved','syntax_analyzer.py',29),
  ('loop -> for','loop',1,'p_loop','syntax_analyzer.py',33),
  ('sentencia -> print','sentencia',1,'p_sentencia','syntax_analyzer.py',37),
  ('sentencia -> print_withoutvalue','sentencia',1,'p_sentencia','syntax_analyzer.py',38),
  ('sentencia -> def_function','sentencia',1,'p_sentencia','syntax_analyzer.py',39),
  ('sentencia -> call_function','sentencia',1,'p_sentencia','syntax_analyzer.py',40),
  ('sentencia -> input','sentencia',1,'p_sentencia','syntax_analyzer.py',41),
  ('sentencia -> assignment','sentencia',1,'p_sentencia','syntax_analyzer.py',42),
  ('sentencia -> short_assignment','sentencia',1,'p_sentencia','syntax_analyzer.py',43),
  ('sentencia -> arithmetic_operation','sentencia',1,'p_sentencia','syntax_analyzer.py',44),
  ('sentencia -> direct_arithmetic_operation','sentencia',1,'p_sentencia','syntax_analyzer.py',45),
  ('sentencia -> if_statement','sentencia',1,'p_sentencia','syntax_analyzer.py',46),
  ('sentencia -> function_call','sentencia',1,'p_sentencia','syntax_analyzer.py',47),
  ('sentencia -> switch_statement','sentencia',1,'p_sentencia','syntax_analyzer.py',48),
  ('for -> FOR LKEY loop_program RKEY','for',4,'p_for','syntax_analyzer.py',53),
  ('for -> FOR comparation_operation LKEY loop_program RKEY','for',5,'p_for','syntax_analyzer.py',54),
  ('for -> FOR short_assignment SEMICOLON comparation_operation SEMICOLON IDENTIFIER operator_for LKEY loop_program RKEY','for',10,'p_for','syntax_analyzer.py',55),
  ('operator_for -> INCREASE','operator_for',1,'p_operator_for','syntax_analyzer.py',58),
  ('operator_for -> DECREASE','operator_for',1,'p_operator_for','syntax_analyzer.py',59),
  ('function_call -> IDENTIFIER LPAREN values RPAREN','function_call',4,'p_function_call','syntax_analyzer.py',62),
  ('if_statement -> IF comparation_operation LKEY program RKEY','if_statement',5,'p_if_statement','syntax_analyzer.py',67),
  ('if_statement -> IF comparation_operation LKEY program RKEY conditions_elseif','if_statement',6,'p_if_statement','syntax_analyzer.py',68),
  ('if_statement -> IF comparation_operation LKEY program RKEY ELSE LKEY program RKEY','if_statement',9,'p_if_statement','syntax_analyzer.py',69),
  ('if_statement -> IF comparation_operation LKEY program RKEY conditions_elseif ELSE LKEY program RKEY','if_statement',10,'p_if_statement','syntax_analyzer.py',70),
  ('conditions_elseif -> else_if','conditions_elseif',1,'p_conditions_elseif','syntax_analyzer.py',75),
  ('conditions_elseif -> conditions_elseif else_if','conditions_elseif',2,'p_conditions_elseif','syntax_analyzer.py',76),
  ('else_if -> ELSE IF comparation_operation LKEY program RKEY','else_if',6,'p_else_if','syntax_analyzer.py',80),
  ('switch_statement -> SWITCH expression LKEY case_clauses RKEY','switch_statement',5,'p_switch_statement','syntax_analyzer.py',84),
  ('switch_statement -> SWITCH expression LKEY case_clauses DEFAULT COLON statements RKEY','switch_statement',8,'p_switch_statement','syntax_analyzer.py',85),
  ('case_clauses -> case_clause case_clauses','case_clauses',2,'p_case_clauses','syntax_analyzer.py',90),
  ('case_clauses -> <empty>','case_clauses',0,'p_case_clauses','syntax_analyzer.py',91),
  ('case_clause -> CASE value COLON statements','case_clause',4,'p_case_clause','syntax_analyzer.py',96),
  ('statements -> statement statements','statements',2,'p_statements','syntax_analyzer.py',101),
  ('statements -> <empty>','statements',0,'p_statements','syntax_analyzer.py',102),
  ('statement -> print','statement',1,'p_statement','syntax_analyzer.py',106),
  ('statement -> print_withoutvalue','statement',1,'p_statement','syntax_analyzer.py',107),
  ('statement -> def_function','statement',1,'p_statement','syntax_analyzer.py',108),
  ('statement -> call_function','statement',1,'p_statement','syntax_analyzer.py',109),
  ('statement -> input','statement',1,'p_statement','syntax_analyzer.py',110),
  ('statement -> assignment','statement',1,'p_statement','syntax_analyzer.py',111),
  ('statement -> short_assignment','statement',1,'p_statement','syntax_analyzer.py',112),
  ('statement -> arithmetic_operation','statement',1,'p_statement','syntax_analyzer.py',113),
  ('statement -> direct_arithmetic_operation','statement',1,'p_statement','syntax_analyzer.py',114),
  ('statement -> if_statement','statement',1,'p_statement','syntax_analyzer.py',115),
  ('statement -> function_call','statement',1,'p_statement','syntax_analyzer.py',116),
  ('statement -> switch_statement','statement',1,'p_statement','syntax_analyzer.py',117),
  ('statement -> statement','statement',1,'p_statement','syntax_analyzer.py',118),
  ('expression -> value','expression',1,'p_expression','syntax_analyzer.py',123),
  ('expression -> expression PLUS expression','expression',3,'p_expression','syntax_analyzer.py',124),
  ('expression -> expression MINUS expression','expression',3,'p_expression','syntax_analyzer.py',125),
  ('expression -> expression TIMES expression','expression',3,'p_expression','syntax_analyzer.py',126),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','syntax_analyzer.py',127),
  ('expression -> expression ENTERE_DIVIDE expression','expression',3,'p_expression','syntax_analyzer.py',128),
  ('expression -> expression MODULE expression','expression',3,'p_expression','syntax_analyzer.py',129),
  ('expression -> expression EQUALEQUAL expression','expression',3,'p_expression','syntax_analyzer.py',130),
  ('expression -> expression NOT_EQUAL expression','expression',3,'p_expression','syntax_analyzer.py',131),
  ('expression -> expression LESS_EQUAL expression','expression',3,'p_expression','syntax_analyzer.py',132),
  ('expression -> expression GREATER_EQUAL expression','expression',3,'p_expression','syntax_analyzer.py',133),
  ('expression -> expression LESS expression','expression',3,'p_expression','syntax_analyzer.py',134),
  ('expression -> expression GREATER expression','expression',3,'p_expression','syntax_analyzer.py',135),
  ('expression -> expression LOGICAL_AND expression','expression',3,'p_expression','syntax_analyzer.py',136),
  ('expression -> expression LOGICAL_OR expression','expression',3,'p_expression','syntax_analyzer.py',137),
  ('print -> FMT_LIBRARY DOT PRINTLN LPAREN data RPAREN','print',6,'p_print','syntax_analyzer.py',145),
  ('print -> FMT_LIBRARY DOT PRINTF LPAREN value RPAREN','print',6,'p_print','syntax_analyzer.py',146),
  ('print -> FMT_LIBRARY DOT PRINTF LPAREN value COMMA RPAREN','print',7,'p_print','syntax_analyzer.py',147),
  ('print -> FMT_LIBRARY DOT PRINTF LPAREN value COMMA data RPAREN','print',8,'p_print','syntax_analyzer.py',148),
  ('data -> value','data',1,'p_data','syntax_analyzer.py',151),
  ('data -> IDENTIFIER','data',1,'p_data','syntax_analyzer.py',152),
  ('data -> data COMMA value','data',3,'p_data','syntax_analyzer.py',153),
  ('data -> data COMMA IDENTIFIER','data',3,'p_data','syntax_analyzer.py',154),
  ('print_withoutvalue -> FMT_LIBRARY DOT PRINTLN LPAREN RPAREN','print_withoutvalue',5,'p_print_withoutvalue','syntax_analyzer.py',157),
  ('print_withoutvalue -> FMT_LIBRARY DOT PRINTF LPAREN RPAREN','print_withoutvalue',5,'p_print_withoutvalue','syntax_analyzer.py',158),
  ('assignment -> VAR IDENTIFIER data_type EQUAL usable_value','assignment',5,'p_assignment','syntax_analyzer.py',172),
  ('assignment -> CONST IDENTIFIER data_type EQUAL usable_value','assignment',5,'p_assignment','syntax_analyzer.py',173),
  ('short_assignment -> IDENTIFIER SHORT_VAR_DECL usable_value','short_assignment',3,'p_short_assignment','syntax_analyzer.py',179),
  ('usable_value -> value','usable_value',1,'p_usable_value','syntax_analyzer.py',182),
  ('usable_value -> call_function','usable_value',1,'p_usable_value','syntax_analyzer.py',183),
  ('usable_value -> IDENTIFIER','usable_value',1,'p_usable_value','syntax_analyzer.py',184),
  ('usable_value -> arithmetic_operation','usable_value',1,'p_usable_value','syntax_analyzer.py',185),
  ('usable_value -> comparation_operation','usable_value',1,'p_usable_value','syntax_analyzer.py',186),
  ('direct_arithmetic_operation -> IDENTIFIER PLUS_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',192),
  ('direct_arithmetic_operation -> IDENTIFIER MINUS_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',193),
  ('direct_arithmetic_operation -> IDENTIFIER TIMES_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',194),
  ('direct_arithmetic_operation -> IDENTIFIER DIVIDE_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',195),
  ('direct_arithmetic_operation -> IDENTIFIER MODULO_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',196),
  ('direct_arithmetic_operation -> IDENTIFIER BITWISE_AND_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',197),
  ('direct_arithmetic_operation -> IDENTIFIER BITWISE_OR_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',198),
  ('direct_arithmetic_operation -> IDENTIFIER BITWISE_XOR_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',199),
  ('direct_arithmetic_operation -> IDENTIFIER LEFT_SHIFT_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',200),
  ('direct_arithmetic_operation -> IDENTIFIER RIGHT_SHIFT_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',201),
  ('arithmetic_operation -> usable_value PLUS usable_value','arithmetic_operation',3,'p_arithmetic_operation','syntax_analyzer.py',206),
  ('arithmetic_operation -> usable_value MINUS usable_value','arithmetic_operation',3,'p_arithmetic_operation','syntax_analyzer.py',207),
  ('arithmetic_operation -> usable_value DIVIDE usable_value','arithmetic_operation',3,'p_arithmetic_operation','syntax_analyzer.py',208),
  ('arithmetic_operation -> usable_value TIMES usable_value','arithmetic_operation',3,'p_arithmetic_operation','syntax_analyzer.py',209),
  ('arithmetic_operation -> usable_value ENTERE_DIVIDE usable_value','arithmetic_operation',3,'p_arithmetic_operation','syntax_analyzer.py',210),
  ('arithmetic_operation -> usable_value MODULE usable_value','arithmetic_operation',3,'p_arithmetic_operation','syntax_analyzer.py',211),
  ('comparation_operation -> usable_value EQUALEQUAL usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',218),
  ('comparation_operation -> usable_value NOT_EQUAL usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',219),
  ('comparation_operation -> usable_value LESS_EQUAL usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',220),
  ('comparation_operation -> usable_value GREATER_EQUAL usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',221),
  ('comparation_operation -> usable_value LESS usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',222),
  ('comparation_operation -> usable_value GREATER usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',223),
  ('comparation_operation -> usable_value LOGICAL_AND usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',224),
  ('comparation_operation -> usable_value LOGICAL_OR usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',225),
  ('identifiers -> IDENTIFIER','identifiers',1,'p_identifiers','syntax_analyzer.py',230),
  ('identifiers -> identifiers COMMA identifiers','identifiers',3,'p_identifiers','syntax_analyzer.py',231),
  ('rule_comparation -> IDENTIFIER EQUALEQUAL value','rule_comparation',3,'p_rule_comparation','syntax_analyzer.py',235),
  ('rule_comparation -> IDENTIFIER NOT_EQUAL value','rule_comparation',3,'p_rule_comparation','syntax_analyzer.py',236),
  ('rule_comparation -> IDENTIFIER LESS_EQUAL value','rule_comparation',3,'p_rule_comparation','syntax_analyzer.py',237),
  ('rule_comparation -> IDENTIFIER GREATER_EQUAL value','rule_comparation',3,'p_rule_comparation','syntax_analyzer.py',238),
  ('rule_comparation -> IDENTIFIER LESS value','rule_comparation',3,'p_rule_comparation','syntax_analyzer.py',239),
  ('rule_comparation -> IDENTIFIER GREATER value','rule_comparation',3,'p_rule_comparation','syntax_analyzer.py',240),
  ('rule_comparation -> IDENTIFIER LOGICAL_AND value','rule_comparation',3,'p_rule_comparation','syntax_analyzer.py',241),
  ('rule_comparation -> IDENTIFIER LOGICAL_OR value','rule_comparation',3,'p_rule_comparation','syntax_analyzer.py',242),
  ('condition -> value comparation_operation value','condition',3,'p_condition','syntax_analyzer.py',246),
  ('condition -> condition LOGICAL_AND condition','condition',3,'p_condition','syntax_analyzer.py',247),
  ('condition -> condition LOGICAL_OR condition','condition',3,'p_condition','syntax_analyzer.py',248),
  ('condition -> LOGICAL_NOT condition','condition',2,'p_condition','syntax_analyzer.py',249),
  ('def_function -> FUNC IDENTIFIER LPAREN parameters RPAREN LKEY func_program RKEY','def_function',8,'p_def_function','syntax_analyzer.py',256),
  ('def_function -> FUNC IDENTIFIER LPAREN parameters RPAREN data_type LKEY func_program RKEY','def_function',9,'p_def_function','syntax_analyzer.py',257),
  ('call_function -> IDENTIFIER LPAREN values RPAREN','call_function',4,'p_call_funcion','syntax_analyzer.py',260),
  ('parameters -> parameter','parameters',1,'p_parameters','syntax_analyzer.py',263),
  ('parameters -> parameters COMMA parameter','parameters',3,'p_parameters','syntax_analyzer.py',264),
  ('parameter -> IDENTIFIER data_type','parameter',2,'p_parameter','syntax_analyzer.py',269),
  ('values -> value','values',1,'p_values','syntax_analyzer.py',272),
  ('values -> values COMMA value','values',3,'p_values','syntax_analyzer.py',273),
  ('value -> STRING','value',1,'p_value','syntax_analyzer.py',277),
  ('value -> INTEGER','value',1,'p_value','syntax_analyzer.py',278),
  ('value -> FLOAT','value',1,'p_value','syntax_analyzer.py',279),
  ('value -> BOOLEAN','value',1,'p_value','syntax_analyzer.py',280),
  ('value -> IDENTIFIER','value',1,'p_value','syntax_analyzer.py',281),
  ('data_type -> INTEGER_DATA_TYPE','data_type',1,'p_data_type','syntax_analyzer.py',284),
  ('data_type -> FLOAT_DATA_TYPE','data_type',1,'p_data_type','syntax_analyzer.py',285),
  ('data_type -> BOOLEAN_DATA_TYPE','data_type',1,'p_data_type','syntax_analyzer.py',286),
  ('data_type -> STRING_DATA_TYPE','data_type',1,'p_data_type','syntax_analyzer.py',287),
  ('input -> INPUT LPAREN RPAREN','input',3,'p_input','syntax_analyzer.py',291),
  ('input -> INPUT LPAREN value RPAREN','input',4,'p_input','syntax_analyzer.py',292),
  ('input -> INPUT LPAREN identifiers RPAREN','input',4,'p_input','syntax_analyzer.py',293),
]
