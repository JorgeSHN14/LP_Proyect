
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AMPERSAND AND ARROW_FUNCTION_TYPE ARROW_SEND_RECEIVE AS ASSERT BITWISE_AND_EQ BITWISE_OR_EQ BITWISE_XOR BITWISE_XOR_ASSIGN BITWISE_XOR_EQ BOOLEAN BOOLEAN_DATA_TYPE BREAK CASE CLASS COLON COMMA COMMENT COMMENT_MULTI CONST CONTINUE DECREASE DEFAULT DEL DIVIDE DIVIDE_EQ DOT ELIF ELLIPSIS ELSE ENTERE_DIVIDE EQUAL EQUALEQUAL EXCEPT FALSE FAT_ARROW FINALLY FLOAT FLOAT_DATA_TYPE FMT_LIBRARY FOR FROM FUNC GLOBAL GREATER GREATER_EQUAL GREATER_THAN HEX_NUMBER IDENTIFIER IF IMPORT IN INCREASE INPUT INTEGER INTEGER_DATA_TYPE IS LAMBDA LBRACKET LEFT_SHIFT_EQ LESS LESS_EQUAL LESS_THAN LKEY LOGICAL_AND LOGICAL_NOT LOGICAL_OR LPAREN MINUS MINUS_EQ MODULE MODULO_EQ NONE NONLOCAL NOT NOT_EQUAL NULL OR PASS PIPE PLUS PLUS_EQ PRINTF PRINTLN RAISE RBRACKET RETURN RIGHT_SHIFT_EQ RKEY RPAREN SCIENTIFIC_NOTATION SEMICOLON SHORT_VAR_DECL STRING STRING_DATA_TYPE SWITCH TIMES TIMES_EQ TRUE TRY VAR WITH YIELD loop_program : program\n                  | loop_reserved\n                  | loop_program program\n                  | loop_program loop_reserved\n   func_program : program\n                  | RETURN\n                  | RETURN usable_value\n                  | func_program program\n                  | func_program RETURN\n                  | func_program RETURN usable_value\n  program : sentencia\n             | loop\n             | program sentencia\n             | program loop\n   loop_reserved : BREAK\n                  | CONTINUE\n                  | PASS\n  loop : for\n  sentencia : print\n               | print_withoutvalue\n               | def_function\n               | call_function\n               | input\n               | assignment\n               | short_assignment\n               | arithmetic_operation\n               | direct_arithmetic_operation\n               | if_statement\n               | function_call\n               | switch_statementfor : FOR LKEY loop_program RKEY\n         | FOR comparation_operation LKEY loop_program RKEY\n         | FOR short_assignment SEMICOLON comparation_operation SEMICOLON IDENTIFIER operator_for LKEY loop_program RKEYoperator_for : INCREASE\n                   | DECREASEfunction_call : IDENTIFIER LPAREN values RPARENif_statement : IF comparation_operation LKEY program RKEY\n                    | IF comparation_operation LKEY program RKEY conditions_elseif\n                    | IF comparation_operation LKEY program RKEY ELSE LKEY program RKEY\n                    | IF comparation_operation LKEY program RKEY conditions_elseif ELSE LKEY program RKEY\n    conditions_elseif : else_if\n                        | conditions_elseif else_if\n   else_if : ELSE IF comparation_operation LKEY program RKEY\n   \n    switch_statement : SWITCH value LKEY switch_cases RKEY\n                     | SWITCH LKEY switch_cases RKEY\n                     | SWITCH switch_expression LKEY switch_cases RKEY\n    \n    switch_expression : value\n                     |\n    \n    switch_cases : switch_case switch_cases\n                 |\n    \n    switch_case : CASE value COLON statements\n               | CASE COLON statements\n    \n    statements : statement statements\n               |\n    \n    statement : print\n               | print_withoutvalue\n               | def_function\n               | call_function\n               | input\n               | assignment\n               | short_assignment\n               | arithmetic_operation\n               | direct_arithmetic_operation\n               | if_statement\n               | function_call\n               | switch_statementprint : FMT_LIBRARY DOT PRINTLN LPAREN data RPAREN\n           | FMT_LIBRARY DOT PRINTF LPAREN value RPAREN\n           | FMT_LIBRARY DOT PRINTF LPAREN value COMMA RPAREN\n           | FMT_LIBRARY DOT PRINTF LPAREN value COMMA data RPARENdata : value\n         | IDENTIFIER\n         | data COMMA value\n         | data COMMA IDENTIFIERprint_withoutvalue : FMT_LIBRARY DOT PRINTLN LPAREN RPAREN\n            | FMT_LIBRARY DOT PRINTF LPAREN RPARENassignment : VAR IDENTIFIER data_type EQUAL usable_value\n                | CONST IDENTIFIER data_type EQUAL usable_valueshort_assignment : IDENTIFIER SHORT_VAR_DECL usable_value usable_value : value\n                 | call_function\n                 | IDENTIFIER\n                 | arithmetic_operation\n                 | comparation_operation\n  \n  direct_arithmetic_operation : IDENTIFIER PLUS_EQ value\n                      | IDENTIFIER MINUS_EQ value\n                      | IDENTIFIER TIMES_EQ value\n                      | IDENTIFIER DIVIDE_EQ value\n                      | IDENTIFIER MODULO_EQ value\n                      | IDENTIFIER BITWISE_AND_EQ value\n                      | IDENTIFIER BITWISE_OR_EQ value\n                      | IDENTIFIER BITWISE_XOR_EQ value\n                      | IDENTIFIER LEFT_SHIFT_EQ value\n                      | IDENTIFIER RIGHT_SHIFT_EQ value\n  \n  arithmetic_operation : usable_value PLUS usable_value\n                      | usable_value MINUS usable_value\n                      | usable_value DIVIDE usable_value\n                      | usable_value TIMES usable_value\n                      | usable_value ENTERE_DIVIDE usable_value\n                      | usable_value MODULE usable_value\n  \n    comparation_operation : usable_value EQUALEQUAL usable_value\n                        | usable_value NOT_EQUAL usable_value\n                        | usable_value LESS_EQUAL usable_value\n                        | usable_value GREATER_EQUAL usable_value\n                        | usable_value LESS usable_value\n                        | usable_value GREATER usable_value\n                        | usable_value LOGICAL_AND usable_value\n                        | usable_value LOGICAL_OR usable_value\n    identifiers : IDENTIFIER\n                 | identifiers COMMA identifiersrule_comparation : IDENTIFIER EQUALEQUAL value\n                        | IDENTIFIER NOT_EQUAL value\n                        | IDENTIFIER LESS_EQUAL value\n                        | IDENTIFIER GREATER_EQUAL value\n                        | IDENTIFIER LESS value\n                        | IDENTIFIER GREATER value\n                        | IDENTIFIER LOGICAL_AND value\n                        | IDENTIFIER LOGICAL_OR value\n    condition : value comparation_operation value\n              | condition LOGICAL_AND condition\n              | condition LOGICAL_OR condition\n              | LOGICAL_NOT condition\n    def_function : FUNC IDENTIFIER LPAREN parameters RPAREN LKEY func_program RKEY\n                  | FUNC IDENTIFIER LPAREN parameters RPAREN data_type LKEY func_program RKEYcall_function : IDENTIFIER LPAREN values RPARENparameters : parameter\n                | parameters COMMA parameter parameter : IDENTIFIER data_typevalues : value\n            | values COMMA valuevalue : STRING\n          | INTEGER\n          | FLOAT\n          | BOOLEAN\n          | IDENTIFIERdata_type : INTEGER_DATA_TYPE\n               | FLOAT_DATA_TYPE\n               | BOOLEAN_DATA_TYPE\n               | STRING_DATA_TYPEinput : INPUT LPAREN RPAREN\n             | INPUT LPAREN value RPAREN\n             | INPUT LPAREN identifiers RPAREN\n    '
    
_lr_action_items = {'BREAK':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,31,34,35,36,37,38,39,40,41,75,76,77,81,82,91,92,93,94,95,96,97,98,99,100,101,102,111,112,113,114,115,116,117,118,119,120,121,122,123,124,133,134,141,143,144,151,156,157,160,164,171,172,173,174,175,191,192,194,196,201,203,209,216,222,223,231,233,236,237,238,240,241,],[6,6,-1,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-80,-84,-131,-132,-133,-134,-3,-4,-13,-14,-81,-82,-83,-135,6,-79,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-140,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,6,6,-36,-141,-142,-45,-31,6,-75,-76,-77,-78,-37,-125,-44,-46,-32,-67,-68,-38,-41,-69,-42,-70,-123,6,-124,-39,6,-40,-33,-43,]),'CONTINUE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,31,34,35,36,37,38,39,40,41,75,76,77,81,82,91,92,93,94,95,96,97,98,99,100,101,102,111,112,113,114,115,116,117,118,119,120,121,122,123,124,133,134,141,143,144,151,156,157,160,164,171,172,173,174,175,191,192,194,196,201,203,209,216,222,223,231,233,236,237,238,240,241,],[7,7,-1,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-80,-84,-131,-132,-133,-134,-3,-4,-13,-14,-81,-82,-83,-135,7,-79,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-140,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,7,7,-36,-141,-142,-45,-31,7,-75,-76,-77,-78,-37,-125,-44,-46,-32,-67,-68,-38,-41,-69,-42,-70,-123,7,-124,-39,7,-40,-33,-43,]),'PASS':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,31,34,35,36,37,38,39,40,41,75,76,77,81,82,91,92,93,94,95,96,97,98,99,100,101,102,111,112,113,114,115,116,117,118,119,120,121,122,123,124,133,134,141,143,144,151,156,157,160,164,171,172,173,174,175,191,192,194,196,201,203,209,216,222,223,231,233,236,237,238,240,241,],[8,8,-1,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-80,-84,-131,-132,-133,-134,-3,-4,-13,-14,-81,-82,-83,-135,8,-79,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-140,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,8,8,-36,-141,-142,-45,-31,8,-75,-76,-77,-78,-37,-125,-44,-46,-32,-67,-68,-38,-41,-69,-42,-70,-123,8,-124,-39,8,-40,-33,-43,]),'FMT_LIBRARY':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,31,34,35,36,37,38,39,40,41,75,76,77,81,82,91,92,93,94,95,96,97,98,99,100,101,102,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,133,134,141,143,144,148,151,154,156,157,160,164,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,196,198,201,203,209,211,212,213,214,216,218,222,223,224,225,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,],[22,22,22,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-80,-84,-131,-132,-133,-134,22,-4,-13,-14,-81,-82,-83,-135,22,-79,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-140,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,22,22,22,-36,-141,-142,22,-45,22,-31,22,-75,-76,-77,-78,-37,-125,-44,22,22,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-46,-32,-67,-68,22,-38,-41,-69,22,22,-6,22,-42,22,-70,-123,22,-9,-7,22,22,22,22,-10,-124,22,22,-39,22,-40,22,-33,-43,]),'FUNC':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,31,34,35,36,37,38,39,40,41,75,76,77,81,82,91,92,93,94,95,96,97,98,99,100,101,102,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,133,134,141,143,144,148,151,154,156,157,160,164,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,196,198,201,203,209,211,212,213,214,216,218,222,223,224,225,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,],[24,24,24,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-80,-84,-131,-132,-133,-134,24,-4,-13,-14,-81,-82,-83,-135,24,-79,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-140,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,24,24,24,-36,-141,-142,24,-45,24,-31,24,-75,-76,-77,-78,-37,-125,-44,24,24,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-46,-32,-67,-68,24,-38,-41,-69,24,24,-6,24,-42,24,-70,-123,24,-9,-7,24,24,24,24,-10,-124,24,24,-39,24,-40,24,-33,-43,]),'IDENTIFIER':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,27,29,30,31,32,33,34,35,36,37,38,39,40,41,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,75,76,77,81,82,88,91,92,93,94,95,96,97,98,99,100,101,102,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,131,133,134,135,136,137,141,142,143,144,145,146,147,148,151,154,156,157,160,164,167,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,201,203,209,211,212,213,214,216,217,218,222,223,224,225,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,],[25,25,25,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-80,43,57,72,76,-84,81,85,-131,-132,-133,-134,25,-4,-13,-14,81,76,81,81,81,81,81,81,81,81,81,81,105,76,76,76,76,76,76,76,76,76,76,76,76,76,76,-81,-82,-83,-135,25,138,-79,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-140,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,25,81,81,25,25,76,162,81,-36,81,-141,-142,170,76,76,25,-45,25,-31,25,-75,-76,138,-77,-78,-37,-125,-44,25,25,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-46,-32,206,-67,208,-68,162,25,-38,-41,-69,25,25,76,25,-42,76,25,-70,-123,25,76,-7,25,25,25,25,-10,-124,25,25,-39,25,-40,25,-33,-43,]),'INPUT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,31,34,35,36,37,38,39,40,41,75,76,77,81,82,91,92,93,94,95,96,97,98,99,100,101,102,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,133,134,141,143,144,148,151,154,156,157,160,164,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,196,198,201,203,209,211,212,213,214,216,218,222,223,224,225,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,],[26,26,26,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-80,-84,-131,-132,-133,-134,26,-4,-13,-14,-81,-82,-83,-135,26,-79,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-140,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,26,26,26,-36,-141,-142,26,-45,26,-31,26,-75,-76,-77,-78,-37,-125,-44,26,26,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-46,-32,-67,-68,26,-38,-41,-69,26,26,-6,26,-42,26,-70,-123,26,-9,-7,26,26,26,26,-10,-124,26,26,-39,26,-40,26,-33,-43,]),'VAR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,31,34,35,36,37,38,39,40,41,75,76,77,81,82,91,92,93,94,95,96,97,98,99,100,101,102,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,133,134,141,143,144,148,151,154,156,157,160,164,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,196,198,201,203,209,211,212,213,214,216,218,222,223,224,225,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,],[27,27,27,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-80,-84,-131,-132,-133,-134,27,-4,-13,-14,-81,-82,-83,-135,27,-79,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-140,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,27,27,27,-36,-141,-142,27,-45,27,-31,27,-75,-76,-77,-78,-37,-125,-44,27,27,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-46,-32,-67,-68,27,-38,-41,-69,27,27,-6,27,-42,27,-70,-123,27,-9,-7,27,27,27,27,-10,-124,27,27,-39,27,-40,27,-33,-43,]),'CONST':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,31,34,35,36,37,38,39,40,41,75,76,77,81,82,91,92,93,94,95,96,97,98,99,100,101,102,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,133,134,141,143,144,148,151,154,156,157,160,164,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,196,198,201,203,209,211,212,213,214,216,218,222,223,224,225,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,],[29,29,29,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-80,-84,-131,-132,-133,-134,29,-4,-13,-14,-81,-82,-83,-135,29,-79,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-140,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,29,29,29,-36,-141,-142,29,-45,29,-31,29,-75,-76,-77,-78,-37,-125,-44,29,29,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-46,-32,-67,-68,29,-38,-41,-69,29,29,-6,29,-42,29,-70,-123,29,-9,-7,29,29,29,29,-10,-124,29,29,-39,29,-40,29,-33,-43,]),'IF':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,31,34,35,36,37,38,39,40,41,75,76,77,81,82,91,92,93,94,95,96,97,98,99,100,101,102,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,133,134,141,143,144,148,151,154,156,157,160,164,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,196,198,201,202,203,209,211,212,213,214,215,216,218,222,223,224,225,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,],[30,30,30,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-80,-84,-131,-132,-133,-134,30,-4,-13,-14,-81,-82,-83,-135,30,-79,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-140,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,30,30,30,-36,-141,-142,30,-45,30,-31,30,-75,-76,-77,-78,-37,-125,-44,30,30,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-46,-32,-67,-68,30,-38,217,-41,-69,30,30,-6,30,217,-42,30,-70,-123,30,-9,-7,30,30,30,30,-10,-124,30,30,-39,30,-40,30,-33,-43,]),'SWITCH':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,31,34,35,36,37,38,39,40,41,75,76,77,81,82,91,92,93,94,95,96,97,98,99,100,101,102,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,133,134,141,143,144,148,151,154,156,157,160,164,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,196,198,201,203,209,211,212,213,214,216,218,222,223,224,225,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,],[32,32,32,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-80,-84,-131,-132,-133,-134,32,-4,-13,-14,-81,-82,-83,-135,32,-79,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-140,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,32,32,32,-36,-141,-142,32,-45,32,-31,32,-75,-76,-77,-78,-37,-125,-44,32,32,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-46,-32,-67,-68,32,-38,-41,-69,32,32,-6,32,-42,32,-70,-123,32,-9,-7,32,32,32,32,-10,-124,32,32,-39,32,-40,32,-33,-43,]),'FOR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,31,34,35,36,37,38,39,40,41,75,76,77,81,82,91,92,93,94,95,96,97,98,99,100,101,102,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,133,134,141,143,144,148,151,156,157,160,164,171,172,173,174,175,191,192,194,196,198,201,203,209,211,212,213,214,216,218,222,223,224,225,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,],[33,33,33,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-80,-84,-131,-132,-133,-134,33,-4,-13,-14,-81,-82,-83,-135,33,-79,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-140,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,33,33,33,-36,-141,-142,33,-45,-31,33,-75,-76,-77,-78,-37,-125,-44,-46,-32,-67,-68,33,-38,-41,-69,33,33,-6,33,-42,33,-70,-123,33,-9,-7,33,33,33,33,-10,-124,33,33,-39,33,-40,33,-33,-43,]),'STRING':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,30,31,32,33,34,35,36,37,38,39,40,41,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,75,76,77,81,82,91,92,93,94,95,96,97,98,99,100,101,102,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,131,133,134,135,136,137,141,142,143,144,146,147,148,151,154,156,157,160,164,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,201,203,209,211,212,213,214,216,217,218,222,223,224,225,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,],[34,34,34,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-80,34,-84,34,34,-131,-132,-133,-134,34,-4,-13,-14,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-81,-82,-83,-135,34,-79,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-140,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,34,34,34,34,34,34,34,34,-36,34,-141,-142,34,34,34,-45,34,-31,34,-75,-76,-77,-78,-37,-125,-44,34,34,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-46,-32,-67,34,-68,34,34,-38,-41,-69,34,34,34,34,-42,34,34,-70,-123,34,34,-7,34,34,34,34,-10,-124,34,34,-39,34,-40,34,-33,-43,]),'INTEGER':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,30,31,32,33,34,35,36,37,38,39,40,41,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,75,76,77,81,82,91,92,93,94,95,96,97,98,99,100,101,102,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,131,133,134,135,136,137,141,142,143,144,146,147,148,151,154,156,157,160,164,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,201,203,209,211,212,213,214,216,217,218,222,223,224,225,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,],[35,35,35,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-80,35,-84,35,35,-131,-132,-133,-134,35,-4,-13,-14,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-81,-82,-83,-135,35,-79,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-140,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,35,35,35,35,35,35,35,35,-36,35,-141,-142,35,35,35,-45,35,-31,35,-75,-76,-77,-78,-37,-125,-44,35,35,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-46,-32,-67,35,-68,35,35,-38,-41,-69,35,35,35,35,-42,35,35,-70,-123,35,35,-7,35,35,35,35,-10,-124,35,35,-39,35,-40,35,-33,-43,]),'FLOAT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,30,31,32,33,34,35,36,37,38,39,40,41,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,75,76,77,81,82,91,92,93,94,95,96,97,98,99,100,101,102,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,131,133,134,135,136,137,141,142,143,144,146,147,148,151,154,156,157,160,164,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,201,203,209,211,212,213,214,216,217,218,222,223,224,225,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,],[36,36,36,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-80,36,-84,36,36,-131,-132,-133,-134,36,-4,-13,-14,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-81,-82,-83,-135,36,-79,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-140,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,36,36,36,36,36,36,36,36,-36,36,-141,-142,36,36,36,-45,36,-31,36,-75,-76,-77,-78,-37,-125,-44,36,36,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-46,-32,-67,36,-68,36,36,-38,-41,-69,36,36,36,36,-42,36,36,-70,-123,36,36,-7,36,36,36,36,-10,-124,36,36,-39,36,-40,36,-33,-43,]),'BOOLEAN':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,30,31,32,33,34,35,36,37,38,39,40,41,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,75,76,77,81,82,91,92,93,94,95,96,97,98,99,100,101,102,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,131,133,134,135,136,137,141,142,143,144,146,147,148,151,154,156,157,160,164,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,201,203,209,211,212,213,214,216,217,218,222,223,224,225,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,],[37,37,37,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-80,37,-84,37,37,-131,-132,-133,-134,37,-4,-13,-14,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-81,-82,-83,-135,37,-79,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-140,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,37,37,37,37,37,37,37,37,-36,37,-141,-142,37,37,37,-45,37,-31,37,-75,-76,-77,-78,-37,-125,-44,37,37,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-46,-32,-67,37,-68,37,37,-38,-41,-69,37,37,37,37,-42,37,37,-70,-123,37,37,-7,37,37,37,37,-10,-124,37,37,-39,37,-40,37,-33,-43,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,31,34,35,36,37,38,39,40,41,75,76,77,81,91,92,93,94,95,96,97,98,99,100,101,102,111,112,113,114,115,116,117,118,119,120,121,122,123,124,141,143,144,151,156,160,164,171,172,173,174,175,191,192,194,196,201,203,209,216,222,223,233,236,238,240,241,],[0,-1,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-80,-84,-131,-132,-133,-134,-3,-4,-13,-14,-81,-82,-83,-135,-79,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-140,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-36,-141,-142,-45,-31,-75,-76,-77,-78,-37,-125,-44,-46,-32,-67,-68,-38,-41,-69,-42,-70,-123,-124,-39,-40,-33,-43,]),'RKEY':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,31,34,35,36,37,38,39,40,41,75,76,77,79,81,91,92,93,94,95,96,97,98,99,100,101,102,111,112,113,114,115,116,117,118,119,120,121,122,123,124,128,129,130,132,133,141,143,144,148,150,151,152,154,155,156,157,160,164,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,196,201,203,204,205,209,211,212,213,216,222,223,224,225,226,227,230,232,233,234,236,237,238,239,240,241,],[-1,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-80,-84,-131,-132,-133,-134,-3,-4,-13,-14,-81,-82,-83,-50,-135,-79,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-140,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-50,151,-50,-50,156,-36,-141,-142,173,175,-45,-49,-54,191,-31,192,-75,-76,-77,-78,-37,-125,-44,-54,-52,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-46,-32,-67,-68,-38,-41,-51,-53,-69,223,-5,-6,-42,-70,-123,-8,-9,-7,233,236,-10,-124,238,-39,240,-40,241,-33,-43,]),'RETURN':([4,5,9,10,11,12,13,14,15,16,17,18,19,20,21,23,31,34,35,36,37,40,41,75,76,77,81,91,92,93,94,95,96,97,98,99,100,101,102,111,112,113,114,115,116,117,118,119,120,121,122,123,124,141,143,144,151,156,160,164,171,172,173,174,175,191,192,194,196,198,201,203,209,211,212,213,214,216,222,223,224,225,226,227,232,233,236,238,240,241,],[-11,-12,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-80,-84,-131,-132,-133,-134,-13,-14,-81,-82,-83,-135,-79,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-140,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-36,-141,-142,-45,-31,-75,-76,-77,-78,-37,-125,-44,-46,-32,-67,-68,213,-38,-41,-69,225,-5,-6,213,-42,-70,-123,-8,-9,-7,225,-10,-124,-39,-40,-33,-43,]),'PLUS':([12,16,23,25,28,31,34,35,36,37,73,74,75,76,77,83,85,91,111,112,113,114,115,116,117,118,119,120,121,122,123,124,141,158,171,172,174,182,186,226,229,232,],[-81,-83,-80,-82,58,-84,-131,-132,-133,-134,-84,58,-81,-82,-83,-84,-82,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-125,-84,58,58,-125,-81,-83,58,-84,58,]),'MINUS':([12,16,23,25,28,31,34,35,36,37,73,74,75,76,77,83,85,91,111,112,113,114,115,116,117,118,119,120,121,122,123,124,141,158,171,172,174,182,186,226,229,232,],[-81,-83,-80,-82,59,-84,-131,-132,-133,-134,-84,59,-81,-82,-83,-84,-82,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-125,-84,59,59,-125,-81,-83,59,-84,59,]),'DIVIDE':([12,16,23,25,28,31,34,35,36,37,73,74,75,76,77,83,85,91,111,112,113,114,115,116,117,118,119,120,121,122,123,124,141,158,171,172,174,182,186,226,229,232,],[-81,-83,-80,-82,60,-84,-131,-132,-133,-134,-84,60,-81,-82,-83,-84,-82,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-125,-84,60,60,-125,-81,-83,60,-84,60,]),'TIMES':([12,16,23,25,28,31,34,35,36,37,73,74,75,76,77,83,85,91,111,112,113,114,115,116,117,118,119,120,121,122,123,124,141,158,171,172,174,182,186,226,229,232,],[-81,-83,-80,-82,61,-84,-131,-132,-133,-134,-84,61,-81,-82,-83,-84,-82,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-125,-84,61,61,-125,-81,-83,61,-84,61,]),'ENTERE_DIVIDE':([12,16,23,25,28,31,34,35,36,37,73,74,75,76,77,83,85,91,111,112,113,114,115,116,117,118,119,120,121,122,123,124,141,158,171,172,174,182,186,226,229,232,],[-81,-83,-80,-82,62,-84,-131,-132,-133,-134,-84,62,-81,-82,-83,-84,-82,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-125,-84,62,62,-125,-81,-83,62,-84,62,]),'MODULE':([12,16,23,25,28,31,34,35,36,37,73,74,75,76,77,83,85,91,111,112,113,114,115,116,117,118,119,120,121,122,123,124,141,158,171,172,174,182,186,226,229,232,],[-81,-83,-80,-82,63,-84,-131,-132,-133,-134,-84,63,-81,-82,-83,-84,-82,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-125,-84,63,63,-125,-81,-83,63,-84,63,]),'EQUALEQUAL':([12,16,23,25,28,31,34,35,36,37,73,74,75,76,77,83,85,91,111,112,113,114,115,116,117,118,119,120,121,122,123,124,141,158,171,172,174,182,186,226,229,232,],[-81,-83,-80,-82,64,-84,-131,-132,-133,-134,-84,64,-81,-82,-83,-84,-82,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-125,-84,64,64,-125,-81,-83,64,-84,64,]),'NOT_EQUAL':([12,16,23,25,28,31,34,35,36,37,73,74,75,76,77,83,85,91,111,112,113,114,115,116,117,118,119,120,121,122,123,124,141,158,171,172,174,182,186,226,229,232,],[-81,-83,-80,-82,65,-84,-131,-132,-133,-134,-84,65,-81,-82,-83,-84,-82,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-125,-84,65,65,-125,-81,-83,65,-84,65,]),'LESS_EQUAL':([12,16,23,25,28,31,34,35,36,37,73,74,75,76,77,83,85,91,111,112,113,114,115,116,117,118,119,120,121,122,123,124,141,158,171,172,174,182,186,226,229,232,],[-81,-83,-80,-82,66,-84,-131,-132,-133,-134,-84,66,-81,-82,-83,-84,-82,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-125,-84,66,66,-125,-81,-83,66,-84,66,]),'GREATER_EQUAL':([12,16,23,25,28,31,34,35,36,37,73,74,75,76,77,83,85,91,111,112,113,114,115,116,117,118,119,120,121,122,123,124,141,158,171,172,174,182,186,226,229,232,],[-81,-83,-80,-82,67,-84,-131,-132,-133,-134,-84,67,-81,-82,-83,-84,-82,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-125,-84,67,67,-125,-81,-83,67,-84,67,]),'LESS':([12,16,23,25,28,31,34,35,36,37,73,74,75,76,77,83,85,91,111,112,113,114,115,116,117,118,119,120,121,122,123,124,141,158,171,172,174,182,186,226,229,232,],[-81,-83,-80,-82,68,-84,-131,-132,-133,-134,-84,68,-81,-82,-83,-84,-82,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-125,-84,68,68,-125,-81,-83,68,-84,68,]),'GREATER':([12,16,23,25,28,31,34,35,36,37,73,74,75,76,77,83,85,91,111,112,113,114,115,116,117,118,119,120,121,122,123,124,141,158,171,172,174,182,186,226,229,232,],[-81,-83,-80,-82,69,-84,-131,-132,-133,-134,-84,69,-81,-82,-83,-84,-82,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,-125,-84,69,69,-125,-81,-83,69,-84,69,]),'LOGICAL_AND':([12,16,23,25,28,31,34,35,36,37,73,74,75,76,77,83,85,91,111,112,113,114,115,116,117,118,119,120,121,122,123,124,141,158,171,172,174,182,186,226,229,232,],[-81,-83,-80,-82,70,-84,-131,-132,-133,-134,-84,70,-81,-82,-83,-84,-82,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,-125,-84,70,70,-125,-81,-83,70,-84,70,]),'LOGICAL_OR':([12,16,23,25,28,31,34,35,36,37,73,74,75,76,77,83,85,91,111,112,113,114,115,116,117,118,119,120,121,122,123,124,141,158,171,172,174,182,186,226,229,232,],[-81,-83,-80,-82,71,-84,-131,-132,-133,-134,-84,71,-81,-82,-83,-84,-82,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-125,-84,71,71,-125,-81,-83,71,-84,71,]),'DOT':([22,],[42,]),'SEMICOLON':([23,31,34,35,36,37,75,76,77,84,91,111,112,113,114,115,116,117,118,119,120,121,122,123,124,158,174,],[-80,-84,-131,-132,-133,-134,-81,-82,-83,135,-79,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,193,-125,]),'CASE':([23,31,34,35,36,37,75,76,77,79,81,91,92,93,94,95,96,97,98,99,100,101,102,111,112,113,114,115,116,117,118,119,120,121,122,123,124,128,130,132,141,143,144,151,154,160,164,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,194,196,201,203,204,205,209,216,222,223,233,236,238,241,],[-80,-84,-131,-132,-133,-134,-81,-82,-83,131,-135,-79,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-140,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,131,131,131,-36,-141,-142,-45,-54,-75,-76,-77,-78,-37,-125,-44,-54,-52,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-46,-67,-68,-38,-41,-51,-53,-69,-42,-70,-123,-124,-39,-40,-43,]),'LKEY':([23,31,32,33,34,35,36,37,73,75,76,77,78,80,81,83,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,166,174,199,202,215,219,220,221,229,],[-80,-84,79,82,-131,-132,-133,-134,126,-81,-82,-83,128,132,-135,134,-136,-137,-138,-139,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,198,-125,214,218,228,231,-34,-35,235,]),'LPAREN':([25,26,43,76,85,86,87,],[44,56,88,127,127,136,137,]),'SHORT_VAR_DECL':([25,85,],[45,45,]),'PLUS_EQ':([25,],[46,]),'MINUS_EQ':([25,],[47,]),'TIMES_EQ':([25,],[48,]),'DIVIDE_EQ':([25,],[49,]),'MODULO_EQ':([25,],[50,]),'BITWISE_AND_EQ':([25,],[51,]),'BITWISE_OR_EQ':([25,],[52,]),'BITWISE_XOR_EQ':([25,],[53,]),'LEFT_SHIFT_EQ':([25,],[54,]),'RIGHT_SHIFT_EQ':([25,],[55,]),'RPAREN':([34,35,36,37,56,81,89,90,103,104,105,107,108,109,110,136,137,139,140,149,159,161,162,163,165,168,169,170,197,200,207,208,210,],[-131,-132,-133,-134,102,-135,141,-129,143,144,-109,-136,-137,-138,-139,160,164,166,-126,174,194,-71,-72,196,-128,-130,-110,-109,209,-127,-73,-74,222,]),'COMMA':([34,35,36,37,81,89,90,104,105,107,108,109,110,139,140,149,159,161,162,163,165,168,169,170,200,207,208,210,],[-131,-132,-133,-134,-135,142,-129,145,-109,-136,-137,-138,-139,167,-126,142,195,-71,-72,197,-128,-130,145,-109,-127,-73,-74,195,]),'COLON':([34,35,36,37,81,131,153,],[-131,-132,-133,-134,-135,154,176,]),'PRINTLN':([42,],[86,]),'PRINTF':([42,],[87,]),'INTEGER_DATA_TYPE':([57,72,138,166,],[107,107,107,107,]),'FLOAT_DATA_TYPE':([57,72,138,166,],[108,108,108,108,]),'BOOLEAN_DATA_TYPE':([57,72,138,166,],[109,109,109,109,]),'STRING_DATA_TYPE':([57,72,138,166,],[110,110,110,110,]),'EQUAL':([106,107,108,109,110,125,],[146,-136,-137,-138,-139,147,]),'ELSE':([173,201,203,216,241,],[202,215,-41,-42,-43,]),'INCREASE':([206,],[220,]),'DECREASE':([206,],[221,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'loop_program':([0,82,134,231,],[1,133,157,237,]),'program':([0,1,82,126,133,134,157,198,211,214,218,227,228,231,235,237,],[2,38,2,148,38,2,38,212,224,212,230,224,234,2,239,38,]),'loop_reserved':([0,1,82,133,134,157,231,237,],[3,39,3,39,3,39,3,39,]),'sentencia':([0,1,2,38,82,126,133,134,148,157,198,211,212,214,218,224,227,228,230,231,234,235,237,239,],[4,4,40,40,4,4,4,4,40,4,4,4,40,4,4,40,4,4,40,4,40,4,4,40,]),'loop':([0,1,2,38,82,126,133,134,148,157,198,211,212,214,218,224,227,228,230,231,234,235,237,239,],[5,5,41,41,5,5,5,5,41,5,5,5,41,5,5,41,5,5,41,5,41,5,5,41,]),'print':([0,1,2,38,82,126,133,134,148,154,157,176,178,198,211,212,214,218,224,227,228,230,231,234,235,237,239,],[9,9,9,9,9,9,9,9,9,179,9,179,179,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'print_withoutvalue':([0,1,2,38,82,126,133,134,148,154,157,176,178,198,211,212,214,218,224,227,228,230,231,234,235,237,239,],[10,10,10,10,10,10,10,10,10,180,10,180,180,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'def_function':([0,1,2,38,82,126,133,134,148,154,157,176,178,198,211,212,214,218,224,227,228,230,231,234,235,237,239,],[11,11,11,11,11,11,11,11,11,181,11,181,181,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'call_function':([0,1,2,30,33,38,45,58,59,60,61,62,63,64,65,66,67,68,69,70,71,82,126,133,134,135,146,147,148,154,157,176,178,198,211,212,213,214,217,218,224,225,227,228,230,231,234,235,237,239,],[12,12,12,75,75,12,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,12,12,12,12,75,75,75,12,182,12,182,182,12,12,12,75,12,75,12,12,75,12,12,12,12,12,12,12,12,]),'input':([0,1,2,38,82,126,133,134,148,154,157,176,178,198,211,212,214,218,224,227,228,230,231,234,235,237,239,],[13,13,13,13,13,13,13,13,13,183,13,183,183,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'assignment':([0,1,2,38,82,126,133,134,148,154,157,176,178,198,211,212,214,218,224,227,228,230,231,234,235,237,239,],[14,14,14,14,14,14,14,14,14,184,14,184,184,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'short_assignment':([0,1,2,33,38,82,126,133,134,148,154,157,176,178,198,211,212,214,218,224,227,228,230,231,234,235,237,239,],[15,15,15,84,15,15,15,15,15,15,185,15,185,185,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'arithmetic_operation':([0,1,2,30,33,38,45,58,59,60,61,62,63,64,65,66,67,68,69,70,71,82,126,133,134,135,146,147,148,154,157,176,178,198,211,212,213,214,217,218,224,225,227,228,230,231,234,235,237,239,],[16,16,16,77,77,16,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,16,16,16,16,77,77,77,16,186,16,186,186,16,16,16,77,16,77,16,16,77,16,16,16,16,16,16,16,16,]),'direct_arithmetic_operation':([0,1,2,38,82,126,133,134,148,154,157,176,178,198,211,212,214,218,224,227,228,230,231,234,235,237,239,],[17,17,17,17,17,17,17,17,17,187,17,187,187,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'if_statement':([0,1,2,38,82,126,133,134,148,154,157,176,178,198,211,212,214,218,224,227,228,230,231,234,235,237,239,],[18,18,18,18,18,18,18,18,18,188,18,188,188,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'function_call':([0,1,2,38,82,126,133,134,148,154,157,176,178,198,211,212,214,218,224,227,228,230,231,234,235,237,239,],[19,19,19,19,19,19,19,19,19,189,19,189,189,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'switch_statement':([0,1,2,38,82,126,133,134,148,154,157,176,178,198,211,212,214,218,224,227,228,230,231,234,235,237,239,],[20,20,20,20,20,20,20,20,20,190,20,190,190,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'for':([0,1,2,38,82,126,133,134,148,157,198,211,212,214,218,224,227,228,230,231,234,235,237,239,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'value':([0,1,2,30,32,33,38,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,82,126,127,131,133,134,135,136,137,142,146,147,148,154,157,176,178,195,197,198,211,212,213,214,217,218,224,225,227,228,230,231,234,235,237,239,],[23,23,23,23,78,23,23,90,23,92,93,94,95,96,97,98,99,100,101,103,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,90,153,23,23,23,161,163,168,23,23,23,23,23,23,23,207,161,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'usable_value':([0,1,2,30,33,38,45,58,59,60,61,62,63,64,65,66,67,68,69,70,71,82,126,133,134,135,146,147,148,154,157,176,178,198,211,212,213,214,217,218,224,225,227,228,230,231,234,235,237,239,],[28,28,28,74,74,28,91,111,112,113,114,115,116,117,118,119,120,121,122,123,124,28,28,28,28,74,171,172,28,28,28,28,28,28,28,28,226,28,74,28,28,232,28,28,28,28,28,28,28,28,]),'comparation_operation':([0,1,2,30,33,38,45,58,59,60,61,62,63,64,65,66,67,68,69,70,71,82,126,133,134,135,146,147,148,154,157,176,178,198,211,212,213,214,217,218,224,225,227,228,230,231,234,235,237,239,],[31,31,31,73,83,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,158,31,31,31,31,31,31,31,31,31,31,31,31,229,31,31,31,31,31,31,31,31,31,31,31,]),'switch_expression':([32,],[80,]),'values':([44,127,],[89,149,]),'identifiers':([56,145,],[104,169,]),'data_type':([57,72,138,166,],[106,125,165,199,]),'switch_cases':([79,128,130,132,],[129,150,152,155,]),'switch_case':([79,128,130,132,],[130,130,130,130,]),'parameters':([88,],[139,]),'parameter':([88,167,],[140,200,]),'data':([136,197,],[159,210,]),'statements':([154,176,178,],[177,204,205,]),'statement':([154,176,178,],[178,178,178,]),'conditions_elseif':([173,],[201,]),'else_if':([173,201,],[203,216,]),'func_program':([198,214,],[211,227,]),'operator_for':([206,],[219,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> loop_program","S'",1,None,None,None),
  ('loop_program -> program','loop_program',1,'p_loop_program','syntax_analyzer.py',5),
  ('loop_program -> loop_reserved','loop_program',1,'p_loop_program','syntax_analyzer.py',6),
  ('loop_program -> loop_program program','loop_program',2,'p_loop_program','syntax_analyzer.py',7),
  ('loop_program -> loop_program loop_reserved','loop_program',2,'p_loop_program','syntax_analyzer.py',8),
  ('func_program -> program','func_program',1,'p_func_program','syntax_analyzer.py',11),
  ('func_program -> RETURN','func_program',1,'p_func_program','syntax_analyzer.py',12),
  ('func_program -> RETURN usable_value','func_program',2,'p_func_program','syntax_analyzer.py',13),
  ('func_program -> func_program program','func_program',2,'p_func_program','syntax_analyzer.py',14),
  ('func_program -> func_program RETURN','func_program',2,'p_func_program','syntax_analyzer.py',15),
  ('func_program -> func_program RETURN usable_value','func_program',3,'p_func_program','syntax_analyzer.py',16),
  ('program -> sentencia','program',1,'p_program','syntax_analyzer.py',20),
  ('program -> loop','program',1,'p_program','syntax_analyzer.py',21),
  ('program -> program sentencia','program',2,'p_program','syntax_analyzer.py',22),
  ('program -> program loop','program',2,'p_program','syntax_analyzer.py',23),
  ('loop_reserved -> BREAK','loop_reserved',1,'p_loop_reserved','syntax_analyzer.py',27),
  ('loop_reserved -> CONTINUE','loop_reserved',1,'p_loop_reserved','syntax_analyzer.py',28),
  ('loop_reserved -> PASS','loop_reserved',1,'p_loop_reserved','syntax_analyzer.py',29),
  ('loop -> for','loop',1,'p_loop','syntax_analyzer.py',33),
  ('sentencia -> print','sentencia',1,'p_sentencia','syntax_analyzer.py',37),
  ('sentencia -> print_withoutvalue','sentencia',1,'p_sentencia','syntax_analyzer.py',38),
  ('sentencia -> def_function','sentencia',1,'p_sentencia','syntax_analyzer.py',39),
  ('sentencia -> call_function','sentencia',1,'p_sentencia','syntax_analyzer.py',40),
  ('sentencia -> input','sentencia',1,'p_sentencia','syntax_analyzer.py',41),
  ('sentencia -> assignment','sentencia',1,'p_sentencia','syntax_analyzer.py',42),
  ('sentencia -> short_assignment','sentencia',1,'p_sentencia','syntax_analyzer.py',43),
  ('sentencia -> arithmetic_operation','sentencia',1,'p_sentencia','syntax_analyzer.py',44),
  ('sentencia -> direct_arithmetic_operation','sentencia',1,'p_sentencia','syntax_analyzer.py',45),
  ('sentencia -> if_statement','sentencia',1,'p_sentencia','syntax_analyzer.py',46),
  ('sentencia -> function_call','sentencia',1,'p_sentencia','syntax_analyzer.py',47),
  ('sentencia -> switch_statement','sentencia',1,'p_sentencia','syntax_analyzer.py',48),
  ('for -> FOR LKEY loop_program RKEY','for',4,'p_for','syntax_analyzer.py',53),
  ('for -> FOR comparation_operation LKEY loop_program RKEY','for',5,'p_for','syntax_analyzer.py',54),
  ('for -> FOR short_assignment SEMICOLON comparation_operation SEMICOLON IDENTIFIER operator_for LKEY loop_program RKEY','for',10,'p_for','syntax_analyzer.py',55),
  ('operator_for -> INCREASE','operator_for',1,'p_operator_for','syntax_analyzer.py',58),
  ('operator_for -> DECREASE','operator_for',1,'p_operator_for','syntax_analyzer.py',59),
  ('function_call -> IDENTIFIER LPAREN values RPAREN','function_call',4,'p_function_call','syntax_analyzer.py',62),
  ('if_statement -> IF comparation_operation LKEY program RKEY','if_statement',5,'p_if_statement','syntax_analyzer.py',67),
  ('if_statement -> IF comparation_operation LKEY program RKEY conditions_elseif','if_statement',6,'p_if_statement','syntax_analyzer.py',68),
  ('if_statement -> IF comparation_operation LKEY program RKEY ELSE LKEY program RKEY','if_statement',9,'p_if_statement','syntax_analyzer.py',69),
  ('if_statement -> IF comparation_operation LKEY program RKEY conditions_elseif ELSE LKEY program RKEY','if_statement',10,'p_if_statement','syntax_analyzer.py',70),
  ('conditions_elseif -> else_if','conditions_elseif',1,'p_conditions_elseif','syntax_analyzer.py',75),
  ('conditions_elseif -> conditions_elseif else_if','conditions_elseif',2,'p_conditions_elseif','syntax_analyzer.py',76),
  ('else_if -> ELSE IF comparation_operation LKEY program RKEY','else_if',6,'p_else_if','syntax_analyzer.py',80),
  ('switch_statement -> SWITCH value LKEY switch_cases RKEY','switch_statement',5,'p_switch_statement','syntax_analyzer.py',85),
  ('switch_statement -> SWITCH LKEY switch_cases RKEY','switch_statement',4,'p_switch_statement','syntax_analyzer.py',86),
  ('switch_statement -> SWITCH switch_expression LKEY switch_cases RKEY','switch_statement',5,'p_switch_statement','syntax_analyzer.py',87),
  ('switch_expression -> value','switch_expression',1,'p_switch_expression','syntax_analyzer.py',92),
  ('switch_expression -> <empty>','switch_expression',0,'p_switch_expression','syntax_analyzer.py',93),
  ('switch_cases -> switch_case switch_cases','switch_cases',2,'p_switch_cases','syntax_analyzer.py',98),
  ('switch_cases -> <empty>','switch_cases',0,'p_switch_cases','syntax_analyzer.py',99),
  ('switch_case -> CASE value COLON statements','switch_case',4,'p_switch_case','syntax_analyzer.py',104),
  ('switch_case -> CASE COLON statements','switch_case',3,'p_switch_case','syntax_analyzer.py',105),
  ('statements -> statement statements','statements',2,'p_statements','syntax_analyzer.py',110),
  ('statements -> <empty>','statements',0,'p_statements','syntax_analyzer.py',111),
  ('statement -> print','statement',1,'p_statement','syntax_analyzer.py',116),
  ('statement -> print_withoutvalue','statement',1,'p_statement','syntax_analyzer.py',117),
  ('statement -> def_function','statement',1,'p_statement','syntax_analyzer.py',118),
  ('statement -> call_function','statement',1,'p_statement','syntax_analyzer.py',119),
  ('statement -> input','statement',1,'p_statement','syntax_analyzer.py',120),
  ('statement -> assignment','statement',1,'p_statement','syntax_analyzer.py',121),
  ('statement -> short_assignment','statement',1,'p_statement','syntax_analyzer.py',122),
  ('statement -> arithmetic_operation','statement',1,'p_statement','syntax_analyzer.py',123),
  ('statement -> direct_arithmetic_operation','statement',1,'p_statement','syntax_analyzer.py',124),
  ('statement -> if_statement','statement',1,'p_statement','syntax_analyzer.py',125),
  ('statement -> function_call','statement',1,'p_statement','syntax_analyzer.py',126),
  ('statement -> switch_statement','statement',1,'p_statement','syntax_analyzer.py',127),
  ('print -> FMT_LIBRARY DOT PRINTLN LPAREN data RPAREN','print',6,'p_print','syntax_analyzer.py',135),
  ('print -> FMT_LIBRARY DOT PRINTF LPAREN value RPAREN','print',6,'p_print','syntax_analyzer.py',136),
  ('print -> FMT_LIBRARY DOT PRINTF LPAREN value COMMA RPAREN','print',7,'p_print','syntax_analyzer.py',137),
  ('print -> FMT_LIBRARY DOT PRINTF LPAREN value COMMA data RPAREN','print',8,'p_print','syntax_analyzer.py',138),
  ('data -> value','data',1,'p_data','syntax_analyzer.py',141),
  ('data -> IDENTIFIER','data',1,'p_data','syntax_analyzer.py',142),
  ('data -> data COMMA value','data',3,'p_data','syntax_analyzer.py',143),
  ('data -> data COMMA IDENTIFIER','data',3,'p_data','syntax_analyzer.py',144),
  ('print_withoutvalue -> FMT_LIBRARY DOT PRINTLN LPAREN RPAREN','print_withoutvalue',5,'p_print_withoutvalue','syntax_analyzer.py',147),
  ('print_withoutvalue -> FMT_LIBRARY DOT PRINTF LPAREN RPAREN','print_withoutvalue',5,'p_print_withoutvalue','syntax_analyzer.py',148),
  ('assignment -> VAR IDENTIFIER data_type EQUAL usable_value','assignment',5,'p_assignment','syntax_analyzer.py',151),
  ('assignment -> CONST IDENTIFIER data_type EQUAL usable_value','assignment',5,'p_assignment','syntax_analyzer.py',152),
  ('short_assignment -> IDENTIFIER SHORT_VAR_DECL usable_value','short_assignment',3,'p_short_assignment','syntax_analyzer.py',155),
  ('usable_value -> value','usable_value',1,'p_usable_value','syntax_analyzer.py',158),
  ('usable_value -> call_function','usable_value',1,'p_usable_value','syntax_analyzer.py',159),
  ('usable_value -> IDENTIFIER','usable_value',1,'p_usable_value','syntax_analyzer.py',160),
  ('usable_value -> arithmetic_operation','usable_value',1,'p_usable_value','syntax_analyzer.py',161),
  ('usable_value -> comparation_operation','usable_value',1,'p_usable_value','syntax_analyzer.py',162),
  ('direct_arithmetic_operation -> IDENTIFIER PLUS_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',168),
  ('direct_arithmetic_operation -> IDENTIFIER MINUS_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',169),
  ('direct_arithmetic_operation -> IDENTIFIER TIMES_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',170),
  ('direct_arithmetic_operation -> IDENTIFIER DIVIDE_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',171),
  ('direct_arithmetic_operation -> IDENTIFIER MODULO_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',172),
  ('direct_arithmetic_operation -> IDENTIFIER BITWISE_AND_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',173),
  ('direct_arithmetic_operation -> IDENTIFIER BITWISE_OR_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',174),
  ('direct_arithmetic_operation -> IDENTIFIER BITWISE_XOR_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',175),
  ('direct_arithmetic_operation -> IDENTIFIER LEFT_SHIFT_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',176),
  ('direct_arithmetic_operation -> IDENTIFIER RIGHT_SHIFT_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',177),
  ('arithmetic_operation -> usable_value PLUS usable_value','arithmetic_operation',3,'p_arithmetic_operation','syntax_analyzer.py',182),
  ('arithmetic_operation -> usable_value MINUS usable_value','arithmetic_operation',3,'p_arithmetic_operation','syntax_analyzer.py',183),
  ('arithmetic_operation -> usable_value DIVIDE usable_value','arithmetic_operation',3,'p_arithmetic_operation','syntax_analyzer.py',184),
  ('arithmetic_operation -> usable_value TIMES usable_value','arithmetic_operation',3,'p_arithmetic_operation','syntax_analyzer.py',185),
  ('arithmetic_operation -> usable_value ENTERE_DIVIDE usable_value','arithmetic_operation',3,'p_arithmetic_operation','syntax_analyzer.py',186),
  ('arithmetic_operation -> usable_value MODULE usable_value','arithmetic_operation',3,'p_arithmetic_operation','syntax_analyzer.py',187),
  ('comparation_operation -> usable_value EQUALEQUAL usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',194),
  ('comparation_operation -> usable_value NOT_EQUAL usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',195),
  ('comparation_operation -> usable_value LESS_EQUAL usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',196),
  ('comparation_operation -> usable_value GREATER_EQUAL usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',197),
  ('comparation_operation -> usable_value LESS usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',198),
  ('comparation_operation -> usable_value GREATER usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',199),
  ('comparation_operation -> usable_value LOGICAL_AND usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',200),
  ('comparation_operation -> usable_value LOGICAL_OR usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',201),
  ('identifiers -> IDENTIFIER','identifiers',1,'p_identifiers','syntax_analyzer.py',206),
  ('identifiers -> identifiers COMMA identifiers','identifiers',3,'p_identifiers','syntax_analyzer.py',207),
  ('rule_comparation -> IDENTIFIER EQUALEQUAL value','rule_comparation',3,'p_rule_comparation','syntax_analyzer.py',211),
  ('rule_comparation -> IDENTIFIER NOT_EQUAL value','rule_comparation',3,'p_rule_comparation','syntax_analyzer.py',212),
  ('rule_comparation -> IDENTIFIER LESS_EQUAL value','rule_comparation',3,'p_rule_comparation','syntax_analyzer.py',213),
  ('rule_comparation -> IDENTIFIER GREATER_EQUAL value','rule_comparation',3,'p_rule_comparation','syntax_analyzer.py',214),
  ('rule_comparation -> IDENTIFIER LESS value','rule_comparation',3,'p_rule_comparation','syntax_analyzer.py',215),
  ('rule_comparation -> IDENTIFIER GREATER value','rule_comparation',3,'p_rule_comparation','syntax_analyzer.py',216),
  ('rule_comparation -> IDENTIFIER LOGICAL_AND value','rule_comparation',3,'p_rule_comparation','syntax_analyzer.py',217),
  ('rule_comparation -> IDENTIFIER LOGICAL_OR value','rule_comparation',3,'p_rule_comparation','syntax_analyzer.py',218),
  ('condition -> value comparation_operation value','condition',3,'p_condition','syntax_analyzer.py',222),
  ('condition -> condition LOGICAL_AND condition','condition',3,'p_condition','syntax_analyzer.py',223),
  ('condition -> condition LOGICAL_OR condition','condition',3,'p_condition','syntax_analyzer.py',224),
  ('condition -> LOGICAL_NOT condition','condition',2,'p_condition','syntax_analyzer.py',225),
  ('def_function -> FUNC IDENTIFIER LPAREN parameters RPAREN LKEY func_program RKEY','def_function',8,'p_def_function','syntax_analyzer.py',231),
  ('def_function -> FUNC IDENTIFIER LPAREN parameters RPAREN data_type LKEY func_program RKEY','def_function',9,'p_def_function','syntax_analyzer.py',232),
  ('call_function -> IDENTIFIER LPAREN values RPAREN','call_function',4,'p_call_funcion','syntax_analyzer.py',235),
  ('parameters -> parameter','parameters',1,'p_parameters','syntax_analyzer.py',238),
  ('parameters -> parameters COMMA parameter','parameters',3,'p_parameters','syntax_analyzer.py',239),
  ('parameter -> IDENTIFIER data_type','parameter',2,'p_parameter','syntax_analyzer.py',244),
  ('values -> value','values',1,'p_values','syntax_analyzer.py',247),
  ('values -> values COMMA value','values',3,'p_values','syntax_analyzer.py',248),
  ('value -> STRING','value',1,'p_value','syntax_analyzer.py',252),
  ('value -> INTEGER','value',1,'p_value','syntax_analyzer.py',253),
  ('value -> FLOAT','value',1,'p_value','syntax_analyzer.py',254),
  ('value -> BOOLEAN','value',1,'p_value','syntax_analyzer.py',255),
  ('value -> IDENTIFIER','value',1,'p_value','syntax_analyzer.py',256),
  ('data_type -> INTEGER_DATA_TYPE','data_type',1,'p_data_type','syntax_analyzer.py',259),
  ('data_type -> FLOAT_DATA_TYPE','data_type',1,'p_data_type','syntax_analyzer.py',260),
  ('data_type -> BOOLEAN_DATA_TYPE','data_type',1,'p_data_type','syntax_analyzer.py',261),
  ('data_type -> STRING_DATA_TYPE','data_type',1,'p_data_type','syntax_analyzer.py',262),
  ('input -> INPUT LPAREN RPAREN','input',3,'p_input','syntax_analyzer.py',266),
  ('input -> INPUT LPAREN value RPAREN','input',4,'p_input','syntax_analyzer.py',267),
  ('input -> INPUT LPAREN identifiers RPAREN','input',4,'p_input','syntax_analyzer.py',268),
]
