
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AMPERSAND AND ARROW_FUNCTION_TYPE ARROW_SEND_RECEIVE AS ASSERT BITWISE_AND_EQ BITWISE_OR_EQ BITWISE_XOR BITWISE_XOR_ASSIGN BITWISE_XOR_EQ BOOLEAN BOOLEAN_DATA_TYPE BREAK CASE CLASS COLON COMMA COMMENT COMMENT_MULTI CONST CONTINUE DECREASE DEFAULT DEL DIVIDE DIVIDE_EQ DOT DOUBLE_QUOTE ELIF ELLIPSIS ELSE ENTERE_DIVIDE EQUAL EQUALEQUAL EXCEPT FALSE FAT_ARROW FINALLY FLOAT FLOAT_DATA_TYPE FMT_FORMAT_STRING FMT_LIBRARY FOR FROM FUNC GLOBAL GREATER GREATER_EQUAL GREATER_THAN HEX_NUMBER IDENTIFIER IF IMPORT IN INCREASE INPUT INTEGER INTEGER_DATA_TYPE IS LAMBDA LBRACKET LEFT_SHIFT_EQ LESS LESS_EQUAL LESS_THAN LKEY LOGICAL_AND LOGICAL_NOT LOGICAL_OR LPAREN MINUS MINUS_EQ MODULE MODULO_EQ NONE NONLOCAL NOT NOT_EQUAL NULL OR PASS PERCENT_D PIPE PLUS PLUS_EQ PRINTF PRINTLN RAISE RBRACKET RETURN RIGHT_SHIFT_EQ RKEY RPAREN SCIENTIFIC_NOTATION SEMICOLON SHORT_VAR_DECL STRING STRING_DATA_TYPE SWITCH TIMES TIMES_EQ TRUE TRY VAR WITH YIELD loop_program : program\n                  | loop_reserved\n                  | loop_program program\n                  | loop_program loop_reserved\n   func_program : program\n                  | RETURN\n                  | RETURN usable_value\n                  | func_program program\n                  | func_program RETURN\n                  | func_program RETURN usable_value\n  program : sentencia\n             | loop\n             | program sentencia\n             | program loop\n   loop_reserved : BREAK\n                  | CONTINUE\n                  | PASS\n  loop : for\n  sentencia : print\n               | print_withoutvalue\n               | def_function\n               | call_function\n               | input\n               | short_assignment\n               | arithmetic_operation\n               | direct_arithmetic_operation\n               | if_statement\n               | function_call\n               | assignment_semantic\n               | switch_statementfor : FOR LKEY loop_program RKEY\n         | FOR comparation_operation LKEY loop_program RKEY\n         | FOR short_assignment SEMICOLON comparation_operation SEMICOLON IDENTIFIER operator_for LKEY loop_program RKEYoperator_for : INCREASE\n                   | DECREASEfunction_call : IDENTIFIER LPAREN values RPARENif_statement : IF comparation_operation LKEY program RKEY\n                    | IF comparation_operation LKEY program RKEY conditions_elseif\n                    | IF comparation_operation LKEY program RKEY ELSE LKEY program RKEY\n                    | IF comparation_operation LKEY program RKEY conditions_elseif ELSE LKEY program RKEY\n    conditions_elseif : else_if\n                        | conditions_elseif else_if\n   else_if : ELSE IF comparation_operation LKEY program RKEY\n   \n    switch_statement : SWITCH expression LKEY case_clauses RKEY\n                     | SWITCH expression LKEY case_clauses DEFAULT COLON statements RKEY\n    \n    case_clauses : case_clause case_clauses\n                 |\n    \n    case_clause : CASE value COLON statements\n    \n    statements : statement statements\n              |\n    statement : print\n                 | print_withoutvalue\n                 | def_function\n                 | call_function\n                 | input\n                 | short_assignment\n                 | arithmetic_operation\n                 | direct_arithmetic_operation\n                 | if_statement\n                 | function_call\n                 | switch_statement\n                 | assignment_semantic\n                 | statement\n    \n    expression : value\n               | expression PLUS expression\n               | expression MINUS expression\n               | expression TIMES expression\n               | expression DIVIDE expression\n               | expression ENTERE_DIVIDE expression\n               | expression MODULE expression\n               | expression EQUALEQUAL expression\n               | expression NOT_EQUAL expression\n               | expression LESS_EQUAL expression\n               | expression GREATER_EQUAL expression\n               | expression LESS expression\n               | expression GREATER expression\n               | expression LOGICAL_AND expression\n               | expression LOGICAL_OR expression\n    print : FMT_LIBRARY DOT PRINTLN LPAREN data RPAREN\n             | FMT_LIBRARY DOT PRINTF LPAREN STRING RPAREN\n             | FMT_LIBRARY DOT PRINTF LPAREN STRING COMMA RPAREN\n             | FMT_LIBRARY DOT PRINTF LPAREN STRING COMMA data RPAREN\n    data : value\n         | IDENTIFIER\n         | data COMMA value\n         | data COMMA IDENTIFIERprint_withoutvalue : FMT_LIBRARY DOT PRINTLN LPAREN RPAREN\n            | FMT_LIBRARY DOT PRINTF LPAREN RPARENassignment_semantic : VAR IDENTIFIER INTEGER_DATA_TYPE EQUAL INTEGER\n                | CONST IDENTIFIER INTEGER_DATA_TYPE EQUAL INTEGER\n                | VAR IDENTIFIER FLOAT_DATA_TYPE EQUAL FLOAT\n                | CONST IDENTIFIER FLOAT_DATA_TYPE EQUAL FLOAT\n                | VAR IDENTIFIER STRING_DATA_TYPE EQUAL STRING\n                | CONST IDENTIFIER STRING_DATA_TYPE EQUAL STRING\n                | VAR IDENTIFIER BOOLEAN_DATA_TYPE EQUAL BOOLEAN\n                | CONST IDENTIFIER BOOLEAN_DATA_TYPE EQUAL BOOLEANshort_assignment : IDENTIFIER SHORT_VAR_DECL usable_value usable_value : value\n                 | call_function\n                 | IDENTIFIER\n                 | arithmetic_operation\n                 | comparation_operation\n  \n  direct_arithmetic_operation : IDENTIFIER PLUS_EQ value\n                      | IDENTIFIER MINUS_EQ value\n                      | IDENTIFIER TIMES_EQ value\n                      | IDENTIFIER DIVIDE_EQ value\n                      | IDENTIFIER MODULO_EQ value\n                      | IDENTIFIER BITWISE_AND_EQ value\n                      | IDENTIFIER BITWISE_OR_EQ value\n                      | IDENTIFIER BITWISE_XOR_EQ value\n                      | IDENTIFIER LEFT_SHIFT_EQ value\n                      | IDENTIFIER RIGHT_SHIFT_EQ value\n  \n  arithmetic_operation : usable_value PLUS usable_value\n                      | usable_value MINUS usable_value\n                      | usable_value DIVIDE usable_value\n                      | usable_value TIMES usable_value\n                      | usable_value ENTERE_DIVIDE usable_value\n                      | usable_value MODULE usable_value\n  \n    comparation_operation : usable_value EQUALEQUAL usable_value\n                        | usable_value NOT_EQUAL usable_value\n                        | usable_value LESS_EQUAL usable_value\n                        | usable_value GREATER_EQUAL usable_value\n                        | usable_value LESS usable_value\n                        | usable_value GREATER usable_value\n                        | usable_value LOGICAL_AND usable_value\n                        | usable_value LOGICAL_OR usable_value\n    identifiers : IDENTIFIER\n                 | identifiers COMMA identifiersrule_comparation : IDENTIFIER EQUALEQUAL value\n                        | IDENTIFIER NOT_EQUAL value\n                        | IDENTIFIER LESS_EQUAL value\n                        | IDENTIFIER GREATER_EQUAL value\n                        | IDENTIFIER LESS value\n                        | IDENTIFIER GREATER value\n                        | IDENTIFIER LOGICAL_AND value\n                        | IDENTIFIER LOGICAL_OR value\n    condition : value comparation_operation value\n              | condition LOGICAL_AND condition\n              | condition LOGICAL_OR condition\n              | LOGICAL_NOT condition\n    def_function : FUNC IDENTIFIER LPAREN parameters RPAREN LKEY func_program RKEY\n                  | FUNC IDENTIFIER LPAREN parameters RPAREN data_type LKEY func_program RKEY\n                 call_function : IDENTIFIER LPAREN values RPARENparameters : parameter\n                | parameters COMMA parameter parameter : IDENTIFIER data_typevalues : value\n            | values COMMA valuevalue : STRING\n          | INTEGER\n          | FLOAT\n          | BOOLEAN\n          | IDENTIFIERdata_type : INTEGER_DATA_TYPE\n               | FLOAT_DATA_TYPE\n               | BOOLEAN_DATA_TYPE\n               | STRING_DATA_TYPEinput : INPUT LPAREN RPAREN\n             | INPUT LPAREN value RPAREN\n             | INPUT LPAREN identifiers RPAREN\n    '
    
_lr_action_items = {'BREAK':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,27,30,32,34,35,38,39,40,41,73,74,75,80,81,90,91,92,93,94,95,96,97,98,99,100,101,105,106,107,108,109,110,111,112,113,114,115,116,117,118,144,145,152,154,155,184,185,188,192,203,204,205,206,207,208,209,210,211,212,213,217,219,221,226,228,234,241,262,263,271,273,275,278,279,280,282,283,],[6,6,-1,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-149,-98,-102,-150,-151,-152,-3,-4,-13,-14,-99,-100,-101,-153,6,-97,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-158,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,6,6,-36,-159,-160,-31,6,-87,-88,-37,-143,-89,-91,-93,-95,-90,-92,-94,-96,-44,-32,-79,-80,-38,-41,-81,-42,-82,-141,-45,6,-142,-39,6,-40,-33,-43,]),'CONTINUE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,27,30,32,34,35,38,39,40,41,73,74,75,80,81,90,91,92,93,94,95,96,97,98,99,100,101,105,106,107,108,109,110,111,112,113,114,115,116,117,118,144,145,152,154,155,184,185,188,192,203,204,205,206,207,208,209,210,211,212,213,217,219,221,226,228,234,241,262,263,271,273,275,278,279,280,282,283,],[7,7,-1,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-149,-98,-102,-150,-151,-152,-3,-4,-13,-14,-99,-100,-101,-153,7,-97,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-158,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,7,7,-36,-159,-160,-31,7,-87,-88,-37,-143,-89,-91,-93,-95,-90,-92,-94,-96,-44,-32,-79,-80,-38,-41,-81,-42,-82,-141,-45,7,-142,-39,7,-40,-33,-43,]),'PASS':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,27,30,32,34,35,38,39,40,41,73,74,75,80,81,90,91,92,93,94,95,96,97,98,99,100,101,105,106,107,108,109,110,111,112,113,114,115,116,117,118,144,145,152,154,155,184,185,188,192,203,204,205,206,207,208,209,210,211,212,213,217,219,221,226,228,234,241,262,263,271,273,275,278,279,280,282,283,],[8,8,-1,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-149,-98,-102,-150,-151,-152,-3,-4,-13,-14,-99,-100,-101,-153,8,-97,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-158,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,8,8,-36,-159,-160,-31,8,-87,-88,-37,-143,-89,-91,-93,-95,-90,-92,-94,-96,-44,-32,-79,-80,-38,-41,-81,-42,-82,-141,-45,8,-142,-39,8,-40,-33,-43,]),'FMT_LIBRARY':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,27,30,32,34,35,38,39,40,41,73,74,75,80,81,90,91,92,93,94,95,96,97,98,99,100,101,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,144,145,152,154,155,157,184,185,188,192,203,204,205,206,207,208,209,210,211,212,213,217,219,221,223,226,228,229,230,234,236,237,238,239,241,243,245,246,247,248,249,250,251,252,253,254,255,256,257,262,263,264,265,266,267,268,270,271,273,274,275,276,277,278,279,280,281,282,283,],[22,22,22,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-149,-98,-102,-150,-151,-152,22,-4,-13,-14,-99,-100,-101,-153,22,-97,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-158,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,22,22,22,-36,-159,-160,22,-31,22,-87,-88,-37,-143,-89,-91,-93,-95,-90,-92,-94,-96,-44,-32,-79,-80,22,-38,-41,22,22,-81,22,22,-6,22,-42,22,22,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-82,-141,22,-9,-7,22,22,22,-45,22,-10,-142,22,22,-39,22,-40,22,-33,-43,]),'FUNC':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,27,30,32,34,35,38,39,40,41,73,74,75,80,81,90,91,92,93,94,95,96,97,98,99,100,101,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,144,145,152,154,155,157,184,185,188,192,203,204,205,206,207,208,209,210,211,212,213,217,219,221,223,226,228,229,230,234,236,237,238,239,241,243,245,246,247,248,249,250,251,252,253,254,255,256,257,262,263,264,265,266,267,268,270,271,273,274,275,276,277,278,279,280,281,282,283,],[24,24,24,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-149,-98,-102,-150,-151,-152,24,-4,-13,-14,-99,-100,-101,-153,24,-97,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-158,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,24,24,24,-36,-159,-160,24,-31,24,-87,-88,-37,-143,-89,-91,-93,-95,-90,-92,-94,-96,-44,-32,-79,-80,24,-38,-41,24,24,-81,24,24,-6,24,-42,24,24,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-82,-141,24,-9,-7,24,24,24,-45,24,-10,-142,24,24,-39,24,-40,24,-33,-43,]),'IDENTIFIER':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,27,29,30,31,32,33,34,35,36,37,38,39,40,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,73,74,75,80,81,87,90,91,92,93,94,95,96,97,98,99,100,101,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,152,153,154,155,156,157,169,184,185,188,192,199,203,204,205,206,207,208,209,210,211,212,213,217,218,219,220,221,222,223,226,228,229,230,234,236,237,238,239,241,242,243,245,246,247,248,249,250,251,252,253,254,255,256,257,262,263,264,265,266,267,268,270,271,273,274,275,276,277,278,279,280,281,282,283,],[25,25,25,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-149,43,-98,74,-102,76,-150,77,-151,-152,80,84,25,-4,-13,-14,80,74,80,80,80,80,80,80,80,80,80,80,104,74,74,74,74,74,74,74,74,74,74,74,74,74,74,-99,-100,-101,-153,25,149,-97,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-158,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,25,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,25,25,74,190,-36,80,-159,-160,202,25,80,-31,25,-87,-88,149,-37,-143,-89,-91,-93,-95,-90,-92,-94,-96,-44,-32,231,-79,233,-80,190,25,-38,-41,25,25,-81,25,25,74,25,-42,74,25,25,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-82,-141,25,74,-7,25,25,25,-45,25,-10,-142,25,25,-39,25,-40,25,-33,-43,]),'INPUT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,27,30,32,34,35,38,39,40,41,73,74,75,80,81,90,91,92,93,94,95,96,97,98,99,100,101,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,144,145,152,154,155,157,184,185,188,192,203,204,205,206,207,208,209,210,211,212,213,217,219,221,223,226,228,229,230,234,236,237,238,239,241,243,245,246,247,248,249,250,251,252,253,254,255,256,257,262,263,264,265,266,267,268,270,271,273,274,275,276,277,278,279,280,281,282,283,],[26,26,26,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-149,-98,-102,-150,-151,-152,26,-4,-13,-14,-99,-100,-101,-153,26,-97,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-158,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,26,26,26,-36,-159,-160,26,-31,26,-87,-88,-37,-143,-89,-91,-93,-95,-90,-92,-94,-96,-44,-32,-79,-80,26,-38,-41,26,26,-81,26,26,-6,26,-42,26,26,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-82,-141,26,-9,-7,26,26,26,-45,26,-10,-142,26,26,-39,26,-40,26,-33,-43,]),'IF':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,27,30,32,34,35,38,39,40,41,73,74,75,80,81,90,91,92,93,94,95,96,97,98,99,100,101,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,144,145,152,154,155,157,184,185,188,192,203,204,205,206,207,208,209,210,211,212,213,217,219,221,223,226,227,228,229,230,234,236,237,238,239,240,241,243,245,246,247,248,249,250,251,252,253,254,255,256,257,262,263,264,265,266,267,268,270,271,273,274,275,276,277,278,279,280,281,282,283,],[29,29,29,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-149,-98,-102,-150,-151,-152,29,-4,-13,-14,-99,-100,-101,-153,29,-97,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-158,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,29,29,29,-36,-159,-160,29,-31,29,-87,-88,-37,-143,-89,-91,-93,-95,-90,-92,-94,-96,-44,-32,-79,-80,29,-38,242,-41,29,29,-81,29,29,-6,29,242,-42,29,29,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-82,-141,29,-9,-7,29,29,29,-45,29,-10,-142,29,29,-39,29,-40,29,-33,-43,]),'VAR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,27,30,32,34,35,38,39,40,41,73,74,75,80,81,90,91,92,93,94,95,96,97,98,99,100,101,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,144,145,152,154,155,157,184,185,188,192,203,204,205,206,207,208,209,210,211,212,213,217,219,221,223,226,228,229,230,234,236,237,238,239,241,243,245,246,247,248,249,250,251,252,253,254,255,256,257,262,263,264,265,266,267,268,270,271,273,274,275,276,277,278,279,280,281,282,283,],[31,31,31,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-149,-98,-102,-150,-151,-152,31,-4,-13,-14,-99,-100,-101,-153,31,-97,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-158,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,31,31,31,-36,-159,-160,31,-31,31,-87,-88,-37,-143,-89,-91,-93,-95,-90,-92,-94,-96,-44,-32,-79,-80,31,-38,-41,31,31,-81,31,31,-6,31,-42,31,31,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-82,-141,31,-9,-7,31,31,31,-45,31,-10,-142,31,31,-39,31,-40,31,-33,-43,]),'CONST':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,27,30,32,34,35,38,39,40,41,73,74,75,80,81,90,91,92,93,94,95,96,97,98,99,100,101,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,144,145,152,154,155,157,184,185,188,192,203,204,205,206,207,208,209,210,211,212,213,217,219,221,223,226,228,229,230,234,236,237,238,239,241,243,245,246,247,248,249,250,251,252,253,254,255,256,257,262,263,264,265,266,267,268,270,271,273,274,275,276,277,278,279,280,281,282,283,],[33,33,33,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-149,-98,-102,-150,-151,-152,33,-4,-13,-14,-99,-100,-101,-153,33,-97,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-158,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,33,33,33,-36,-159,-160,33,-31,33,-87,-88,-37,-143,-89,-91,-93,-95,-90,-92,-94,-96,-44,-32,-79,-80,33,-38,-41,33,33,-81,33,33,-6,33,-42,33,33,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-82,-141,33,-9,-7,33,33,33,-45,33,-10,-142,33,33,-39,33,-40,33,-33,-43,]),'SWITCH':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,27,30,32,34,35,38,39,40,41,73,74,75,80,81,90,91,92,93,94,95,96,97,98,99,100,101,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,144,145,152,154,155,157,184,185,188,192,203,204,205,206,207,208,209,210,211,212,213,217,219,221,223,226,228,229,230,234,236,237,238,239,241,243,245,246,247,248,249,250,251,252,253,254,255,256,257,262,263,264,265,266,267,268,270,271,273,274,275,276,277,278,279,280,281,282,283,],[36,36,36,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-149,-98,-102,-150,-151,-152,36,-4,-13,-14,-99,-100,-101,-153,36,-97,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-158,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,36,36,36,-36,-159,-160,36,-31,36,-87,-88,-37,-143,-89,-91,-93,-95,-90,-92,-94,-96,-44,-32,-79,-80,36,-38,-41,36,36,-81,36,36,-6,36,-42,36,36,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-82,-141,36,-9,-7,36,36,36,-45,36,-10,-142,36,36,-39,36,-40,36,-33,-43,]),'FOR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,27,30,32,34,35,38,39,40,41,73,74,75,80,81,90,91,92,93,94,95,96,97,98,99,100,101,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,144,145,152,154,155,157,184,185,188,192,203,204,205,206,207,208,209,210,211,212,213,217,219,221,223,226,228,234,236,237,238,239,241,243,262,263,264,265,266,267,268,270,271,273,274,275,276,277,278,279,280,281,282,283,],[37,37,37,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-149,-98,-102,-150,-151,-152,37,-4,-13,-14,-99,-100,-101,-153,37,-97,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-158,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,37,37,37,-36,-159,-160,37,-31,37,-87,-88,-37,-143,-89,-91,-93,-95,-90,-92,-94,-96,-44,-32,-79,-80,37,-38,-41,-81,37,37,-6,37,-42,37,-82,-141,37,-9,-7,37,37,37,-45,37,-10,-142,37,37,-39,37,-40,37,-33,-43,]),'STRING':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,27,29,30,32,34,35,36,37,38,39,40,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,73,74,75,80,81,90,91,92,93,94,95,96,97,98,99,100,101,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,152,153,154,155,157,161,165,169,184,185,188,192,203,204,205,206,207,208,209,210,211,212,213,217,219,220,221,222,223,226,228,229,230,234,236,237,238,239,241,242,243,245,246,247,248,249,250,251,252,253,254,255,256,257,262,263,264,265,266,267,268,270,271,273,274,275,276,277,278,279,280,281,282,283,],[23,23,23,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-149,-98,23,-102,-150,-151,-152,23,23,23,-4,-13,-14,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-99,-100,-101,-153,23,-97,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-158,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,191,-36,23,-159,-160,23,207,211,23,-31,23,-87,-88,-37,-143,-89,-91,-93,-95,-90,-92,-94,-96,-44,-32,-79,23,-80,23,23,-38,-41,23,23,-81,23,23,23,23,-42,23,23,23,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-82,-141,23,23,-7,23,23,23,-45,23,-10,-142,23,23,-39,23,-40,23,-33,-43,]),'INTEGER':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,27,29,30,32,34,35,36,37,38,39,40,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,73,74,75,80,81,90,91,92,93,94,95,96,97,98,99,100,101,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,152,153,154,155,157,159,163,169,184,185,188,192,203,204,205,206,207,208,209,210,211,212,213,217,219,220,221,222,223,226,228,229,230,234,236,237,238,239,241,242,243,245,246,247,248,249,250,251,252,253,254,255,256,257,262,263,264,265,266,267,268,270,271,273,274,275,276,277,278,279,280,281,282,283,],[32,32,32,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-149,-98,32,-102,-150,-151,-152,32,32,32,-4,-13,-14,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-99,-100,-101,-153,32,-97,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-158,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-36,32,-159,-160,32,205,209,32,-31,32,-87,-88,-37,-143,-89,-91,-93,-95,-90,-92,-94,-96,-44,-32,-79,32,-80,32,32,-38,-41,32,32,-81,32,32,32,32,-42,32,32,32,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-82,-141,32,32,-7,32,32,32,-45,32,-10,-142,32,32,-39,32,-40,32,-33,-43,]),'FLOAT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,27,29,30,32,34,35,36,37,38,39,40,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,73,74,75,80,81,90,91,92,93,94,95,96,97,98,99,100,101,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,152,153,154,155,157,160,164,169,184,185,188,192,203,204,205,206,207,208,209,210,211,212,213,217,219,220,221,222,223,226,228,229,230,234,236,237,238,239,241,242,243,245,246,247,248,249,250,251,252,253,254,255,256,257,262,263,264,265,266,267,268,270,271,273,274,275,276,277,278,279,280,281,282,283,],[34,34,34,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-149,-98,34,-102,-150,-151,-152,34,34,34,-4,-13,-14,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-99,-100,-101,-153,34,-97,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-158,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-36,34,-159,-160,34,206,210,34,-31,34,-87,-88,-37,-143,-89,-91,-93,-95,-90,-92,-94,-96,-44,-32,-79,34,-80,34,34,-38,-41,34,34,-81,34,34,34,34,-42,34,34,34,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-82,-141,34,34,-7,34,34,34,-45,34,-10,-142,34,34,-39,34,-40,34,-33,-43,]),'BOOLEAN':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,27,29,30,32,34,35,36,37,38,39,40,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,73,74,75,80,81,90,91,92,93,94,95,96,97,98,99,100,101,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,152,153,154,155,157,162,166,169,184,185,188,192,203,204,205,206,207,208,209,210,211,212,213,217,219,220,221,222,223,226,228,229,230,234,236,237,238,239,241,242,243,245,246,247,248,249,250,251,252,253,254,255,256,257,262,263,264,265,266,267,268,270,271,273,274,275,276,277,278,279,280,281,282,283,],[35,35,35,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-149,-98,35,-102,-150,-151,-152,35,35,35,-4,-13,-14,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-99,-100,-101,-153,35,-97,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-158,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-36,35,-159,-160,35,208,212,35,-31,35,-87,-88,-37,-143,-89,-91,-93,-95,-90,-92,-94,-96,-44,-32,-79,35,-80,35,35,-38,-41,35,35,-81,35,35,35,35,-42,35,35,35,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-82,-141,35,35,-7,35,35,35,-45,35,-10,-142,35,35,-39,35,-40,35,-33,-43,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,27,30,32,34,35,38,39,40,41,73,74,75,80,90,91,92,93,94,95,96,97,98,99,100,101,105,106,107,108,109,110,111,112,113,114,115,116,117,118,152,154,155,184,188,192,203,204,205,206,207,208,209,210,211,212,213,217,219,221,226,228,234,241,262,263,271,275,278,280,282,283,],[0,-1,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-149,-98,-102,-150,-151,-152,-3,-4,-13,-14,-99,-100,-101,-153,-97,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-158,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-36,-159,-160,-31,-87,-88,-37,-143,-89,-91,-93,-95,-90,-92,-94,-96,-44,-32,-79,-80,-38,-41,-81,-42,-82,-141,-45,-142,-39,-40,-33,-43,]),'RKEY':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,27,30,32,34,35,38,39,40,41,73,74,75,80,90,91,92,93,94,95,96,97,98,99,100,101,105,106,107,108,109,110,111,112,113,114,115,116,117,118,129,144,152,154,155,157,167,168,184,185,188,192,203,204,205,206,207,208,209,210,211,212,213,215,217,219,221,226,228,229,230,234,236,237,238,241,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,262,263,264,265,266,267,270,271,272,274,275,276,278,279,280,281,282,283,],[-1,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-149,-98,-102,-150,-151,-152,-3,-4,-13,-14,-99,-100,-101,-153,-97,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-158,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-47,184,-36,-159,-160,203,213,-47,-31,217,-87,-88,-37,-143,-89,-91,-93,-95,-90,-92,-94,-96,-44,-46,-32,-79,-80,-38,-41,-50,-50,-81,263,-5,-6,-42,271,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-48,-82,-141,-8,-9,-7,275,278,-45,-49,-10,-142,280,-39,282,-40,283,-33,-43,]),'RETURN':([4,5,9,10,11,12,13,14,15,16,17,18,19,20,21,23,27,30,32,34,35,40,41,73,74,75,80,90,91,92,93,94,95,96,97,98,99,100,101,105,106,107,108,109,110,111,112,113,114,115,116,117,118,152,154,155,184,188,192,203,204,205,206,207,208,209,210,211,212,213,217,219,221,223,226,228,234,236,237,238,239,241,262,263,264,265,266,267,271,274,275,278,280,282,283,],[-11,-12,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-149,-98,-102,-150,-151,-152,-13,-14,-99,-100,-101,-153,-97,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-158,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-36,-159,-160,-31,-87,-88,-37,-143,-89,-91,-93,-95,-90,-92,-94,-96,-44,-32,-79,-80,238,-38,-41,-81,265,-5,-6,238,-42,-82,-141,-8,-9,-7,265,-45,-10,-142,-39,-40,-33,-43,]),'PLUS':([12,15,23,25,27,28,30,32,34,35,71,72,73,74,75,78,79,80,82,84,90,105,106,107,108,109,110,111,112,113,114,115,116,117,118,152,170,171,172,173,174,175,176,177,178,179,180,181,182,183,186,204,249,252,266,269,274,],[-99,-101,-149,-100,-98,57,-102,-150,-151,-152,-102,57,-99,-100,-101,130,-64,-153,-102,-100,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-143,130,130,130,130,130,130,130,130,130,130,130,130,130,130,-102,-143,-99,-101,57,-102,57,]),'MINUS':([12,15,23,25,27,28,30,32,34,35,71,72,73,74,75,78,79,80,82,84,90,105,106,107,108,109,110,111,112,113,114,115,116,117,118,152,170,171,172,173,174,175,176,177,178,179,180,181,182,183,186,204,249,252,266,269,274,],[-99,-101,-149,-100,-98,58,-102,-150,-151,-152,-102,58,-99,-100,-101,131,-64,-153,-102,-100,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-143,131,131,131,131,131,131,131,131,131,131,131,131,131,131,-102,-143,-99,-101,58,-102,58,]),'DIVIDE':([12,15,23,25,27,28,30,32,34,35,71,72,73,74,75,78,79,80,82,84,90,105,106,107,108,109,110,111,112,113,114,115,116,117,118,152,170,171,172,173,174,175,176,177,178,179,180,181,182,183,186,204,249,252,266,269,274,],[-99,-101,-149,-100,-98,59,-102,-150,-151,-152,-102,59,-99,-100,-101,133,-64,-153,-102,-100,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-143,133,133,133,133,133,133,133,133,133,133,133,133,133,133,-102,-143,-99,-101,59,-102,59,]),'TIMES':([12,15,23,25,27,28,30,32,34,35,71,72,73,74,75,78,79,80,82,84,90,105,106,107,108,109,110,111,112,113,114,115,116,117,118,152,170,171,172,173,174,175,176,177,178,179,180,181,182,183,186,204,249,252,266,269,274,],[-99,-101,-149,-100,-98,60,-102,-150,-151,-152,-102,60,-99,-100,-101,132,-64,-153,-102,-100,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-143,132,132,132,132,132,132,132,132,132,132,132,132,132,132,-102,-143,-99,-101,60,-102,60,]),'ENTERE_DIVIDE':([12,15,23,25,27,28,30,32,34,35,71,72,73,74,75,78,79,80,82,84,90,105,106,107,108,109,110,111,112,113,114,115,116,117,118,152,170,171,172,173,174,175,176,177,178,179,180,181,182,183,186,204,249,252,266,269,274,],[-99,-101,-149,-100,-98,61,-102,-150,-151,-152,-102,61,-99,-100,-101,134,-64,-153,-102,-100,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-143,134,134,134,134,134,134,134,134,134,134,134,134,134,134,-102,-143,-99,-101,61,-102,61,]),'MODULE':([12,15,23,25,27,28,30,32,34,35,71,72,73,74,75,78,79,80,82,84,90,105,106,107,108,109,110,111,112,113,114,115,116,117,118,152,170,171,172,173,174,175,176,177,178,179,180,181,182,183,186,204,249,252,266,269,274,],[-99,-101,-149,-100,-98,62,-102,-150,-151,-152,-102,62,-99,-100,-101,135,-64,-153,-102,-100,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-143,135,135,135,135,135,135,135,135,135,135,135,135,135,135,-102,-143,-99,-101,62,-102,62,]),'EQUALEQUAL':([12,15,23,25,27,28,30,32,34,35,71,72,73,74,75,78,79,80,82,84,90,105,106,107,108,109,110,111,112,113,114,115,116,117,118,152,170,171,172,173,174,175,176,177,178,179,180,181,182,183,186,204,249,252,266,269,274,],[-99,-101,-149,-100,-98,63,-102,-150,-151,-152,-102,63,-99,-100,-101,136,-64,-153,-102,-100,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-143,136,136,136,136,136,136,136,136,136,136,136,136,136,136,-102,-143,-99,-101,63,-102,63,]),'NOT_EQUAL':([12,15,23,25,27,28,30,32,34,35,71,72,73,74,75,78,79,80,82,84,90,105,106,107,108,109,110,111,112,113,114,115,116,117,118,152,170,171,172,173,174,175,176,177,178,179,180,181,182,183,186,204,249,252,266,269,274,],[-99,-101,-149,-100,-98,64,-102,-150,-151,-152,-102,64,-99,-100,-101,137,-64,-153,-102,-100,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-143,137,137,137,137,137,137,137,137,137,137,137,137,137,137,-102,-143,-99,-101,64,-102,64,]),'LESS_EQUAL':([12,15,23,25,27,28,30,32,34,35,71,72,73,74,75,78,79,80,82,84,90,105,106,107,108,109,110,111,112,113,114,115,116,117,118,152,170,171,172,173,174,175,176,177,178,179,180,181,182,183,186,204,249,252,266,269,274,],[-99,-101,-149,-100,-98,65,-102,-150,-151,-152,-102,65,-99,-100,-101,138,-64,-153,-102,-100,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-143,138,138,138,138,138,138,138,138,138,138,138,138,138,138,-102,-143,-99,-101,65,-102,65,]),'GREATER_EQUAL':([12,15,23,25,27,28,30,32,34,35,71,72,73,74,75,78,79,80,82,84,90,105,106,107,108,109,110,111,112,113,114,115,116,117,118,152,170,171,172,173,174,175,176,177,178,179,180,181,182,183,186,204,249,252,266,269,274,],[-99,-101,-149,-100,-98,66,-102,-150,-151,-152,-102,66,-99,-100,-101,139,-64,-153,-102,-100,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-143,139,139,139,139,139,139,139,139,139,139,139,139,139,139,-102,-143,-99,-101,66,-102,66,]),'LESS':([12,15,23,25,27,28,30,32,34,35,71,72,73,74,75,78,79,80,82,84,90,105,106,107,108,109,110,111,112,113,114,115,116,117,118,152,170,171,172,173,174,175,176,177,178,179,180,181,182,183,186,204,249,252,266,269,274,],[-99,-101,-149,-100,-98,67,-102,-150,-151,-152,-102,67,-99,-100,-101,140,-64,-153,-102,-100,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-143,140,140,140,140,140,140,140,140,140,140,140,140,140,140,-102,-143,-99,-101,67,-102,67,]),'GREATER':([12,15,23,25,27,28,30,32,34,35,71,72,73,74,75,78,79,80,82,84,90,105,106,107,108,109,110,111,112,113,114,115,116,117,118,152,170,171,172,173,174,175,176,177,178,179,180,181,182,183,186,204,249,252,266,269,274,],[-99,-101,-149,-100,-98,68,-102,-150,-151,-152,-102,68,-99,-100,-101,141,-64,-153,-102,-100,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-143,141,141,141,141,141,141,141,141,141,141,141,141,141,141,-102,-143,-99,-101,68,-102,68,]),'LOGICAL_AND':([12,15,23,25,27,28,30,32,34,35,71,72,73,74,75,78,79,80,82,84,90,105,106,107,108,109,110,111,112,113,114,115,116,117,118,152,170,171,172,173,174,175,176,177,178,179,180,181,182,183,186,204,249,252,266,269,274,],[-99,-101,-149,-100,-98,69,-102,-150,-151,-152,-102,69,-99,-100,-101,142,-64,-153,-102,-100,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,-143,142,142,142,142,142,142,142,142,142,142,142,142,142,142,-102,-143,-99,-101,69,-102,69,]),'LOGICAL_OR':([12,15,23,25,27,28,30,32,34,35,71,72,73,74,75,78,79,80,82,84,90,105,106,107,108,109,110,111,112,113,114,115,116,117,118,152,170,171,172,173,174,175,176,177,178,179,180,181,182,183,186,204,249,252,266,269,274,],[-99,-101,-149,-100,-98,70,-102,-150,-151,-152,-102,70,-99,-100,-101,143,-64,-153,-102,-100,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,-143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,-102,-143,-99,-101,70,-102,70,]),'DOT':([22,],[42,]),'LKEY':([23,27,30,32,34,35,37,71,73,74,75,78,79,80,82,105,106,107,108,109,110,111,112,113,114,115,116,117,118,170,171,172,173,174,175,176,177,178,179,180,181,182,183,194,195,196,197,198,204,224,227,240,259,260,261,269,],[-149,-98,-102,-150,-151,-152,81,119,-99,-100,-101,129,-64,-153,145,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-154,-155,-156,-157,223,-143,239,243,268,273,-34,-35,277,]),'RPAREN':([23,32,34,35,56,80,88,89,102,103,104,147,148,150,151,158,187,189,190,191,193,194,195,196,197,200,201,202,222,225,232,233,235,],[-149,-150,-151,-152,101,-153,152,-147,154,155,-127,188,192,198,-144,204,219,-83,-84,221,-146,-154,-155,-156,-157,-148,-128,-127,234,-145,-85,-86,262,]),'COMMA':([23,32,34,35,80,88,89,103,104,150,151,158,187,189,190,191,193,194,195,196,197,200,201,202,225,232,233,235,],[-149,-150,-151,-152,-153,153,-147,156,-127,199,-144,153,220,-83,-84,222,-146,-154,-155,-156,-157,-148,156,-127,-145,-85,-86,220,]),'SEMICOLON':([23,27,30,32,34,35,73,74,75,83,90,105,106,107,108,109,110,111,112,113,114,115,116,117,118,186,204,],[-149,-98,-102,-150,-151,-152,-99,-100,-101,146,-97,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,218,-143,]),'CASE':([23,27,30,32,34,35,73,74,75,80,90,91,92,93,94,95,96,97,98,99,100,101,105,106,107,108,109,110,111,112,113,114,115,116,117,118,129,152,154,155,168,188,192,203,204,205,206,207,208,209,210,211,212,213,219,221,226,228,230,234,241,245,246,247,248,249,250,251,252,253,254,255,256,257,258,262,263,271,272,275,278,280,283,],[-149,-98,-102,-150,-151,-152,-99,-100,-101,-153,-97,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-158,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,169,-36,-159,-160,169,-87,-88,-37,-143,-89,-91,-93,-95,-90,-92,-94,-96,-44,-79,-80,-38,-41,-50,-81,-42,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-48,-82,-141,-45,-49,-142,-39,-40,-43,]),'DEFAULT':([23,27,30,32,34,35,73,74,75,80,90,91,92,93,94,95,96,97,98,99,100,101,105,106,107,108,109,110,111,112,113,114,115,116,117,118,129,152,154,155,167,168,188,192,203,204,205,206,207,208,209,210,211,212,213,215,219,221,226,228,230,234,241,245,246,247,248,249,250,251,252,253,254,255,256,257,258,262,263,271,272,275,278,280,283,],[-149,-98,-102,-150,-151,-152,-99,-100,-101,-153,-97,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-158,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-47,-36,-159,-160,214,-47,-87,-88,-37,-143,-89,-91,-93,-95,-90,-92,-94,-96,-44,-46,-79,-80,-38,-41,-50,-81,-42,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-48,-82,-141,-45,-49,-142,-39,-40,-43,]),'COLON':([23,32,34,35,80,214,216,],[-149,-150,-151,-152,-153,229,230,]),'LPAREN':([25,26,43,74,84,85,86,],[44,56,87,120,120,147,148,]),'SHORT_VAR_DECL':([25,84,],[45,45,]),'PLUS_EQ':([25,],[46,]),'MINUS_EQ':([25,],[47,]),'TIMES_EQ':([25,],[48,]),'DIVIDE_EQ':([25,],[49,]),'MODULO_EQ':([25,],[50,]),'BITWISE_AND_EQ':([25,],[51,]),'BITWISE_OR_EQ':([25,],[52,]),'BITWISE_XOR_EQ':([25,],[53,]),'LEFT_SHIFT_EQ':([25,],[54,]),'RIGHT_SHIFT_EQ':([25,],[55,]),'PRINTLN':([42,],[85,]),'PRINTF':([42,],[86,]),'INTEGER_DATA_TYPE':([76,77,149,198,],[121,125,194,194,]),'FLOAT_DATA_TYPE':([76,77,149,198,],[122,126,195,195,]),'STRING_DATA_TYPE':([76,77,149,198,],[123,127,197,197,]),'BOOLEAN_DATA_TYPE':([76,77,149,198,],[124,128,196,196,]),'EQUAL':([121,122,123,124,125,126,127,128,],[159,160,161,162,163,164,165,166,]),'ELSE':([203,226,228,241,283,],[227,240,-41,-42,-43,]),'INCREASE':([231,],[260,]),'DECREASE':([231,],[261,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'loop_program':([0,81,145,273,],[1,144,185,279,]),'program':([0,1,81,119,144,145,185,223,236,239,243,267,268,273,277,279,],[2,38,2,157,38,2,38,237,264,237,270,264,276,2,281,38,]),'loop_reserved':([0,1,81,144,145,185,273,279,],[3,39,3,39,3,39,3,39,]),'sentencia':([0,1,2,38,81,119,144,145,157,185,223,236,237,239,243,264,267,268,270,273,276,277,279,281,],[4,4,40,40,4,4,4,4,40,4,4,4,40,4,4,40,4,4,40,4,40,4,4,40,]),'loop':([0,1,2,38,81,119,144,145,157,185,223,236,237,239,243,264,267,268,270,273,276,277,279,281,],[5,5,41,41,5,5,5,5,41,5,5,5,41,5,5,41,5,5,41,5,41,5,5,41,]),'print':([0,1,2,38,81,119,144,145,157,185,223,229,230,236,237,239,243,245,264,267,268,270,273,276,277,279,281,],[9,9,9,9,9,9,9,9,9,9,9,246,246,9,9,9,9,246,9,9,9,9,9,9,9,9,9,]),'print_withoutvalue':([0,1,2,38,81,119,144,145,157,185,223,229,230,236,237,239,243,245,264,267,268,270,273,276,277,279,281,],[10,10,10,10,10,10,10,10,10,10,10,247,247,10,10,10,10,247,10,10,10,10,10,10,10,10,10,]),'def_function':([0,1,2,38,81,119,144,145,157,185,223,229,230,236,237,239,243,245,264,267,268,270,273,276,277,279,281,],[11,11,11,11,11,11,11,11,11,11,11,248,248,11,11,11,11,248,11,11,11,11,11,11,11,11,11,]),'call_function':([0,1,2,29,37,38,45,57,58,59,60,61,62,63,64,65,66,67,68,69,70,81,119,144,145,146,157,185,223,229,230,236,237,238,239,242,243,245,264,265,267,268,270,273,276,277,279,281,],[12,12,12,73,73,12,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,12,12,12,12,73,12,12,12,249,249,12,12,73,12,73,12,249,12,73,12,12,12,12,12,12,12,12,]),'input':([0,1,2,38,81,119,144,145,157,185,223,229,230,236,237,239,243,245,264,267,268,270,273,276,277,279,281,],[13,13,13,13,13,13,13,13,13,13,13,250,250,13,13,13,13,250,13,13,13,13,13,13,13,13,13,]),'short_assignment':([0,1,2,37,38,81,119,144,145,157,185,223,229,230,236,237,239,243,245,264,267,268,270,273,276,277,279,281,],[14,14,14,83,14,14,14,14,14,14,14,14,251,251,14,14,14,14,251,14,14,14,14,14,14,14,14,14,]),'arithmetic_operation':([0,1,2,29,37,38,45,57,58,59,60,61,62,63,64,65,66,67,68,69,70,81,119,144,145,146,157,185,223,229,230,236,237,238,239,242,243,245,264,265,267,268,270,273,276,277,279,281,],[15,15,15,75,75,15,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,15,15,15,15,75,15,15,15,252,252,15,15,75,15,75,15,252,15,75,15,15,15,15,15,15,15,15,]),'direct_arithmetic_operation':([0,1,2,38,81,119,144,145,157,185,223,229,230,236,237,239,243,245,264,267,268,270,273,276,277,279,281,],[16,16,16,16,16,16,16,16,16,16,16,253,253,16,16,16,16,253,16,16,16,16,16,16,16,16,16,]),'if_statement':([0,1,2,38,81,119,144,145,157,185,223,229,230,236,237,239,243,245,264,267,268,270,273,276,277,279,281,],[17,17,17,17,17,17,17,17,17,17,17,254,254,17,17,17,17,254,17,17,17,17,17,17,17,17,17,]),'function_call':([0,1,2,38,81,119,144,145,157,185,223,229,230,236,237,239,243,245,264,267,268,270,273,276,277,279,281,],[18,18,18,18,18,18,18,18,18,18,18,255,255,18,18,18,18,255,18,18,18,18,18,18,18,18,18,]),'assignment_semantic':([0,1,2,38,81,119,144,145,157,185,223,229,230,236,237,239,243,245,264,267,268,270,273,276,277,279,281,],[19,19,19,19,19,19,19,19,19,19,19,257,257,19,19,19,19,257,19,19,19,19,19,19,19,19,19,]),'switch_statement':([0,1,2,38,81,119,144,145,157,185,223,229,230,236,237,239,243,245,264,267,268,270,273,276,277,279,281,],[20,20,20,20,20,20,20,20,20,20,20,256,256,20,20,20,20,256,20,20,20,20,20,20,20,20,20,]),'for':([0,1,2,38,81,119,144,145,157,185,223,236,237,239,243,264,267,268,270,273,276,277,279,281,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'value':([0,1,2,29,36,37,38,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,81,119,120,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,153,157,169,185,220,222,223,229,230,236,237,238,239,242,243,245,264,265,267,268,270,273,276,277,279,281,],[27,27,27,27,79,27,27,89,27,91,92,93,94,95,96,97,98,99,100,102,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,89,79,79,79,79,79,79,79,79,79,79,79,79,79,79,27,27,27,189,200,27,216,27,232,189,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'usable_value':([0,1,2,29,37,38,45,57,58,59,60,61,62,63,64,65,66,67,68,69,70,81,119,144,145,146,157,185,223,229,230,236,237,238,239,242,243,245,264,265,267,268,270,273,276,277,279,281,],[28,28,28,72,72,28,90,105,106,107,108,109,110,111,112,113,114,115,116,117,118,28,28,28,28,72,28,28,28,28,28,28,28,266,28,72,28,28,28,274,28,28,28,28,28,28,28,28,]),'comparation_operation':([0,1,2,29,37,38,45,57,58,59,60,61,62,63,64,65,66,67,68,69,70,81,119,144,145,146,157,185,223,229,230,236,237,238,239,242,243,245,264,265,267,268,270,273,276,277,279,281,],[30,30,30,71,82,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,186,30,30,30,30,30,30,30,30,30,269,30,30,30,30,30,30,30,30,30,30,30,30,]),'expression':([36,130,131,132,133,134,135,136,137,138,139,140,141,142,143,],[78,170,171,172,173,174,175,176,177,178,179,180,181,182,183,]),'values':([44,120,],[88,158,]),'identifiers':([56,156,],[103,201,]),'parameters':([87,],[150,]),'parameter':([87,199,],[151,225,]),'case_clauses':([129,168,],[167,215,]),'case_clause':([129,168,],[168,168,]),'data':([147,222,],[187,235,]),'data_type':([149,198,],[193,224,]),'conditions_elseif':([203,],[226,]),'else_if':([203,226,],[228,241,]),'func_program':([223,239,],[236,267,]),'statements':([229,230,245,],[244,258,272,]),'statement':([229,230,245,],[245,245,245,]),'operator_for':([231,],[259,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> loop_program","S'",1,None,None,None),
  ('loop_program -> program','loop_program',1,'p_loop_program','syntax_analyzer.py',5),
  ('loop_program -> loop_reserved','loop_program',1,'p_loop_program','syntax_analyzer.py',6),
  ('loop_program -> loop_program program','loop_program',2,'p_loop_program','syntax_analyzer.py',7),
  ('loop_program -> loop_program loop_reserved','loop_program',2,'p_loop_program','syntax_analyzer.py',8),
  ('func_program -> program','func_program',1,'p_func_program','syntax_analyzer.py',11),
  ('func_program -> RETURN','func_program',1,'p_func_program','syntax_analyzer.py',12),
  ('func_program -> RETURN usable_value','func_program',2,'p_func_program','syntax_analyzer.py',13),
  ('func_program -> func_program program','func_program',2,'p_func_program','syntax_analyzer.py',14),
  ('func_program -> func_program RETURN','func_program',2,'p_func_program','syntax_analyzer.py',15),
  ('func_program -> func_program RETURN usable_value','func_program',3,'p_func_program','syntax_analyzer.py',16),
  ('program -> sentencia','program',1,'p_program','syntax_analyzer.py',20),
  ('program -> loop','program',1,'p_program','syntax_analyzer.py',21),
  ('program -> program sentencia','program',2,'p_program','syntax_analyzer.py',22),
  ('program -> program loop','program',2,'p_program','syntax_analyzer.py',23),
  ('loop_reserved -> BREAK','loop_reserved',1,'p_loop_reserved','syntax_analyzer.py',27),
  ('loop_reserved -> CONTINUE','loop_reserved',1,'p_loop_reserved','syntax_analyzer.py',28),
  ('loop_reserved -> PASS','loop_reserved',1,'p_loop_reserved','syntax_analyzer.py',29),
  ('loop -> for','loop',1,'p_loop','syntax_analyzer.py',33),
  ('sentencia -> print','sentencia',1,'p_sentencia','syntax_analyzer.py',37),
  ('sentencia -> print_withoutvalue','sentencia',1,'p_sentencia','syntax_analyzer.py',38),
  ('sentencia -> def_function','sentencia',1,'p_sentencia','syntax_analyzer.py',39),
  ('sentencia -> call_function','sentencia',1,'p_sentencia','syntax_analyzer.py',40),
  ('sentencia -> input','sentencia',1,'p_sentencia','syntax_analyzer.py',41),
  ('sentencia -> short_assignment','sentencia',1,'p_sentencia','syntax_analyzer.py',42),
  ('sentencia -> arithmetic_operation','sentencia',1,'p_sentencia','syntax_analyzer.py',43),
  ('sentencia -> direct_arithmetic_operation','sentencia',1,'p_sentencia','syntax_analyzer.py',44),
  ('sentencia -> if_statement','sentencia',1,'p_sentencia','syntax_analyzer.py',45),
  ('sentencia -> function_call','sentencia',1,'p_sentencia','syntax_analyzer.py',46),
  ('sentencia -> assignment_semantic','sentencia',1,'p_sentencia','syntax_analyzer.py',47),
  ('sentencia -> switch_statement','sentencia',1,'p_sentencia','syntax_analyzer.py',48),
  ('for -> FOR LKEY loop_program RKEY','for',4,'p_for','syntax_analyzer.py',53),
  ('for -> FOR comparation_operation LKEY loop_program RKEY','for',5,'p_for','syntax_analyzer.py',54),
  ('for -> FOR short_assignment SEMICOLON comparation_operation SEMICOLON IDENTIFIER operator_for LKEY loop_program RKEY','for',10,'p_for','syntax_analyzer.py',55),
  ('operator_for -> INCREASE','operator_for',1,'p_operator_for','syntax_analyzer.py',58),
  ('operator_for -> DECREASE','operator_for',1,'p_operator_for','syntax_analyzer.py',59),
  ('function_call -> IDENTIFIER LPAREN values RPAREN','function_call',4,'p_function_call','syntax_analyzer.py',62),
  ('if_statement -> IF comparation_operation LKEY program RKEY','if_statement',5,'p_if_statement','syntax_analyzer.py',67),
  ('if_statement -> IF comparation_operation LKEY program RKEY conditions_elseif','if_statement',6,'p_if_statement','syntax_analyzer.py',68),
  ('if_statement -> IF comparation_operation LKEY program RKEY ELSE LKEY program RKEY','if_statement',9,'p_if_statement','syntax_analyzer.py',69),
  ('if_statement -> IF comparation_operation LKEY program RKEY conditions_elseif ELSE LKEY program RKEY','if_statement',10,'p_if_statement','syntax_analyzer.py',70),
  ('conditions_elseif -> else_if','conditions_elseif',1,'p_conditions_elseif','syntax_analyzer.py',75),
  ('conditions_elseif -> conditions_elseif else_if','conditions_elseif',2,'p_conditions_elseif','syntax_analyzer.py',76),
  ('else_if -> ELSE IF comparation_operation LKEY program RKEY','else_if',6,'p_else_if','syntax_analyzer.py',80),
  ('switch_statement -> SWITCH expression LKEY case_clauses RKEY','switch_statement',5,'p_switch_statement','syntax_analyzer.py',84),
  ('switch_statement -> SWITCH expression LKEY case_clauses DEFAULT COLON statements RKEY','switch_statement',8,'p_switch_statement','syntax_analyzer.py',85),
  ('case_clauses -> case_clause case_clauses','case_clauses',2,'p_case_clauses','syntax_analyzer.py',90),
  ('case_clauses -> <empty>','case_clauses',0,'p_case_clauses','syntax_analyzer.py',91),
  ('case_clause -> CASE value COLON statements','case_clause',4,'p_case_clause','syntax_analyzer.py',96),
  ('statements -> statement statements','statements',2,'p_statements','syntax_analyzer.py',101),
  ('statements -> <empty>','statements',0,'p_statements','syntax_analyzer.py',102),
  ('statement -> print','statement',1,'p_statement','syntax_analyzer.py',106),
  ('statement -> print_withoutvalue','statement',1,'p_statement','syntax_analyzer.py',107),
  ('statement -> def_function','statement',1,'p_statement','syntax_analyzer.py',108),
  ('statement -> call_function','statement',1,'p_statement','syntax_analyzer.py',109),
  ('statement -> input','statement',1,'p_statement','syntax_analyzer.py',110),
  ('statement -> short_assignment','statement',1,'p_statement','syntax_analyzer.py',111),
  ('statement -> arithmetic_operation','statement',1,'p_statement','syntax_analyzer.py',112),
  ('statement -> direct_arithmetic_operation','statement',1,'p_statement','syntax_analyzer.py',113),
  ('statement -> if_statement','statement',1,'p_statement','syntax_analyzer.py',114),
  ('statement -> function_call','statement',1,'p_statement','syntax_analyzer.py',115),
  ('statement -> switch_statement','statement',1,'p_statement','syntax_analyzer.py',116),
  ('statement -> assignment_semantic','statement',1,'p_statement','syntax_analyzer.py',117),
  ('statement -> statement','statement',1,'p_statement','syntax_analyzer.py',118),
  ('expression -> value','expression',1,'p_expression','syntax_analyzer.py',123),
  ('expression -> expression PLUS expression','expression',3,'p_expression','syntax_analyzer.py',124),
  ('expression -> expression MINUS expression','expression',3,'p_expression','syntax_analyzer.py',125),
  ('expression -> expression TIMES expression','expression',3,'p_expression','syntax_analyzer.py',126),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','syntax_analyzer.py',127),
  ('expression -> expression ENTERE_DIVIDE expression','expression',3,'p_expression','syntax_analyzer.py',128),
  ('expression -> expression MODULE expression','expression',3,'p_expression','syntax_analyzer.py',129),
  ('expression -> expression EQUALEQUAL expression','expression',3,'p_expression','syntax_analyzer.py',130),
  ('expression -> expression NOT_EQUAL expression','expression',3,'p_expression','syntax_analyzer.py',131),
  ('expression -> expression LESS_EQUAL expression','expression',3,'p_expression','syntax_analyzer.py',132),
  ('expression -> expression GREATER_EQUAL expression','expression',3,'p_expression','syntax_analyzer.py',133),
  ('expression -> expression LESS expression','expression',3,'p_expression','syntax_analyzer.py',134),
  ('expression -> expression GREATER expression','expression',3,'p_expression','syntax_analyzer.py',135),
  ('expression -> expression LOGICAL_AND expression','expression',3,'p_expression','syntax_analyzer.py',136),
  ('expression -> expression LOGICAL_OR expression','expression',3,'p_expression','syntax_analyzer.py',137),
  ('print -> FMT_LIBRARY DOT PRINTLN LPAREN data RPAREN','print',6,'p_print','syntax_analyzer.py',145),
  ('print -> FMT_LIBRARY DOT PRINTF LPAREN STRING RPAREN','print',6,'p_print','syntax_analyzer.py',146),
  ('print -> FMT_LIBRARY DOT PRINTF LPAREN STRING COMMA RPAREN','print',7,'p_print','syntax_analyzer.py',147),
  ('print -> FMT_LIBRARY DOT PRINTF LPAREN STRING COMMA data RPAREN','print',8,'p_print','syntax_analyzer.py',148),
  ('data -> value','data',1,'p_data','syntax_analyzer.py',153),
  ('data -> IDENTIFIER','data',1,'p_data','syntax_analyzer.py',154),
  ('data -> data COMMA value','data',3,'p_data','syntax_analyzer.py',155),
  ('data -> data COMMA IDENTIFIER','data',3,'p_data','syntax_analyzer.py',156),
  ('print_withoutvalue -> FMT_LIBRARY DOT PRINTLN LPAREN RPAREN','print_withoutvalue',5,'p_print_withoutvalue','syntax_analyzer.py',159),
  ('print_withoutvalue -> FMT_LIBRARY DOT PRINTF LPAREN RPAREN','print_withoutvalue',5,'p_print_withoutvalue','syntax_analyzer.py',160),
  ('assignment_semantic -> VAR IDENTIFIER INTEGER_DATA_TYPE EQUAL INTEGER','assignment_semantic',5,'p_assignment_semantic','syntax_analyzer.py',167),
  ('assignment_semantic -> CONST IDENTIFIER INTEGER_DATA_TYPE EQUAL INTEGER','assignment_semantic',5,'p_assignment_semantic','syntax_analyzer.py',168),
  ('assignment_semantic -> VAR IDENTIFIER FLOAT_DATA_TYPE EQUAL FLOAT','assignment_semantic',5,'p_assignment_semantic','syntax_analyzer.py',169),
  ('assignment_semantic -> CONST IDENTIFIER FLOAT_DATA_TYPE EQUAL FLOAT','assignment_semantic',5,'p_assignment_semantic','syntax_analyzer.py',170),
  ('assignment_semantic -> VAR IDENTIFIER STRING_DATA_TYPE EQUAL STRING','assignment_semantic',5,'p_assignment_semantic','syntax_analyzer.py',171),
  ('assignment_semantic -> CONST IDENTIFIER STRING_DATA_TYPE EQUAL STRING','assignment_semantic',5,'p_assignment_semantic','syntax_analyzer.py',172),
  ('assignment_semantic -> VAR IDENTIFIER BOOLEAN_DATA_TYPE EQUAL BOOLEAN','assignment_semantic',5,'p_assignment_semantic','syntax_analyzer.py',173),
  ('assignment_semantic -> CONST IDENTIFIER BOOLEAN_DATA_TYPE EQUAL BOOLEAN','assignment_semantic',5,'p_assignment_semantic','syntax_analyzer.py',174),
  ('short_assignment -> IDENTIFIER SHORT_VAR_DECL usable_value','short_assignment',3,'p_short_assignment','syntax_analyzer.py',178),
  ('usable_value -> value','usable_value',1,'p_usable_value','syntax_analyzer.py',181),
  ('usable_value -> call_function','usable_value',1,'p_usable_value','syntax_analyzer.py',182),
  ('usable_value -> IDENTIFIER','usable_value',1,'p_usable_value','syntax_analyzer.py',183),
  ('usable_value -> arithmetic_operation','usable_value',1,'p_usable_value','syntax_analyzer.py',184),
  ('usable_value -> comparation_operation','usable_value',1,'p_usable_value','syntax_analyzer.py',185),
  ('direct_arithmetic_operation -> IDENTIFIER PLUS_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',191),
  ('direct_arithmetic_operation -> IDENTIFIER MINUS_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',192),
  ('direct_arithmetic_operation -> IDENTIFIER TIMES_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',193),
  ('direct_arithmetic_operation -> IDENTIFIER DIVIDE_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',194),
  ('direct_arithmetic_operation -> IDENTIFIER MODULO_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',195),
  ('direct_arithmetic_operation -> IDENTIFIER BITWISE_AND_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',196),
  ('direct_arithmetic_operation -> IDENTIFIER BITWISE_OR_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',197),
  ('direct_arithmetic_operation -> IDENTIFIER BITWISE_XOR_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',198),
  ('direct_arithmetic_operation -> IDENTIFIER LEFT_SHIFT_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',199),
  ('direct_arithmetic_operation -> IDENTIFIER RIGHT_SHIFT_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',200),
  ('arithmetic_operation -> usable_value PLUS usable_value','arithmetic_operation',3,'p_arithmetic_operation','syntax_analyzer.py',205),
  ('arithmetic_operation -> usable_value MINUS usable_value','arithmetic_operation',3,'p_arithmetic_operation','syntax_analyzer.py',206),
  ('arithmetic_operation -> usable_value DIVIDE usable_value','arithmetic_operation',3,'p_arithmetic_operation','syntax_analyzer.py',207),
  ('arithmetic_operation -> usable_value TIMES usable_value','arithmetic_operation',3,'p_arithmetic_operation','syntax_analyzer.py',208),
  ('arithmetic_operation -> usable_value ENTERE_DIVIDE usable_value','arithmetic_operation',3,'p_arithmetic_operation','syntax_analyzer.py',209),
  ('arithmetic_operation -> usable_value MODULE usable_value','arithmetic_operation',3,'p_arithmetic_operation','syntax_analyzer.py',210),
  ('comparation_operation -> usable_value EQUALEQUAL usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',217),
  ('comparation_operation -> usable_value NOT_EQUAL usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',218),
  ('comparation_operation -> usable_value LESS_EQUAL usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',219),
  ('comparation_operation -> usable_value GREATER_EQUAL usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',220),
  ('comparation_operation -> usable_value LESS usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',221),
  ('comparation_operation -> usable_value GREATER usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',222),
  ('comparation_operation -> usable_value LOGICAL_AND usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',223),
  ('comparation_operation -> usable_value LOGICAL_OR usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',224),
  ('identifiers -> IDENTIFIER','identifiers',1,'p_identifiers','syntax_analyzer.py',229),
  ('identifiers -> identifiers COMMA identifiers','identifiers',3,'p_identifiers','syntax_analyzer.py',230),
  ('rule_comparation -> IDENTIFIER EQUALEQUAL value','rule_comparation',3,'p_rule_comparation','syntax_analyzer.py',234),
  ('rule_comparation -> IDENTIFIER NOT_EQUAL value','rule_comparation',3,'p_rule_comparation','syntax_analyzer.py',235),
  ('rule_comparation -> IDENTIFIER LESS_EQUAL value','rule_comparation',3,'p_rule_comparation','syntax_analyzer.py',236),
  ('rule_comparation -> IDENTIFIER GREATER_EQUAL value','rule_comparation',3,'p_rule_comparation','syntax_analyzer.py',237),
  ('rule_comparation -> IDENTIFIER LESS value','rule_comparation',3,'p_rule_comparation','syntax_analyzer.py',238),
  ('rule_comparation -> IDENTIFIER GREATER value','rule_comparation',3,'p_rule_comparation','syntax_analyzer.py',239),
  ('rule_comparation -> IDENTIFIER LOGICAL_AND value','rule_comparation',3,'p_rule_comparation','syntax_analyzer.py',240),
  ('rule_comparation -> IDENTIFIER LOGICAL_OR value','rule_comparation',3,'p_rule_comparation','syntax_analyzer.py',241),
  ('condition -> value comparation_operation value','condition',3,'p_condition','syntax_analyzer.py',245),
  ('condition -> condition LOGICAL_AND condition','condition',3,'p_condition','syntax_analyzer.py',246),
  ('condition -> condition LOGICAL_OR condition','condition',3,'p_condition','syntax_analyzer.py',247),
  ('condition -> LOGICAL_NOT condition','condition',2,'p_condition','syntax_analyzer.py',248),
  ('def_function -> FUNC IDENTIFIER LPAREN parameters RPAREN LKEY func_program RKEY','def_function',8,'p_def_function','syntax_analyzer.py',255),
  ('def_function -> FUNC IDENTIFIER LPAREN parameters RPAREN data_type LKEY func_program RKEY','def_function',9,'p_def_function','syntax_analyzer.py',256),
  ('call_function -> IDENTIFIER LPAREN values RPAREN','call_function',4,'p_call_funcion','syntax_analyzer.py',261),
  ('parameters -> parameter','parameters',1,'p_parameters','syntax_analyzer.py',264),
  ('parameters -> parameters COMMA parameter','parameters',3,'p_parameters','syntax_analyzer.py',265),
  ('parameter -> IDENTIFIER data_type','parameter',2,'p_parameter','syntax_analyzer.py',270),
  ('values -> value','values',1,'p_values','syntax_analyzer.py',273),
  ('values -> values COMMA value','values',3,'p_values','syntax_analyzer.py',274),
  ('value -> STRING','value',1,'p_value','syntax_analyzer.py',278),
  ('value -> INTEGER','value',1,'p_value','syntax_analyzer.py',279),
  ('value -> FLOAT','value',1,'p_value','syntax_analyzer.py',280),
  ('value -> BOOLEAN','value',1,'p_value','syntax_analyzer.py',281),
  ('value -> IDENTIFIER','value',1,'p_value','syntax_analyzer.py',282),
  ('data_type -> INTEGER_DATA_TYPE','data_type',1,'p_data_type','syntax_analyzer.py',285),
  ('data_type -> FLOAT_DATA_TYPE','data_type',1,'p_data_type','syntax_analyzer.py',286),
  ('data_type -> BOOLEAN_DATA_TYPE','data_type',1,'p_data_type','syntax_analyzer.py',287),
  ('data_type -> STRING_DATA_TYPE','data_type',1,'p_data_type','syntax_analyzer.py',288),
  ('input -> INPUT LPAREN RPAREN','input',3,'p_input','syntax_analyzer.py',292),
  ('input -> INPUT LPAREN value RPAREN','input',4,'p_input','syntax_analyzer.py',293),
  ('input -> INPUT LPAREN identifiers RPAREN','input',4,'p_input','syntax_analyzer.py',294),
]
