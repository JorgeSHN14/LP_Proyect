
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AMPERSAND AND ARROW_FUNCTION_TYPE ARROW_SEND_RECEIVE AS ASSERT BITWISE_AND_EQ BITWISE_OR_EQ BITWISE_XOR BITWISE_XOR_ASSIGN BITWISE_XOR_EQ BOOLEAN BOOLEAN_DATA_TYPE BREAK CASE CLASS COLON COMMA COMMENT COMMENT_MULTI CONST CONTINUE DECREASE DEFAULT DEL DIVIDE DIVIDE_EQ DOT DOUBLE_QUOTE ELIF ELLIPSIS ELSE ENTERE_DIVIDE EQUAL EQUALEQUAL EXCEPT FALSE FAT_ARROW FINALLY FLOAT FLOAT_DATA_TYPE FMT_FORMAT_STRING FMT_LIBRARY FMT_LIBRARY FOR FROM FUNC GLOBAL GREATER GREATER_EQUAL GREATER_THAN HEX_NUMBER IDENTIFIER IF IMPORT IN INCREASE INPUT INTEGER INTEGER_DATA_TYPE IS LAMBDA LBRACKET LEFT_SHIFT_EQ LESS LESS_EQUAL LESS_THAN LKEY LOGICAL_AND LOGICAL_NOT LOGICAL_OR LPAREN MINUS MINUS_EQ MODULE MODULO_EQ NONE NONLOCAL NOT NOT_EQUAL NULL OR PASS PERCENT_D PIPE PLUS PLUS_EQ PRINTF PRINTLN RAISE RBRACKET RETURN RIGHT_SHIFT_EQ RKEY RPAREN SCIENTIFIC_NOTATION SEMICOLON SHORT_VAR_DECL STRING STRING_DATA_TYPE SWITCH TIMES TIMES_EQ TRUE TRY VAR WITH YIELD loop_program : program\n                  | loop_reserved\n                  | loop_program program\n                  | loop_program loop_reserved\n   func_program : program\n                  | RETURN\n                  | RETURN usable_value\n                  | func_program program\n                  | func_program RETURN\n                  | func_program RETURN usable_value\n  program : sentencia\n             | loop\n             | program sentencia\n             | program loop\n   loop_reserved : BREAK\n                  | CONTINUE\n                  | PASS\n  loop : for\n  sentencia : print\n               | print_withoutvalue\n               | def_function\n               | call_function\n               | input\n               | assignment\n               | short_assignment\n               | arithmetic_operation\n               | direct_arithmetic_operation\n               | if_statement\n               | function_call\n               | switch_statementfor : FOR LKEY loop_program RKEY\n         | FOR comparation_operation LKEY loop_program RKEY\n         | FOR short_assignment SEMICOLON comparation_operation SEMICOLON IDENTIFIER operator_for LKEY loop_program RKEYoperator_for : INCREASE\n                   | DECREASEfunction_call : IDENTIFIER LPAREN values RPARENif_statement : IF comparation_operation LKEY program RKEY\n                    | IF comparation_operation LKEY program RKEY conditions_elseif\n                    | IF comparation_operation LKEY program RKEY ELSE LKEY program RKEY\n                    | IF comparation_operation LKEY program RKEY conditions_elseif ELSE LKEY program RKEY\n    conditions_elseif : else_if\n                        | conditions_elseif else_if\n   else_if : ELSE IF comparation_operation LKEY program RKEY\n   \n    switch_statement : SWITCH value LKEY switch_cases RKEY\n                     | SWITCH LKEY switch_cases RKEY\n                     | SWITCH switch_expression LKEY switch_cases RKEY\n                     | SWITCH value LKEY switch_cases DEFAULT COLON statements RKEY\n                     | SWITCH LKEY switch_cases DEFAULT COLON statements RKEY\n                     | SWITCH switch_expression LKEY switch_cases DEFAULT COLON statements RKEY\n    \n    switch_expression : value\n                      |\n    \n    switch_cases : switch_case switch_cases\n                 |\n    \n    switch_case : CASE usable_value COLON statements\n               | CASE COLON statements\n               | IDENTIFIER COLON statements\n               | switch_expression COLON statements\n    \n    statements : statement statements\n               |\n    \n    statement : print\n               | print_withoutvalue\n               | call_function\n               | input\n               | assignment\n               | short_assignment\n               | arithmetic_operation\n               | direct_arithmetic_operation\n               | if_statement\n               | function_call\n               | switch_statement\n               print : FMT_LIBRARY DOT PRINTLN LPAREN data RPAREN\n           | FMT_LIBRARY DOT PRINTF LPAREN value RPAREN\n           | FMT_LIBRARY DOT PRINTF LPAREN value COMMA RPAREN\n           | FMT_LIBRARY DOT PRINTF LPAREN value COMMA data RPARENdata : value\n         | IDENTIFIER\n         | data COMMA value\n         | data COMMA IDENTIFIERprint_withoutvalue : FMT_LIBRARY DOT PRINTLN LPAREN RPAREN\n            | FMT_LIBRARY DOT PRINTF LPAREN RPARENassignment_semantic : VAR IDENTIFIER INTEGER_DATA_TYPE EQUAL INTEGER\n                | CONST IDENTIFIER INTEGER_DATA_TYPE EQUAL INTEGER\n                | VAR IDENTIFIER FLOAT_DATA_TYPE EQUAL FLOAT\n                | CONST IDENTIFIER FLOAT_DATA_TYPE EQUAL FLOAT\n                | VAR IDENTIFIER STRING_DATA_TYPE EQUAL STRING\n                | CONST IDENTIFIER STRING_DATA_TYPE EQUAL STRING\n                | VAR IDENTIFIER BOOLEAN_DATA_TYPE EQUAL BOOLEAN\n                | CONST IDENTIFIER BOOLEAN_DATA_TYPE EQUAL BOOLEANassignment : VAR IDENTIFIER data_type EQUAL usable_value\n                | CONST IDENTIFIER data_type EQUAL usable_valueshort_assignment : IDENTIFIER SHORT_VAR_DECL usable_value usable_value : value\n                 | call_function\n                 | IDENTIFIER\n                 | arithmetic_operation\n                 | comparation_operation\n  \n  direct_arithmetic_operation : IDENTIFIER PLUS_EQ value\n                      | IDENTIFIER MINUS_EQ value\n                      | IDENTIFIER TIMES_EQ value\n                      | IDENTIFIER DIVIDE_EQ value\n                      | IDENTIFIER MODULO_EQ value\n                      | IDENTIFIER BITWISE_AND_EQ value\n                      | IDENTIFIER BITWISE_OR_EQ value\n                      | IDENTIFIER BITWISE_XOR_EQ value\n                      | IDENTIFIER LEFT_SHIFT_EQ value\n                      | IDENTIFIER RIGHT_SHIFT_EQ value\n  \n  arithmetic_operation : usable_value PLUS usable_value\n                      | usable_value MINUS usable_value\n                      | usable_value DIVIDE usable_value\n                      | usable_value TIMES usable_value\n                      | usable_value ENTERE_DIVIDE usable_value\n                      | usable_value MODULE usable_value\n  \n    comparation_operation : usable_value EQUALEQUAL usable_value\n                        | usable_value NOT_EQUAL usable_value\n                        | usable_value LESS_EQUAL usable_value\n                        | usable_value GREATER_EQUAL usable_value\n                        | usable_value LESS usable_value\n                        | usable_value GREATER usable_value\n                        | usable_value LOGICAL_AND usable_value\n                        | usable_value LOGICAL_OR usable_value\n    identifiers : IDENTIFIER\n                 | identifiers COMMA identifiersrule_comparation : IDENTIFIER EQUALEQUAL value\n                        | IDENTIFIER NOT_EQUAL value\n                        | IDENTIFIER LESS_EQUAL value\n                        | IDENTIFIER GREATER_EQUAL value\n                        | IDENTIFIER LESS value\n                        | IDENTIFIER GREATER value\n                        | IDENTIFIER LOGICAL_AND value\n                        | IDENTIFIER LOGICAL_OR value\n    condition : value comparation_operation value\n              | condition LOGICAL_AND condition\n              | condition LOGICAL_OR condition\n              | LOGICAL_NOT condition\n    def_function : FUNC IDENTIFIER LPAREN parameters RPAREN LKEY func_program RKEY\n                  | FUNC IDENTIFIER LPAREN parameters RPAREN data_type LKEY func_program RKEY\n                  | FUNC FMT_LIBRARY DOT PRINTF LPAREN FMT_FORMAT_STRING COMMA data RPAREN LKEY func_program RKEY\n                  | FUNC FMT_LIBRARY DOT PRINTF LPAREN FMT_FORMAT_STRING COMMA data COMMA RPAREN LKEY func_program RKEY\n                  | FUNC FMT_LIBRARY DOT PRINTF LPAREN FMT_FORMAT_STRING COMMA IDENTIFIER RPAREN LKEY func_program RKEY\n                  | FUNC FMT_LIBRARY DOT PRINTF LPAREN FMT_FORMAT_STRING COMMA IDENTIFIER COMMA RPAREN LKEY func_program RKEY\n                  | FUNC FMT_LIBRARY DOT PRINTF LPAREN FMT_FORMAT_STRING COMMA FLOAT RPAREN LKEY func_program RKEY\n                  | FUNC FMT_LIBRARY DOT PRINTF LPAREN FMT_FORMAT_STRING COMMA FLOAT COMMA RPAREN LKEY func_program RKEY\n                  | FUNC FMT_LIBRARY DOT PRINTF LPAREN FMT_FORMAT_STRING COMMA INTEGER RPAREN LKEY func_program RKEY\n                  | FUNC FMT_LIBRARY DOT PRINTF LPAREN FMT_FORMAT_STRING COMMA INTEGER COMMA RPAREN LKEY func_program RKEY\n                  | FUNC FMT_LIBRARY DOT PRINTF LPAREN FMT_FORMAT_STRING COMMA BOOLEAN RPAREN LKEY func_program RKEY\n                  | FUNC FMT_LIBRARY DOT PRINTF LPAREN FMT_FORMAT_STRING COMMA BOOLEAN COMMA RPAREN LKEY func_program RKEY\n                  | FUNC FMT_LIBRARY DOT PRINTF LPAREN FMT_FORMAT_STRING COMMA IDENTIFIER COMMA FLOAT RPAREN LKEY func_program RKEY\n                  | FUNC FMT_LIBRARY DOT PRINTF LPAREN FMT_FORMAT_STRING COMMA IDENTIFIER COMMA FLOAT COMMA RPAREN LKEY func_program RKEY\n                  | FUNC FMT_LIBRARY DOT PRINTF LPAREN FMT_FORMAT_STRING COMMA IDENTIFIER COMMA INTEGER RPAREN LKEY func_program RKEY\n                  | FUNC FMT_LIBRARY DOT PRINTF LPAREN FMT_FORMAT_STRING COMMA IDENTIFIER COMMA INTEGER COMMA RPAREN LKEY func_program RKEY\n                  | FUNC FMT_LIBRARY DOT PRINTF LPAREN FMT_FORMAT_STRING COMMA IDENTIFIER COMMA BOOLEAN RPAREN LKEY func_program RKEY\n                  | FUNC FMT_LIBRARY DOT PRINTF LPAREN FMT_FORMAT_STRING COMMA IDENTIFIER COMMA BOOLEAN COMMA RPAREN LKEY func_program RKEYcall_function : IDENTIFIER LPAREN values RPARENparameters : parameter\n                | parameters COMMA parameter parameter : IDENTIFIER data_typevalues : value\n            | values COMMA valuevalue : STRING\n          | INTEGER\n          | FLOAT\n          | BOOLEAN\n          | IDENTIFIERdata_type : INTEGER_DATA_TYPE\n               | FLOAT_DATA_TYPE\n               | BOOLEAN_DATA_TYPE\n               | STRING_DATA_TYPEinput : INPUT LPAREN RPAREN\n             | INPUT LPAREN value RPAREN\n             | INPUT LPAREN identifiers RPAREN\n    '
    
_lr_action_items = {'BREAK':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,26,27,28,34,37,38,39,40,41,76,77,78,82,83,93,94,95,96,97,98,99,100,101,102,103,104,113,114,115,116,117,118,119,120,121,122,123,124,125,126,138,139,147,149,150,157,165,166,169,173,181,182,183,184,185,204,206,208,210,216,218,227,235,239,244,245,258,259,260,262,275,276,290,292,309,311,319,321,323,325,326,327,334,335,336,338,340,342,343,344,345,],[6,6,-1,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-92,-161,-160,-162,-96,-159,-3,-4,-13,-14,-93,-94,-95,-163,6,-91,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-168,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,6,6,-36,-169,-170,-45,-31,6,-79,-80,-89,-90,-37,-153,-44,-46,-32,-71,-72,-38,-41,-73,-42,-48,-74,-135,-47,-49,6,-136,-39,6,-40,-33,-43,-137,-139,-141,-143,-145,-138,-140,-142,-144,-146,-147,-149,-151,-148,-150,-152,]),'CONTINUE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,26,27,28,34,37,38,39,40,41,76,77,78,82,83,93,94,95,96,97,98,99,100,101,102,103,104,113,114,115,116,117,118,119,120,121,122,123,124,125,126,138,139,147,149,150,157,165,166,169,173,181,182,183,184,185,204,206,208,210,216,218,227,235,239,244,245,258,259,260,262,275,276,290,292,309,311,319,321,323,325,326,327,334,335,336,338,340,342,343,344,345,],[7,7,-1,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-92,-161,-160,-162,-96,-159,-3,-4,-13,-14,-93,-94,-95,-163,7,-91,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-168,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,7,7,-36,-169,-170,-45,-31,7,-79,-80,-89,-90,-37,-153,-44,-46,-32,-71,-72,-38,-41,-73,-42,-48,-74,-135,-47,-49,7,-136,-39,7,-40,-33,-43,-137,-139,-141,-143,-145,-138,-140,-142,-144,-146,-147,-149,-151,-148,-150,-152,]),'PASS':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,26,27,28,34,37,38,39,40,41,76,77,78,82,83,93,94,95,96,97,98,99,100,101,102,103,104,113,114,115,116,117,118,119,120,121,122,123,124,125,126,138,139,147,149,150,157,165,166,169,173,181,182,183,184,185,204,206,208,210,216,218,227,235,239,244,245,258,259,260,262,275,276,290,292,309,311,319,321,323,325,326,327,334,335,336,338,340,342,343,344,345,],[8,8,-1,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-92,-161,-160,-162,-96,-159,-3,-4,-13,-14,-93,-94,-95,-163,8,-91,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-168,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,8,8,-36,-169,-170,-45,-31,8,-79,-80,-89,-90,-37,-153,-44,-46,-32,-71,-72,-38,-41,-73,-42,-48,-74,-135,-47,-49,8,-136,-39,8,-40,-33,-43,-137,-139,-141,-143,-145,-138,-140,-142,-144,-146,-147,-149,-151,-148,-150,-152,]),'FMT_LIBRARY':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,26,27,28,34,37,38,39,40,41,76,77,78,82,83,93,94,95,96,97,98,99,100,101,102,103,104,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,138,139,147,149,150,154,157,161,162,163,165,166,169,173,181,182,183,184,185,187,188,190,191,192,193,194,195,196,197,198,199,200,201,204,206,208,210,212,216,218,219,223,227,229,230,231,232,235,237,239,244,245,246,247,248,249,255,257,258,259,260,261,262,273,274,275,276,278,283,285,287,289,290,291,292,293,294,295,302,303,304,305,306,307,308,309,310,311,312,314,316,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,],[22,22,22,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-92,44,-161,-160,-162,-96,-159,22,-4,-13,-14,-93,-94,-95,-163,22,-91,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-168,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,22,22,22,-36,-169,-170,22,-45,22,22,22,-31,22,-79,-80,-89,-90,-37,-153,-44,22,22,22,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-46,-32,-71,-72,22,-38,-41,22,22,-73,22,22,-6,22,-42,22,-48,-74,-135,22,-9,-7,22,22,22,-47,-49,22,-10,-136,22,22,-39,22,22,22,22,22,22,-40,22,-33,22,22,22,22,22,22,22,22,22,22,-43,22,-137,22,22,22,22,-139,22,-141,22,-143,22,-145,-138,-140,22,22,22,22,22,22,-142,-144,-146,22,-147,22,-149,22,-151,-148,-150,-152,]),'FUNC':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,26,27,28,34,37,38,39,40,41,76,77,78,82,83,93,94,95,96,97,98,99,100,101,102,103,104,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,138,139,147,149,150,154,157,165,166,169,173,181,182,183,184,185,204,206,208,210,212,216,218,227,229,230,231,232,235,237,239,244,245,246,247,248,249,255,257,258,259,260,261,262,273,274,275,276,278,283,285,287,289,290,291,292,293,294,295,302,303,304,305,306,307,308,309,310,311,312,314,316,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,],[24,24,24,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-92,-161,-160,-162,-96,-159,24,-4,-13,-14,-93,-94,-95,-163,24,-91,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-168,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,24,24,24,-36,-169,-170,24,-45,-31,24,-79,-80,-89,-90,-37,-153,-44,-46,-32,-71,-72,24,-38,-41,-73,24,24,-6,24,-42,24,-48,-74,-135,24,-9,-7,24,24,24,-47,-49,24,-10,-136,24,24,-39,24,24,24,24,24,24,-40,24,-33,24,24,24,24,24,24,24,24,24,24,-43,24,-137,24,24,24,24,-139,24,-141,24,-143,24,-145,-138,-140,24,24,24,24,24,24,-142,-144,-146,24,-147,24,-149,24,-151,-148,-150,-152,]),'IDENTIFIER':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,26,27,28,30,32,33,34,35,36,37,38,39,40,41,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,76,77,78,80,82,83,89,93,94,95,96,97,98,99,100,101,102,103,104,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,129,130,132,133,137,138,139,140,141,142,147,148,149,150,151,152,153,154,157,161,162,163,165,166,169,173,176,181,182,183,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,207,208,209,210,211,212,216,218,219,221,222,223,227,229,230,231,232,233,235,236,237,239,244,245,246,247,248,249,255,257,258,259,260,261,262,263,273,274,275,276,278,283,285,287,289,290,291,292,293,294,295,302,303,304,305,306,307,308,309,310,311,312,314,316,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,],[25,25,25,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-92,43,-161,-160,-162,58,73,77,-96,82,86,-159,25,-4,-13,-14,82,77,82,82,82,82,82,82,82,82,82,82,107,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-93,-94,-95,134,-163,25,143,-91,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-168,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,25,82,134,134,77,134,25,25,77,171,82,-36,82,-169,-170,180,77,77,25,-45,25,25,25,-31,25,-79,-80,143,-89,-90,-37,-153,-44,25,25,-55,25,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-56,-57,-46,-32,224,-71,226,-72,171,25,-38,-41,25,-54,-58,25,-73,25,25,77,25,251,-42,77,25,-48,-74,-135,25,77,-7,25,25,25,-47,-49,25,-10,-136,226,25,25,-39,25,25,25,25,25,25,-40,25,-33,25,25,25,25,25,25,25,25,25,25,-43,25,-137,25,25,25,25,-139,25,-141,25,-143,25,-145,-138,-140,25,25,25,25,25,25,-142,-144,-146,25,-147,25,-149,25,-151,-148,-150,-152,]),'INPUT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,26,27,28,34,37,38,39,40,41,76,77,78,82,83,93,94,95,96,97,98,99,100,101,102,103,104,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,138,139,147,149,150,154,157,161,162,163,165,166,169,173,181,182,183,184,185,187,188,190,191,192,193,194,195,196,197,198,199,200,201,204,206,208,210,212,216,218,219,223,227,229,230,231,232,235,237,239,244,245,246,247,248,249,255,257,258,259,260,261,262,273,274,275,276,278,283,285,287,289,290,291,292,293,294,295,302,303,304,305,306,307,308,309,310,311,312,314,316,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,],[29,29,29,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-92,-161,-160,-162,-96,-159,29,-4,-13,-14,-93,-94,-95,-163,29,-91,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-168,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,29,29,29,-36,-169,-170,29,-45,29,29,29,-31,29,-79,-80,-89,-90,-37,-153,-44,29,29,29,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-46,-32,-71,-72,29,-38,-41,29,29,-73,29,29,-6,29,-42,29,-48,-74,-135,29,-9,-7,29,29,29,-47,-49,29,-10,-136,29,29,-39,29,29,29,29,29,29,-40,29,-33,29,29,29,29,29,29,29,29,29,29,-43,29,-137,29,29,29,29,-139,29,-141,29,-143,29,-145,-138,-140,29,29,29,29,29,29,-142,-144,-146,29,-147,29,-149,29,-151,-148,-150,-152,]),'VAR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,26,27,28,34,37,38,39,40,41,76,77,78,82,83,93,94,95,96,97,98,99,100,101,102,103,104,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,138,139,147,149,150,154,157,161,162,163,165,166,169,173,181,182,183,184,185,187,188,190,191,192,193,194,195,196,197,198,199,200,201,204,206,208,210,212,216,218,219,223,227,229,230,231,232,235,237,239,244,245,246,247,248,249,255,257,258,259,260,261,262,273,274,275,276,278,283,285,287,289,290,291,292,293,294,295,302,303,304,305,306,307,308,309,310,311,312,314,316,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,],[30,30,30,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-92,-161,-160,-162,-96,-159,30,-4,-13,-14,-93,-94,-95,-163,30,-91,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-168,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,30,30,30,-36,-169,-170,30,-45,30,30,30,-31,30,-79,-80,-89,-90,-37,-153,-44,30,30,30,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-46,-32,-71,-72,30,-38,-41,30,30,-73,30,30,-6,30,-42,30,-48,-74,-135,30,-9,-7,30,30,30,-47,-49,30,-10,-136,30,30,-39,30,30,30,30,30,30,-40,30,-33,30,30,30,30,30,30,30,30,30,30,-43,30,-137,30,30,30,30,-139,30,-141,30,-143,30,-145,-138,-140,30,30,30,30,30,30,-142,-144,-146,30,-147,30,-149,30,-151,-148,-150,-152,]),'CONST':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,26,27,28,34,37,38,39,40,41,76,77,78,82,83,93,94,95,96,97,98,99,100,101,102,103,104,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,138,139,147,149,150,154,157,161,162,163,165,166,169,173,181,182,183,184,185,187,188,190,191,192,193,194,195,196,197,198,199,200,201,204,206,208,210,212,216,218,219,223,227,229,230,231,232,235,237,239,244,245,246,247,248,249,255,257,258,259,260,261,262,273,274,275,276,278,283,285,287,289,290,291,292,293,294,295,302,303,304,305,306,307,308,309,310,311,312,314,316,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,],[32,32,32,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-92,-161,-160,-162,-96,-159,32,-4,-13,-14,-93,-94,-95,-163,32,-91,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-168,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,32,32,32,-36,-169,-170,32,-45,32,32,32,-31,32,-79,-80,-89,-90,-37,-153,-44,32,32,32,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-46,-32,-71,-72,32,-38,-41,32,32,-73,32,32,-6,32,-42,32,-48,-74,-135,32,-9,-7,32,32,32,-47,-49,32,-10,-136,32,32,-39,32,32,32,32,32,32,-40,32,-33,32,32,32,32,32,32,32,32,32,32,-43,32,-137,32,32,32,32,-139,32,-141,32,-143,32,-145,-138,-140,32,32,32,32,32,32,-142,-144,-146,32,-147,32,-149,32,-151,-148,-150,-152,]),'IF':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,26,27,28,34,37,38,39,40,41,76,77,78,82,83,93,94,95,96,97,98,99,100,101,102,103,104,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,138,139,147,149,150,154,157,161,162,163,165,166,169,173,181,182,183,184,185,187,188,190,191,192,193,194,195,196,197,198,199,200,201,204,206,208,210,212,216,217,218,219,223,227,229,230,231,232,234,235,237,239,244,245,246,247,248,249,255,257,258,259,260,261,262,273,274,275,276,278,283,285,287,289,290,291,292,293,294,295,302,303,304,305,306,307,308,309,310,311,312,314,316,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,],[33,33,33,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-92,-161,-160,-162,-96,-159,33,-4,-13,-14,-93,-94,-95,-163,33,-91,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-168,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,33,33,33,-36,-169,-170,33,-45,33,33,33,-31,33,-79,-80,-89,-90,-37,-153,-44,33,33,33,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-46,-32,-71,-72,33,-38,236,-41,33,33,-73,33,33,-6,33,236,-42,33,-48,-74,-135,33,-9,-7,33,33,33,-47,-49,33,-10,-136,33,33,-39,33,33,33,33,33,33,-40,33,-33,33,33,33,33,33,33,33,33,33,33,-43,33,-137,33,33,33,33,-139,33,-141,33,-143,33,-145,-138,-140,33,33,33,33,33,33,-142,-144,-146,33,-147,33,-149,33,-151,-148,-150,-152,]),'SWITCH':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,26,27,28,34,37,38,39,40,41,76,77,78,82,83,93,94,95,96,97,98,99,100,101,102,103,104,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,138,139,147,149,150,154,157,161,162,163,165,166,169,173,181,182,183,184,185,187,188,190,191,192,193,194,195,196,197,198,199,200,201,204,206,208,210,212,216,218,219,223,227,229,230,231,232,235,237,239,244,245,246,247,248,249,255,257,258,259,260,261,262,273,274,275,276,278,283,285,287,289,290,291,292,293,294,295,302,303,304,305,306,307,308,309,310,311,312,314,316,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,],[35,35,35,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-92,-161,-160,-162,-96,-159,35,-4,-13,-14,-93,-94,-95,-163,35,-91,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-168,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,35,35,35,-36,-169,-170,35,-45,35,35,35,-31,35,-79,-80,-89,-90,-37,-153,-44,35,35,35,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-46,-32,-71,-72,35,-38,-41,35,35,-73,35,35,-6,35,-42,35,-48,-74,-135,35,-9,-7,35,35,35,-47,-49,35,-10,-136,35,35,-39,35,35,35,35,35,35,-40,35,-33,35,35,35,35,35,35,35,35,35,35,-43,35,-137,35,35,35,35,-139,35,-141,35,-143,35,-145,-138,-140,35,35,35,35,35,35,-142,-144,-146,35,-147,35,-149,35,-151,-148,-150,-152,]),'FOR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,26,27,28,34,37,38,39,40,41,76,77,78,82,83,93,94,95,96,97,98,99,100,101,102,103,104,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,138,139,147,149,150,154,157,165,166,169,173,181,182,183,184,185,204,206,208,210,212,216,218,227,229,230,231,232,235,237,239,244,245,246,247,248,249,255,257,258,259,260,261,262,273,274,275,276,278,283,285,287,289,290,291,292,293,294,295,302,303,304,305,306,307,308,309,310,311,312,314,316,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,],[36,36,36,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-92,-161,-160,-162,-96,-159,36,-4,-13,-14,-93,-94,-95,-163,36,-91,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-168,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,36,36,36,-36,-169,-170,36,-45,-31,36,-79,-80,-89,-90,-37,-153,-44,-46,-32,-71,-72,36,-38,-41,-73,36,36,-6,36,-42,36,-48,-74,-135,36,-9,-7,36,36,36,-47,-49,36,-10,-136,36,36,-39,36,36,36,36,36,36,-40,36,-33,36,36,36,36,36,36,36,36,36,36,-43,36,-137,36,36,36,36,-139,36,-141,36,-143,36,-145,-138,-140,36,36,36,36,36,36,-142,-144,-146,36,-147,36,-149,36,-151,-148,-150,-152,]),'STRING':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,26,27,28,33,34,35,36,37,38,39,40,41,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,76,77,78,80,82,83,93,94,95,96,97,98,99,100,101,102,103,104,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,129,130,132,133,137,138,139,140,141,142,147,148,149,150,152,153,154,157,161,162,163,165,166,169,173,181,182,183,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,208,209,210,211,212,216,218,219,221,222,223,227,229,230,231,232,233,235,236,237,239,244,245,246,247,248,249,255,257,258,259,260,261,262,263,273,274,275,276,278,283,285,287,289,290,291,292,293,294,295,302,303,304,305,306,307,308,309,310,311,312,314,316,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,],[37,37,37,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-92,-161,-160,-162,37,-96,37,37,-159,37,-4,-13,-14,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-93,-94,-95,37,-163,37,-91,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-168,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,37,37,37,37,37,37,37,37,37,37,37,-36,37,-169,-170,37,37,37,-45,37,37,37,-31,37,-79,-80,-89,-90,-37,-153,-44,37,37,-55,37,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-56,-57,-46,-32,-71,37,-72,37,37,-38,-41,37,-54,-58,37,-73,37,37,37,37,37,-42,37,37,-48,-74,-135,37,37,-7,37,37,37,-47,-49,37,-10,-136,37,37,37,-39,37,37,37,37,37,37,-40,37,-33,37,37,37,37,37,37,37,37,37,37,-43,37,-137,37,37,37,37,-139,37,-141,37,-143,37,-145,-138,-140,37,37,37,37,37,37,-142,-144,-146,37,-147,37,-149,37,-151,-148,-150,-152,]),'INTEGER':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,26,27,28,33,34,35,36,37,38,39,40,41,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,76,77,78,80,82,83,93,94,95,96,97,98,99,100,101,102,103,104,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,129,130,132,133,137,138,139,140,141,142,147,148,149,150,152,153,154,157,161,162,163,165,166,169,173,181,182,183,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,208,209,210,211,212,216,218,219,221,222,223,227,229,230,231,232,233,235,236,237,239,244,245,246,247,248,249,255,257,258,259,260,261,262,263,265,273,274,275,276,278,283,285,287,289,290,291,292,293,294,295,302,303,304,305,306,307,308,309,310,311,312,314,316,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,],[27,27,27,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-92,-161,-160,-162,27,-96,27,27,-159,27,-4,-13,-14,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-93,-94,-95,27,-163,27,-91,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-168,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,27,27,27,27,27,27,27,27,27,27,27,-36,27,-169,-170,27,27,27,-45,27,27,27,-31,27,-79,-80,-89,-90,-37,-153,-44,27,27,-55,27,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-56,-57,-46,-32,-71,27,-72,27,27,-38,-41,27,-54,-58,27,-73,27,27,27,27,253,-42,27,27,-48,-74,-135,27,27,-7,27,27,27,-47,-49,27,-10,-136,27,281,27,27,-39,27,27,27,27,27,27,-40,27,-33,27,27,27,27,27,27,27,27,27,27,-43,27,-137,27,27,27,27,-139,27,-141,27,-143,27,-145,-138,-140,27,27,27,27,27,27,-142,-144,-146,27,-147,27,-149,27,-151,-148,-150,-152,]),'FLOAT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,26,27,28,33,34,35,36,37,38,39,40,41,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,76,77,78,80,82,83,93,94,95,96,97,98,99,100,101,102,103,104,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,129,130,132,133,137,138,139,140,141,142,147,148,149,150,152,153,154,157,161,162,163,165,166,169,173,181,182,183,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,208,209,210,211,212,216,218,219,221,222,223,227,229,230,231,232,233,235,236,237,239,244,245,246,247,248,249,255,257,258,259,260,261,262,263,265,273,274,275,276,278,283,285,287,289,290,291,292,293,294,295,302,303,304,305,306,307,308,309,310,311,312,314,316,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,],[26,26,26,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-92,-161,-160,-162,26,-96,26,26,-159,26,-4,-13,-14,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-93,-94,-95,26,-163,26,-91,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-168,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,26,26,26,26,26,26,26,26,26,26,26,-36,26,-169,-170,26,26,26,-45,26,26,26,-31,26,-79,-80,-89,-90,-37,-153,-44,26,26,-55,26,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-56,-57,-46,-32,-71,26,-72,26,26,-38,-41,26,-54,-58,26,-73,26,26,26,26,252,-42,26,26,-48,-74,-135,26,26,-7,26,26,26,-47,-49,26,-10,-136,26,280,26,26,-39,26,26,26,26,26,26,-40,26,-33,26,26,26,26,26,26,26,26,26,26,-43,26,-137,26,26,26,26,-139,26,-141,26,-143,26,-145,-138,-140,26,26,26,26,26,26,-142,-144,-146,26,-147,26,-149,26,-151,-148,-150,-152,]),'BOOLEAN':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,26,27,28,33,34,35,36,37,38,39,40,41,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,76,77,78,80,82,83,93,94,95,96,97,98,99,100,101,102,103,104,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,129,130,132,133,137,138,139,140,141,142,147,148,149,150,152,153,154,157,161,162,163,165,166,169,173,181,182,183,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,208,209,210,211,212,216,218,219,221,222,223,227,229,230,231,232,233,235,236,237,239,244,245,246,247,248,249,255,257,258,259,260,261,262,263,265,273,274,275,276,278,283,285,287,289,290,291,292,293,294,295,302,303,304,305,306,307,308,309,310,311,312,314,316,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,],[28,28,28,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-92,-161,-160,-162,28,-96,28,28,-159,28,-4,-13,-14,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-93,-94,-95,28,-163,28,-91,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-168,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,28,28,28,28,28,28,28,28,28,28,28,-36,28,-169,-170,28,28,28,-45,28,28,28,-31,28,-79,-80,-89,-90,-37,-153,-44,28,28,-55,28,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-56,-57,-46,-32,-71,28,-72,28,28,-38,-41,28,-54,-58,28,-73,28,28,28,28,254,-42,28,28,-48,-74,-135,28,28,-7,28,28,28,-47,-49,28,-10,-136,28,282,28,28,-39,28,28,28,28,28,28,-40,28,-33,28,28,28,28,28,28,28,28,28,28,-43,28,-137,28,28,28,28,-139,28,-141,28,-143,28,-145,-138,-140,28,28,28,28,28,28,-142,-144,-146,28,-147,28,-149,28,-151,-148,-150,-152,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,26,27,28,34,37,38,39,40,41,76,77,78,82,93,94,95,96,97,98,99,100,101,102,103,104,113,114,115,116,117,118,119,120,121,122,123,124,125,126,147,149,150,157,165,169,173,181,182,183,184,185,204,206,208,210,216,218,227,235,239,244,245,258,259,262,275,290,292,309,311,319,321,323,325,326,327,334,335,336,338,340,342,343,344,345,],[0,-1,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-92,-161,-160,-162,-96,-159,-3,-4,-13,-14,-93,-94,-95,-163,-91,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-168,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-36,-169,-170,-45,-31,-79,-80,-89,-90,-37,-153,-44,-46,-32,-71,-72,-38,-41,-73,-42,-48,-74,-135,-47,-49,-136,-39,-40,-33,-43,-137,-139,-141,-143,-145,-138,-140,-142,-144,-146,-147,-149,-151,-148,-150,-152,]),'RKEY':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,26,27,28,34,37,38,39,40,41,76,77,78,80,82,93,94,95,96,97,98,99,100,101,102,103,104,113,114,115,116,117,118,119,120,121,122,123,124,125,126,130,131,132,137,138,147,149,150,154,156,157,159,161,162,163,164,165,166,169,173,181,182,183,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,208,210,216,218,219,220,221,222,223,227,229,230,231,235,238,239,240,244,245,246,247,248,249,257,258,259,261,262,273,275,276,290,291,292,294,302,304,306,308,309,310,311,312,319,320,321,322,323,324,325,326,327,329,331,333,334,335,336,337,338,339,340,341,342,343,344,345,],[-1,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-92,-161,-160,-162,-96,-159,-3,-4,-13,-14,-93,-94,-95,-53,-163,-91,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-168,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-53,157,-53,-53,165,-36,-169,-170,183,185,-45,-52,-59,-59,-59,204,-31,206,-79,-80,-89,-90,-37,-153,-44,-59,-59,-55,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-56,-57,-46,-32,-71,-72,-38,-41,-59,239,-54,-58,-59,-73,245,-5,-6,-42,258,-48,259,-74,-135,-8,-9,-7,262,275,-47,-49,-10,-136,290,-39,292,-40,309,-33,311,319,321,323,325,-43,326,-137,327,-139,334,-141,335,-143,336,-145,-138,-140,338,340,342,-142,-144,-146,343,-147,344,-149,345,-151,-148,-150,-152,]),'RETURN':([4,5,9,10,11,12,13,14,15,16,17,18,19,20,21,23,26,27,28,34,37,40,41,76,77,78,82,93,94,95,96,97,98,99,100,101,102,103,104,113,114,115,116,117,118,119,120,121,122,123,124,125,126,147,149,150,157,165,169,173,181,182,183,184,185,204,206,208,210,212,216,218,227,229,230,231,232,235,239,244,245,246,247,248,249,258,259,261,262,275,278,283,285,287,289,290,292,293,294,295,302,303,304,305,306,307,308,309,310,311,312,314,316,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,],[-11,-12,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-92,-161,-160,-162,-96,-159,-13,-14,-93,-94,-95,-163,-91,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-168,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-36,-169,-170,-45,-31,-79,-80,-89,-90,-37,-153,-44,-46,-32,-71,-72,231,-38,-41,-73,247,-5,-6,231,-42,-48,-74,-135,-8,-9,-7,247,-47,-49,-10,-136,-39,231,231,231,231,231,-40,-33,231,247,231,247,231,247,231,247,231,247,-43,247,-137,247,231,231,231,-139,247,-141,247,-143,247,-145,-138,-140,231,247,231,247,231,247,-142,-144,-146,247,-147,247,-149,247,-151,-148,-150,-152,]),'PLUS':([12,16,23,25,26,27,28,31,34,37,74,75,76,77,78,84,86,93,113,114,115,116,117,118,119,120,121,122,123,124,125,126,147,160,167,181,182,184,193,197,248,256,261,],[-93,-95,-92,-94,-161,-160,-162,59,-96,-159,-96,59,-93,-94,-95,-96,-94,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-153,59,-96,59,59,-153,-93,-95,59,-96,59,]),'MINUS':([12,16,23,25,26,27,28,31,34,37,74,75,76,77,78,84,86,93,113,114,115,116,117,118,119,120,121,122,123,124,125,126,147,160,167,181,182,184,193,197,248,256,261,],[-93,-95,-92,-94,-161,-160,-162,60,-96,-159,-96,60,-93,-94,-95,-96,-94,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-153,60,-96,60,60,-153,-93,-95,60,-96,60,]),'DIVIDE':([12,16,23,25,26,27,28,31,34,37,74,75,76,77,78,84,86,93,113,114,115,116,117,118,119,120,121,122,123,124,125,126,147,160,167,181,182,184,193,197,248,256,261,],[-93,-95,-92,-94,-161,-160,-162,61,-96,-159,-96,61,-93,-94,-95,-96,-94,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-153,61,-96,61,61,-153,-93,-95,61,-96,61,]),'TIMES':([12,16,23,25,26,27,28,31,34,37,74,75,76,77,78,84,86,93,113,114,115,116,117,118,119,120,121,122,123,124,125,126,147,160,167,181,182,184,193,197,248,256,261,],[-93,-95,-92,-94,-161,-160,-162,62,-96,-159,-96,62,-93,-94,-95,-96,-94,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-153,62,-96,62,62,-153,-93,-95,62,-96,62,]),'ENTERE_DIVIDE':([12,16,23,25,26,27,28,31,34,37,74,75,76,77,78,84,86,93,113,114,115,116,117,118,119,120,121,122,123,124,125,126,147,160,167,181,182,184,193,197,248,256,261,],[-93,-95,-92,-94,-161,-160,-162,63,-96,-159,-96,63,-93,-94,-95,-96,-94,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-153,63,-96,63,63,-153,-93,-95,63,-96,63,]),'MODULE':([12,16,23,25,26,27,28,31,34,37,74,75,76,77,78,84,86,93,113,114,115,116,117,118,119,120,121,122,123,124,125,126,147,160,167,181,182,184,193,197,248,256,261,],[-93,-95,-92,-94,-161,-160,-162,64,-96,-159,-96,64,-93,-94,-95,-96,-94,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-153,64,-96,64,64,-153,-93,-95,64,-96,64,]),'EQUALEQUAL':([12,16,23,25,26,27,28,31,34,37,74,75,76,77,78,84,86,93,113,114,115,116,117,118,119,120,121,122,123,124,125,126,147,160,167,181,182,184,193,197,248,256,261,],[-93,-95,-92,-94,-161,-160,-162,65,-96,-159,-96,65,-93,-94,-95,-96,-94,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-153,65,-96,65,65,-153,-93,-95,65,-96,65,]),'NOT_EQUAL':([12,16,23,25,26,27,28,31,34,37,74,75,76,77,78,84,86,93,113,114,115,116,117,118,119,120,121,122,123,124,125,126,147,160,167,181,182,184,193,197,248,256,261,],[-93,-95,-92,-94,-161,-160,-162,66,-96,-159,-96,66,-93,-94,-95,-96,-94,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-153,66,-96,66,66,-153,-93,-95,66,-96,66,]),'LESS_EQUAL':([12,16,23,25,26,27,28,31,34,37,74,75,76,77,78,84,86,93,113,114,115,116,117,118,119,120,121,122,123,124,125,126,147,160,167,181,182,184,193,197,248,256,261,],[-93,-95,-92,-94,-161,-160,-162,67,-96,-159,-96,67,-93,-94,-95,-96,-94,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-153,67,-96,67,67,-153,-93,-95,67,-96,67,]),'GREATER_EQUAL':([12,16,23,25,26,27,28,31,34,37,74,75,76,77,78,84,86,93,113,114,115,116,117,118,119,120,121,122,123,124,125,126,147,160,167,181,182,184,193,197,248,256,261,],[-93,-95,-92,-94,-161,-160,-162,68,-96,-159,-96,68,-93,-94,-95,-96,-94,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-153,68,-96,68,68,-153,-93,-95,68,-96,68,]),'LESS':([12,16,23,25,26,27,28,31,34,37,74,75,76,77,78,84,86,93,113,114,115,116,117,118,119,120,121,122,123,124,125,126,147,160,167,181,182,184,193,197,248,256,261,],[-93,-95,-92,-94,-161,-160,-162,69,-96,-159,-96,69,-93,-94,-95,-96,-94,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,-153,69,-96,69,69,-153,-93,-95,69,-96,69,]),'GREATER':([12,16,23,25,26,27,28,31,34,37,74,75,76,77,78,84,86,93,113,114,115,116,117,118,119,120,121,122,123,124,125,126,147,160,167,181,182,184,193,197,248,256,261,],[-93,-95,-92,-94,-161,-160,-162,70,-96,-159,-96,70,-93,-94,-95,-96,-94,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,-153,70,-96,70,70,-153,-93,-95,70,-96,70,]),'LOGICAL_AND':([12,16,23,25,26,27,28,31,34,37,74,75,76,77,78,84,86,93,113,114,115,116,117,118,119,120,121,122,123,124,125,126,147,160,167,181,182,184,193,197,248,256,261,],[-93,-95,-92,-94,-161,-160,-162,71,-96,-159,-96,71,-93,-94,-95,-96,-94,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-153,71,-96,71,71,-153,-93,-95,71,-96,71,]),'LOGICAL_OR':([12,16,23,25,26,27,28,31,34,37,74,75,76,77,78,84,86,93,113,114,115,116,117,118,119,120,121,122,123,124,125,126,147,160,167,181,182,184,193,197,248,256,261,],[-93,-95,-92,-94,-161,-160,-162,72,-96,-159,-96,72,-93,-94,-95,-96,-94,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,-153,72,-96,72,72,-153,-93,-95,72,-96,72,]),'DOT':([22,44,],[42,90,]),'SEMICOLON':([23,26,27,28,34,37,76,77,78,85,93,113,114,115,116,117,118,119,120,121,122,123,124,125,126,167,184,],[-92,-161,-160,-162,-96,-159,-93,-94,-95,140,-91,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,207,-153,]),'CASE':([23,26,27,28,34,37,76,77,78,80,82,93,94,95,96,97,98,99,100,101,102,103,104,113,114,115,116,117,118,119,120,121,122,123,124,125,126,130,132,137,147,149,150,157,161,162,163,169,173,181,182,183,184,185,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,208,210,216,218,221,222,227,235,239,244,258,259,275,290,309,],[-92,-161,-160,-162,-96,-159,-93,-94,-95,133,-163,-91,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-168,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,133,133,133,-36,-169,-170,-45,-59,-59,-59,-79,-80,-89,-90,-37,-153,-44,-59,-55,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-56,-57,-46,-71,-72,-38,-41,-54,-58,-73,-42,-48,-74,-47,-49,-39,-40,-43,]),'COLON':([23,26,27,28,34,37,76,77,78,80,82,93,94,95,96,97,98,99,100,101,102,103,104,113,114,115,116,117,118,119,120,121,122,123,124,125,126,130,132,133,134,135,136,137,147,149,150,157,158,160,161,162,163,169,173,181,182,183,184,185,186,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,208,210,216,218,221,222,227,235,239,244,258,259,275,290,309,],[-92,-161,-160,-162,-96,-159,-93,-94,-95,-51,-163,-91,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-168,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-51,-51,161,162,163,-50,-51,-36,-169,-170,-45,187,188,-59,-59,-59,-79,-80,-89,-90,-37,-153,-44,219,-59,-55,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-56,-57,-46,223,-71,-72,-38,-41,-54,-58,-73,-42,-48,-74,-47,-49,-39,-40,-43,]),'DEFAULT':([23,26,27,28,34,37,76,77,78,80,82,93,94,95,96,97,98,99,100,101,102,103,104,113,114,115,116,117,118,119,120,121,122,123,124,125,126,130,131,132,137,147,149,150,156,157,159,161,162,163,164,169,173,181,182,183,184,185,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,208,210,216,218,221,222,227,235,239,244,258,259,275,290,309,],[-92,-161,-160,-162,-96,-159,-93,-94,-95,-53,-163,-91,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-168,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-53,158,-53,-53,-36,-169,-170,186,-45,-52,-59,-59,-59,205,-79,-80,-89,-90,-37,-153,-44,-59,-55,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-56,-57,-46,-71,-72,-38,-41,-54,-58,-73,-42,-48,-74,-47,-49,-39,-40,-43,]),'LKEY':([23,26,27,28,34,35,36,37,74,76,77,78,79,81,82,84,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,175,184,213,217,234,241,242,243,256,264,266,268,270,272,277,279,284,286,288,297,299,301,313,315,317,],[-92,-161,-160,-162,-96,80,83,-159,128,-93,-94,-95,130,137,-163,139,-164,-165,-166,-167,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,212,-153,232,237,255,260,-34,-35,274,278,283,285,287,289,293,295,303,305,307,314,316,318,328,330,332,]),'LPAREN':([25,29,43,77,86,87,88,146,],[45,57,89,129,129,141,142,177,]),'SHORT_VAR_DECL':([25,86,],[46,46,]),'PLUS_EQ':([25,],[47,]),'MINUS_EQ':([25,],[48,]),'TIMES_EQ':([25,],[49,]),'DIVIDE_EQ':([25,],[50,]),'MODULO_EQ':([25,],[51,]),'BITWISE_AND_EQ':([25,],[52,]),'BITWISE_OR_EQ':([25,],[53,]),'BITWISE_XOR_EQ':([25,],[54,]),'LEFT_SHIFT_EQ':([25,],[55,]),'RIGHT_SHIFT_EQ':([25,],[56,]),'RPAREN':([26,27,28,37,57,82,91,92,105,106,107,109,110,111,112,141,142,144,145,155,168,170,171,172,174,178,179,180,211,214,225,226,228,250,251,252,253,254,263,265,267,269,271,280,281,282,296,298,300,],[-161,-160,-162,-159,104,-163,147,-157,149,150,-121,-164,-165,-166,-167,169,173,175,-154,184,208,-75,-76,210,-156,-158,-122,-121,227,-155,-77,-78,244,264,266,268,270,272,277,279,284,286,288,297,299,301,313,315,317,]),'COMMA':([26,27,28,37,82,91,92,106,107,109,110,111,112,144,145,155,168,170,171,172,174,178,179,180,214,215,225,226,228,250,251,252,253,254,280,281,282,],[-161,-160,-162,-159,-163,148,-157,151,-121,-164,-165,-166,-167,176,-154,148,209,-75,-76,211,-156,-158,151,-121,-155,233,-77,-78,209,263,265,267,269,271,296,298,300,]),'PRINTLN':([42,],[87,]),'PRINTF':([42,90,],[88,146,]),'INTEGER_DATA_TYPE':([58,73,143,175,],[109,109,109,109,]),'FLOAT_DATA_TYPE':([58,73,143,175,],[110,110,110,110,]),'BOOLEAN_DATA_TYPE':([58,73,143,175,],[111,111,111,111,]),'STRING_DATA_TYPE':([58,73,143,175,],[112,112,112,112,]),'EQUAL':([108,109,110,111,112,127,],[152,-164,-165,-166,-167,153,]),'FMT_FORMAT_STRING':([177,],[215,]),'ELSE':([183,216,218,235,309,],[217,234,-41,-42,-43,]),'INCREASE':([224,],[242,]),'DECREASE':([224,],[243,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'loop_program':([0,83,139,260,],[1,138,166,276,]),'program':([0,1,83,128,138,139,166,212,229,232,237,249,255,260,274,276,278,283,285,287,289,293,294,295,302,303,304,305,306,307,308,310,312,314,316,318,320,322,324,328,329,330,331,332,333,337,339,341,],[2,38,2,154,38,2,38,230,246,230,257,246,273,2,291,38,230,230,230,230,230,230,246,230,246,230,246,230,246,230,246,246,246,230,230,230,246,246,246,230,246,230,246,230,246,246,246,246,]),'loop_reserved':([0,1,83,138,139,166,260,276,],[3,39,3,39,3,39,3,39,]),'sentencia':([0,1,2,38,83,128,138,139,154,166,212,229,230,232,237,246,249,255,257,260,273,274,276,278,283,285,287,289,291,293,294,295,302,303,304,305,306,307,308,310,312,314,316,318,320,322,324,328,329,330,331,332,333,337,339,341,],[4,4,40,40,4,4,4,4,40,4,4,4,40,4,4,40,4,4,40,4,40,4,4,4,4,4,4,4,40,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'loop':([0,1,2,38,83,128,138,139,154,166,212,229,230,232,237,246,249,255,257,260,273,274,276,278,283,285,287,289,291,293,294,295,302,303,304,305,306,307,308,310,312,314,316,318,320,322,324,328,329,330,331,332,333,337,339,341,],[5,5,41,41,5,5,5,5,41,5,5,5,41,5,5,41,5,5,41,5,41,5,5,5,5,5,5,5,41,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'print':([0,1,2,38,83,128,138,139,154,161,162,163,166,187,188,190,212,219,223,229,230,232,237,246,249,255,257,260,273,274,276,278,283,285,287,289,291,293,294,295,302,303,304,305,306,307,308,310,312,314,316,318,320,322,324,328,329,330,331,332,333,337,339,341,],[9,9,9,9,9,9,9,9,9,191,191,191,9,191,191,191,9,191,191,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'print_withoutvalue':([0,1,2,38,83,128,138,139,154,161,162,163,166,187,188,190,212,219,223,229,230,232,237,246,249,255,257,260,273,274,276,278,283,285,287,289,291,293,294,295,302,303,304,305,306,307,308,310,312,314,316,318,320,322,324,328,329,330,331,332,333,337,339,341,],[10,10,10,10,10,10,10,10,10,192,192,192,10,192,192,192,10,192,192,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'def_function':([0,1,2,38,83,128,138,139,154,166,212,229,230,232,237,246,249,255,257,260,273,274,276,278,283,285,287,289,291,293,294,295,302,303,304,305,306,307,308,310,312,314,316,318,320,322,324,328,329,330,331,332,333,337,339,341,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'call_function':([0,1,2,33,36,38,46,59,60,61,62,63,64,65,66,67,68,69,70,71,72,83,128,133,138,139,140,152,153,154,161,162,163,166,187,188,190,212,219,223,229,230,231,232,236,237,246,247,249,255,257,260,273,274,276,278,283,285,287,289,291,293,294,295,302,303,304,305,306,307,308,310,312,314,316,318,320,322,324,328,329,330,331,332,333,337,339,341,],[12,12,12,76,76,12,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,12,12,76,12,12,76,76,76,12,193,193,193,12,193,193,193,12,193,193,12,12,76,12,76,12,12,76,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'input':([0,1,2,38,83,128,138,139,154,161,162,163,166,187,188,190,212,219,223,229,230,232,237,246,249,255,257,260,273,274,276,278,283,285,287,289,291,293,294,295,302,303,304,305,306,307,308,310,312,314,316,318,320,322,324,328,329,330,331,332,333,337,339,341,],[13,13,13,13,13,13,13,13,13,194,194,194,13,194,194,194,13,194,194,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'assignment':([0,1,2,38,83,128,138,139,154,161,162,163,166,187,188,190,212,219,223,229,230,232,237,246,249,255,257,260,273,274,276,278,283,285,287,289,291,293,294,295,302,303,304,305,306,307,308,310,312,314,316,318,320,322,324,328,329,330,331,332,333,337,339,341,],[14,14,14,14,14,14,14,14,14,195,195,195,14,195,195,195,14,195,195,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'short_assignment':([0,1,2,36,38,83,128,138,139,154,161,162,163,166,187,188,190,212,219,223,229,230,232,237,246,249,255,257,260,273,274,276,278,283,285,287,289,291,293,294,295,302,303,304,305,306,307,308,310,312,314,316,318,320,322,324,328,329,330,331,332,333,337,339,341,],[15,15,15,85,15,15,15,15,15,15,196,196,196,15,196,196,196,15,196,196,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'arithmetic_operation':([0,1,2,33,36,38,46,59,60,61,62,63,64,65,66,67,68,69,70,71,72,83,128,133,138,139,140,152,153,154,161,162,163,166,187,188,190,212,219,223,229,230,231,232,236,237,246,247,249,255,257,260,273,274,276,278,283,285,287,289,291,293,294,295,302,303,304,305,306,307,308,310,312,314,316,318,320,322,324,328,329,330,331,332,333,337,339,341,],[16,16,16,78,78,16,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,16,16,78,16,16,78,78,78,16,197,197,197,16,197,197,197,16,197,197,16,16,78,16,78,16,16,78,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'direct_arithmetic_operation':([0,1,2,38,83,128,138,139,154,161,162,163,166,187,188,190,212,219,223,229,230,232,237,246,249,255,257,260,273,274,276,278,283,285,287,289,291,293,294,295,302,303,304,305,306,307,308,310,312,314,316,318,320,322,324,328,329,330,331,332,333,337,339,341,],[17,17,17,17,17,17,17,17,17,198,198,198,17,198,198,198,17,198,198,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'if_statement':([0,1,2,38,83,128,138,139,154,161,162,163,166,187,188,190,212,219,223,229,230,232,237,246,249,255,257,260,273,274,276,278,283,285,287,289,291,293,294,295,302,303,304,305,306,307,308,310,312,314,316,318,320,322,324,328,329,330,331,332,333,337,339,341,],[18,18,18,18,18,18,18,18,18,199,199,199,18,199,199,199,18,199,199,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'function_call':([0,1,2,38,83,128,138,139,154,161,162,163,166,187,188,190,212,219,223,229,230,232,237,246,249,255,257,260,273,274,276,278,283,285,287,289,291,293,294,295,302,303,304,305,306,307,308,310,312,314,316,318,320,322,324,328,329,330,331,332,333,337,339,341,],[19,19,19,19,19,19,19,19,19,200,200,200,19,200,200,200,19,200,200,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'switch_statement':([0,1,2,38,83,128,138,139,154,161,162,163,166,187,188,190,212,219,223,229,230,232,237,246,249,255,257,260,273,274,276,278,283,285,287,289,291,293,294,295,302,303,304,305,306,307,308,310,312,314,316,318,320,322,324,328,329,330,331,332,333,337,339,341,],[20,20,20,20,20,20,20,20,20,201,201,201,20,201,201,201,20,201,201,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'for':([0,1,2,38,83,128,138,139,154,166,212,229,230,232,237,246,249,255,257,260,273,274,276,278,283,285,287,289,291,293,294,295,302,303,304,305,306,307,308,310,312,314,316,318,320,322,324,328,329,330,331,332,333,337,339,341,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'value':([0,1,2,33,35,36,38,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,80,83,128,129,130,132,133,137,138,139,140,141,142,148,152,153,154,161,162,163,166,187,188,190,209,211,212,219,223,229,230,231,232,233,236,237,246,247,249,255,257,260,263,273,274,276,278,283,285,287,289,291,293,294,295,302,303,304,305,306,307,308,310,312,314,316,318,320,322,324,328,329,330,331,332,333,337,339,341,],[23,23,23,23,79,23,23,92,23,94,95,96,97,98,99,100,101,102,103,105,23,23,23,23,23,23,23,23,23,23,23,23,23,23,136,23,23,92,136,136,23,136,23,23,23,170,172,178,23,23,23,23,23,23,23,23,23,23,225,170,23,23,23,23,23,23,23,170,23,23,23,23,23,23,23,23,225,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'usable_value':([0,1,2,33,36,38,46,59,60,61,62,63,64,65,66,67,68,69,70,71,72,83,128,133,138,139,140,152,153,154,161,162,163,166,187,188,190,212,219,223,229,230,231,232,236,237,246,247,249,255,257,260,273,274,276,278,283,285,287,289,291,293,294,295,302,303,304,305,306,307,308,310,312,314,316,318,320,322,324,328,329,330,331,332,333,337,339,341,],[31,31,31,75,75,31,93,113,114,115,116,117,118,119,120,121,122,123,124,125,126,31,31,160,31,31,75,181,182,31,31,31,31,31,31,31,31,31,31,31,31,31,248,31,75,31,31,261,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'comparation_operation':([0,1,2,33,36,38,46,59,60,61,62,63,64,65,66,67,68,69,70,71,72,83,128,133,138,139,140,152,153,154,161,162,163,166,187,188,190,212,219,223,229,230,231,232,236,237,246,247,249,255,257,260,273,274,276,278,283,285,287,289,291,293,294,295,302,303,304,305,306,307,308,310,312,314,316,318,320,322,324,328,329,330,331,332,333,337,339,341,],[34,34,34,74,84,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,167,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,256,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'switch_expression':([35,80,130,132,137,],[81,135,135,135,135,]),'values':([45,129,],[91,155,]),'identifiers':([57,151,],[106,179,]),'data_type':([58,73,143,175,],[108,127,174,213,]),'switch_cases':([80,130,132,137,],[131,156,159,164,]),'switch_case':([80,130,132,137,],[132,132,132,132,]),'parameters':([89,],[144,]),'parameter':([89,176,],[145,214,]),'data':([141,211,233,],[168,228,250,]),'statements':([161,162,163,187,188,190,219,223,],[189,202,203,220,221,222,238,240,]),'statement':([161,162,163,187,188,190,219,223,],[190,190,190,190,190,190,190,190,]),'conditions_elseif':([183,],[216,]),'else_if':([183,216,],[218,235,]),'func_program':([212,232,278,283,285,287,289,293,295,303,305,307,314,316,318,328,330,332,],[229,249,294,302,304,306,308,310,312,320,322,324,329,331,333,337,339,341,]),'operator_for':([224,],[241,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> loop_program","S'",1,None,None,None),
  ('loop_program -> program','loop_program',1,'p_loop_program','syntax_analyzer.py',5),
  ('loop_program -> loop_reserved','loop_program',1,'p_loop_program','syntax_analyzer.py',6),
  ('loop_program -> loop_program program','loop_program',2,'p_loop_program','syntax_analyzer.py',7),
  ('loop_program -> loop_program loop_reserved','loop_program',2,'p_loop_program','syntax_analyzer.py',8),
  ('func_program -> program','func_program',1,'p_func_program','syntax_analyzer.py',11),
  ('func_program -> RETURN','func_program',1,'p_func_program','syntax_analyzer.py',12),
  ('func_program -> RETURN usable_value','func_program',2,'p_func_program','syntax_analyzer.py',13),
  ('func_program -> func_program program','func_program',2,'p_func_program','syntax_analyzer.py',14),
  ('func_program -> func_program RETURN','func_program',2,'p_func_program','syntax_analyzer.py',15),
  ('func_program -> func_program RETURN usable_value','func_program',3,'p_func_program','syntax_analyzer.py',16),
  ('program -> sentencia','program',1,'p_program','syntax_analyzer.py',20),
  ('program -> loop','program',1,'p_program','syntax_analyzer.py',21),
  ('program -> program sentencia','program',2,'p_program','syntax_analyzer.py',22),
  ('program -> program loop','program',2,'p_program','syntax_analyzer.py',23),
  ('loop_reserved -> BREAK','loop_reserved',1,'p_loop_reserved','syntax_analyzer.py',27),
  ('loop_reserved -> CONTINUE','loop_reserved',1,'p_loop_reserved','syntax_analyzer.py',28),
  ('loop_reserved -> PASS','loop_reserved',1,'p_loop_reserved','syntax_analyzer.py',29),
  ('loop -> for','loop',1,'p_loop','syntax_analyzer.py',33),
  ('sentencia -> print','sentencia',1,'p_sentencia','syntax_analyzer.py',37),
  ('sentencia -> print_withoutvalue','sentencia',1,'p_sentencia','syntax_analyzer.py',38),
  ('sentencia -> def_function','sentencia',1,'p_sentencia','syntax_analyzer.py',39),
  ('sentencia -> call_function','sentencia',1,'p_sentencia','syntax_analyzer.py',40),
  ('sentencia -> input','sentencia',1,'p_sentencia','syntax_analyzer.py',41),
  ('sentencia -> assignment','sentencia',1,'p_sentencia','syntax_analyzer.py',42),
  ('sentencia -> short_assignment','sentencia',1,'p_sentencia','syntax_analyzer.py',43),
  ('sentencia -> arithmetic_operation','sentencia',1,'p_sentencia','syntax_analyzer.py',44),
  ('sentencia -> direct_arithmetic_operation','sentencia',1,'p_sentencia','syntax_analyzer.py',45),
  ('sentencia -> if_statement','sentencia',1,'p_sentencia','syntax_analyzer.py',46),
  ('sentencia -> function_call','sentencia',1,'p_sentencia','syntax_analyzer.py',47),
  ('sentencia -> switch_statement','sentencia',1,'p_sentencia','syntax_analyzer.py',48),
  ('for -> FOR LKEY loop_program RKEY','for',4,'p_for','syntax_analyzer.py',53),
  ('for -> FOR comparation_operation LKEY loop_program RKEY','for',5,'p_for','syntax_analyzer.py',54),
  ('for -> FOR short_assignment SEMICOLON comparation_operation SEMICOLON IDENTIFIER operator_for LKEY loop_program RKEY','for',10,'p_for','syntax_analyzer.py',55),
  ('operator_for -> INCREASE','operator_for',1,'p_operator_for','syntax_analyzer.py',58),
  ('operator_for -> DECREASE','operator_for',1,'p_operator_for','syntax_analyzer.py',59),
  ('function_call -> IDENTIFIER LPAREN values RPAREN','function_call',4,'p_function_call','syntax_analyzer.py',62),
  ('if_statement -> IF comparation_operation LKEY program RKEY','if_statement',5,'p_if_statement','syntax_analyzer.py',67),
  ('if_statement -> IF comparation_operation LKEY program RKEY conditions_elseif','if_statement',6,'p_if_statement','syntax_analyzer.py',68),
  ('if_statement -> IF comparation_operation LKEY program RKEY ELSE LKEY program RKEY','if_statement',9,'p_if_statement','syntax_analyzer.py',69),
  ('if_statement -> IF comparation_operation LKEY program RKEY conditions_elseif ELSE LKEY program RKEY','if_statement',10,'p_if_statement','syntax_analyzer.py',70),
  ('conditions_elseif -> else_if','conditions_elseif',1,'p_conditions_elseif','syntax_analyzer.py',75),
  ('conditions_elseif -> conditions_elseif else_if','conditions_elseif',2,'p_conditions_elseif','syntax_analyzer.py',76),
  ('else_if -> ELSE IF comparation_operation LKEY program RKEY','else_if',6,'p_else_if','syntax_analyzer.py',80),
  ('switch_statement -> SWITCH value LKEY switch_cases RKEY','switch_statement',5,'p_switch_statement','syntax_analyzer.py',85),
  ('switch_statement -> SWITCH LKEY switch_cases RKEY','switch_statement',4,'p_switch_statement','syntax_analyzer.py',86),
  ('switch_statement -> SWITCH switch_expression LKEY switch_cases RKEY','switch_statement',5,'p_switch_statement','syntax_analyzer.py',87),
  ('switch_statement -> SWITCH value LKEY switch_cases DEFAULT COLON statements RKEY','switch_statement',8,'p_switch_statement','syntax_analyzer.py',88),
  ('switch_statement -> SWITCH LKEY switch_cases DEFAULT COLON statements RKEY','switch_statement',7,'p_switch_statement','syntax_analyzer.py',89),
  ('switch_statement -> SWITCH switch_expression LKEY switch_cases DEFAULT COLON statements RKEY','switch_statement',8,'p_switch_statement','syntax_analyzer.py',90),
  ('switch_expression -> value','switch_expression',1,'p_switch_expression','syntax_analyzer.py',95),
  ('switch_expression -> <empty>','switch_expression',0,'p_switch_expression','syntax_analyzer.py',96),
  ('switch_cases -> switch_case switch_cases','switch_cases',2,'p_switch_cases','syntax_analyzer.py',101),
  ('switch_cases -> <empty>','switch_cases',0,'p_switch_cases','syntax_analyzer.py',102),
  ('switch_case -> CASE usable_value COLON statements','switch_case',4,'p_switch_case','syntax_analyzer.py',107),
  ('switch_case -> CASE COLON statements','switch_case',3,'p_switch_case','syntax_analyzer.py',108),
  ('switch_case -> IDENTIFIER COLON statements','switch_case',3,'p_switch_case','syntax_analyzer.py',109),
  ('switch_case -> switch_expression COLON statements','switch_case',3,'p_switch_case','syntax_analyzer.py',110),
  ('statements -> statement statements','statements',2,'p_statements','syntax_analyzer.py',115),
  ('statements -> <empty>','statements',0,'p_statements','syntax_analyzer.py',116),
  ('statement -> print','statement',1,'p_statement','syntax_analyzer.py',121),
  ('statement -> print_withoutvalue','statement',1,'p_statement','syntax_analyzer.py',122),
  ('statement -> call_function','statement',1,'p_statement','syntax_analyzer.py',123),
  ('statement -> input','statement',1,'p_statement','syntax_analyzer.py',124),
  ('statement -> assignment','statement',1,'p_statement','syntax_analyzer.py',125),
  ('statement -> short_assignment','statement',1,'p_statement','syntax_analyzer.py',126),
  ('statement -> arithmetic_operation','statement',1,'p_statement','syntax_analyzer.py',127),
  ('statement -> direct_arithmetic_operation','statement',1,'p_statement','syntax_analyzer.py',128),
  ('statement -> if_statement','statement',1,'p_statement','syntax_analyzer.py',129),
  ('statement -> function_call','statement',1,'p_statement','syntax_analyzer.py',130),
  ('statement -> switch_statement','statement',1,'p_statement','syntax_analyzer.py',131),
  ('print -> FMT_LIBRARY DOT PRINTLN LPAREN data RPAREN','print',6,'p_print','syntax_analyzer.py',147),
  ('print -> FMT_LIBRARY DOT PRINTF LPAREN value RPAREN','print',6,'p_print','syntax_analyzer.py',148),
  ('print -> FMT_LIBRARY DOT PRINTF LPAREN value COMMA RPAREN','print',7,'p_print','syntax_analyzer.py',149),
  ('print -> FMT_LIBRARY DOT PRINTF LPAREN value COMMA data RPAREN','print',8,'p_print','syntax_analyzer.py',150),
  ('data -> value','data',1,'p_data','syntax_analyzer.py',153),
  ('data -> IDENTIFIER','data',1,'p_data','syntax_analyzer.py',154),
  ('data -> data COMMA value','data',3,'p_data','syntax_analyzer.py',155),
  ('data -> data COMMA IDENTIFIER','data',3,'p_data','syntax_analyzer.py',156),
  ('print_withoutvalue -> FMT_LIBRARY DOT PRINTLN LPAREN RPAREN','print_withoutvalue',5,'p_print_withoutvalue','syntax_analyzer.py',159),
  ('print_withoutvalue -> FMT_LIBRARY DOT PRINTF LPAREN RPAREN','print_withoutvalue',5,'p_print_withoutvalue','syntax_analyzer.py',160),
  ('assignment_semantic -> VAR IDENTIFIER INTEGER_DATA_TYPE EQUAL INTEGER','assignment_semantic',5,'p_assignment_semantic','syntax_analyzer.py',165),
  ('assignment_semantic -> CONST IDENTIFIER INTEGER_DATA_TYPE EQUAL INTEGER','assignment_semantic',5,'p_assignment_semantic','syntax_analyzer.py',166),
  ('assignment_semantic -> VAR IDENTIFIER FLOAT_DATA_TYPE EQUAL FLOAT','assignment_semantic',5,'p_assignment_semantic','syntax_analyzer.py',167),
  ('assignment_semantic -> CONST IDENTIFIER FLOAT_DATA_TYPE EQUAL FLOAT','assignment_semantic',5,'p_assignment_semantic','syntax_analyzer.py',168),
  ('assignment_semantic -> VAR IDENTIFIER STRING_DATA_TYPE EQUAL STRING','assignment_semantic',5,'p_assignment_semantic','syntax_analyzer.py',169),
  ('assignment_semantic -> CONST IDENTIFIER STRING_DATA_TYPE EQUAL STRING','assignment_semantic',5,'p_assignment_semantic','syntax_analyzer.py',170),
  ('assignment_semantic -> VAR IDENTIFIER BOOLEAN_DATA_TYPE EQUAL BOOLEAN','assignment_semantic',5,'p_assignment_semantic','syntax_analyzer.py',171),
  ('assignment_semantic -> CONST IDENTIFIER BOOLEAN_DATA_TYPE EQUAL BOOLEAN','assignment_semantic',5,'p_assignment_semantic','syntax_analyzer.py',172),
  ('assignment -> VAR IDENTIFIER data_type EQUAL usable_value','assignment',5,'p_assignment','syntax_analyzer.py',174),
  ('assignment -> CONST IDENTIFIER data_type EQUAL usable_value','assignment',5,'p_assignment','syntax_analyzer.py',175),
  ('short_assignment -> IDENTIFIER SHORT_VAR_DECL usable_value','short_assignment',3,'p_short_assignment','syntax_analyzer.py',178),
  ('usable_value -> value','usable_value',1,'p_usable_value','syntax_analyzer.py',181),
  ('usable_value -> call_function','usable_value',1,'p_usable_value','syntax_analyzer.py',182),
  ('usable_value -> IDENTIFIER','usable_value',1,'p_usable_value','syntax_analyzer.py',183),
  ('usable_value -> arithmetic_operation','usable_value',1,'p_usable_value','syntax_analyzer.py',184),
  ('usable_value -> comparation_operation','usable_value',1,'p_usable_value','syntax_analyzer.py',185),
  ('direct_arithmetic_operation -> IDENTIFIER PLUS_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',191),
  ('direct_arithmetic_operation -> IDENTIFIER MINUS_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',192),
  ('direct_arithmetic_operation -> IDENTIFIER TIMES_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',193),
  ('direct_arithmetic_operation -> IDENTIFIER DIVIDE_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',194),
  ('direct_arithmetic_operation -> IDENTIFIER MODULO_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',195),
  ('direct_arithmetic_operation -> IDENTIFIER BITWISE_AND_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',196),
  ('direct_arithmetic_operation -> IDENTIFIER BITWISE_OR_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',197),
  ('direct_arithmetic_operation -> IDENTIFIER BITWISE_XOR_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',198),
  ('direct_arithmetic_operation -> IDENTIFIER LEFT_SHIFT_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',199),
  ('direct_arithmetic_operation -> IDENTIFIER RIGHT_SHIFT_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',200),
  ('arithmetic_operation -> usable_value PLUS usable_value','arithmetic_operation',3,'p_arithmetic_operation','syntax_analyzer.py',205),
  ('arithmetic_operation -> usable_value MINUS usable_value','arithmetic_operation',3,'p_arithmetic_operation','syntax_analyzer.py',206),
  ('arithmetic_operation -> usable_value DIVIDE usable_value','arithmetic_operation',3,'p_arithmetic_operation','syntax_analyzer.py',207),
  ('arithmetic_operation -> usable_value TIMES usable_value','arithmetic_operation',3,'p_arithmetic_operation','syntax_analyzer.py',208),
  ('arithmetic_operation -> usable_value ENTERE_DIVIDE usable_value','arithmetic_operation',3,'p_arithmetic_operation','syntax_analyzer.py',209),
  ('arithmetic_operation -> usable_value MODULE usable_value','arithmetic_operation',3,'p_arithmetic_operation','syntax_analyzer.py',210),
  ('comparation_operation -> usable_value EQUALEQUAL usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',218),
  ('comparation_operation -> usable_value NOT_EQUAL usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',219),
  ('comparation_operation -> usable_value LESS_EQUAL usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',220),
  ('comparation_operation -> usable_value GREATER_EQUAL usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',221),
  ('comparation_operation -> usable_value LESS usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',222),
  ('comparation_operation -> usable_value GREATER usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',223),
  ('comparation_operation -> usable_value LOGICAL_AND usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',224),
  ('comparation_operation -> usable_value LOGICAL_OR usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',225),
  ('identifiers -> IDENTIFIER','identifiers',1,'p_identifiers','syntax_analyzer.py',230),
  ('identifiers -> identifiers COMMA identifiers','identifiers',3,'p_identifiers','syntax_analyzer.py',231),
  ('rule_comparation -> IDENTIFIER EQUALEQUAL value','rule_comparation',3,'p_rule_comparation','syntax_analyzer.py',235),
  ('rule_comparation -> IDENTIFIER NOT_EQUAL value','rule_comparation',3,'p_rule_comparation','syntax_analyzer.py',236),
  ('rule_comparation -> IDENTIFIER LESS_EQUAL value','rule_comparation',3,'p_rule_comparation','syntax_analyzer.py',237),
  ('rule_comparation -> IDENTIFIER GREATER_EQUAL value','rule_comparation',3,'p_rule_comparation','syntax_analyzer.py',238),
  ('rule_comparation -> IDENTIFIER LESS value','rule_comparation',3,'p_rule_comparation','syntax_analyzer.py',239),
  ('rule_comparation -> IDENTIFIER GREATER value','rule_comparation',3,'p_rule_comparation','syntax_analyzer.py',240),
  ('rule_comparation -> IDENTIFIER LOGICAL_AND value','rule_comparation',3,'p_rule_comparation','syntax_analyzer.py',241),
  ('rule_comparation -> IDENTIFIER LOGICAL_OR value','rule_comparation',3,'p_rule_comparation','syntax_analyzer.py',242),
  ('condition -> value comparation_operation value','condition',3,'p_condition','syntax_analyzer.py',246),
  ('condition -> condition LOGICAL_AND condition','condition',3,'p_condition','syntax_analyzer.py',247),
  ('condition -> condition LOGICAL_OR condition','condition',3,'p_condition','syntax_analyzer.py',248),
  ('condition -> LOGICAL_NOT condition','condition',2,'p_condition','syntax_analyzer.py',249),
  ('def_function -> FUNC IDENTIFIER LPAREN parameters RPAREN LKEY func_program RKEY','def_function',8,'p_def_function','syntax_analyzer.py',256),
  ('def_function -> FUNC IDENTIFIER LPAREN parameters RPAREN data_type LKEY func_program RKEY','def_function',9,'p_def_function','syntax_analyzer.py',257),
  ('def_function -> FUNC FMT_LIBRARY DOT PRINTF LPAREN FMT_FORMAT_STRING COMMA data RPAREN LKEY func_program RKEY','def_function',12,'p_def_function','syntax_analyzer.py',258),
  ('def_function -> FUNC FMT_LIBRARY DOT PRINTF LPAREN FMT_FORMAT_STRING COMMA data COMMA RPAREN LKEY func_program RKEY','def_function',13,'p_def_function','syntax_analyzer.py',259),
  ('def_function -> FUNC FMT_LIBRARY DOT PRINTF LPAREN FMT_FORMAT_STRING COMMA IDENTIFIER RPAREN LKEY func_program RKEY','def_function',12,'p_def_function','syntax_analyzer.py',260),
  ('def_function -> FUNC FMT_LIBRARY DOT PRINTF LPAREN FMT_FORMAT_STRING COMMA IDENTIFIER COMMA RPAREN LKEY func_program RKEY','def_function',13,'p_def_function','syntax_analyzer.py',261),
  ('def_function -> FUNC FMT_LIBRARY DOT PRINTF LPAREN FMT_FORMAT_STRING COMMA FLOAT RPAREN LKEY func_program RKEY','def_function',12,'p_def_function','syntax_analyzer.py',262),
  ('def_function -> FUNC FMT_LIBRARY DOT PRINTF LPAREN FMT_FORMAT_STRING COMMA FLOAT COMMA RPAREN LKEY func_program RKEY','def_function',13,'p_def_function','syntax_analyzer.py',263),
  ('def_function -> FUNC FMT_LIBRARY DOT PRINTF LPAREN FMT_FORMAT_STRING COMMA INTEGER RPAREN LKEY func_program RKEY','def_function',12,'p_def_function','syntax_analyzer.py',264),
  ('def_function -> FUNC FMT_LIBRARY DOT PRINTF LPAREN FMT_FORMAT_STRING COMMA INTEGER COMMA RPAREN LKEY func_program RKEY','def_function',13,'p_def_function','syntax_analyzer.py',265),
  ('def_function -> FUNC FMT_LIBRARY DOT PRINTF LPAREN FMT_FORMAT_STRING COMMA BOOLEAN RPAREN LKEY func_program RKEY','def_function',12,'p_def_function','syntax_analyzer.py',266),
  ('def_function -> FUNC FMT_LIBRARY DOT PRINTF LPAREN FMT_FORMAT_STRING COMMA BOOLEAN COMMA RPAREN LKEY func_program RKEY','def_function',13,'p_def_function','syntax_analyzer.py',267),
  ('def_function -> FUNC FMT_LIBRARY DOT PRINTF LPAREN FMT_FORMAT_STRING COMMA IDENTIFIER COMMA FLOAT RPAREN LKEY func_program RKEY','def_function',14,'p_def_function','syntax_analyzer.py',268),
  ('def_function -> FUNC FMT_LIBRARY DOT PRINTF LPAREN FMT_FORMAT_STRING COMMA IDENTIFIER COMMA FLOAT COMMA RPAREN LKEY func_program RKEY','def_function',15,'p_def_function','syntax_analyzer.py',269),
  ('def_function -> FUNC FMT_LIBRARY DOT PRINTF LPAREN FMT_FORMAT_STRING COMMA IDENTIFIER COMMA INTEGER RPAREN LKEY func_program RKEY','def_function',14,'p_def_function','syntax_analyzer.py',270),
  ('def_function -> FUNC FMT_LIBRARY DOT PRINTF LPAREN FMT_FORMAT_STRING COMMA IDENTIFIER COMMA INTEGER COMMA RPAREN LKEY func_program RKEY','def_function',15,'p_def_function','syntax_analyzer.py',271),
  ('def_function -> FUNC FMT_LIBRARY DOT PRINTF LPAREN FMT_FORMAT_STRING COMMA IDENTIFIER COMMA BOOLEAN RPAREN LKEY func_program RKEY','def_function',14,'p_def_function','syntax_analyzer.py',272),
  ('def_function -> FUNC FMT_LIBRARY DOT PRINTF LPAREN FMT_FORMAT_STRING COMMA IDENTIFIER COMMA BOOLEAN COMMA RPAREN LKEY func_program RKEY','def_function',15,'p_def_function','syntax_analyzer.py',273),
  ('call_function -> IDENTIFIER LPAREN values RPAREN','call_function',4,'p_call_funcion','syntax_analyzer.py',277),
  ('parameters -> parameter','parameters',1,'p_parameters','syntax_analyzer.py',280),
  ('parameters -> parameters COMMA parameter','parameters',3,'p_parameters','syntax_analyzer.py',281),
  ('parameter -> IDENTIFIER data_type','parameter',2,'p_parameter','syntax_analyzer.py',286),
  ('values -> value','values',1,'p_values','syntax_analyzer.py',289),
  ('values -> values COMMA value','values',3,'p_values','syntax_analyzer.py',290),
  ('value -> STRING','value',1,'p_value','syntax_analyzer.py',294),
  ('value -> INTEGER','value',1,'p_value','syntax_analyzer.py',295),
  ('value -> FLOAT','value',1,'p_value','syntax_analyzer.py',296),
  ('value -> BOOLEAN','value',1,'p_value','syntax_analyzer.py',297),
  ('value -> IDENTIFIER','value',1,'p_value','syntax_analyzer.py',298),
  ('data_type -> INTEGER_DATA_TYPE','data_type',1,'p_data_type','syntax_analyzer.py',301),
  ('data_type -> FLOAT_DATA_TYPE','data_type',1,'p_data_type','syntax_analyzer.py',302),
  ('data_type -> BOOLEAN_DATA_TYPE','data_type',1,'p_data_type','syntax_analyzer.py',303),
  ('data_type -> STRING_DATA_TYPE','data_type',1,'p_data_type','syntax_analyzer.py',304),
  ('input -> INPUT LPAREN RPAREN','input',3,'p_input','syntax_analyzer.py',308),
  ('input -> INPUT LPAREN value RPAREN','input',4,'p_input','syntax_analyzer.py',309),
  ('input -> INPUT LPAREN identifiers RPAREN','input',4,'p_input','syntax_analyzer.py',310),
]
