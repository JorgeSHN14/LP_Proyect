
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

<<<<<<< HEAD
_lr_signature = 'AMPERSAND AND ARROW_FUNCTION_TYPE ARROW_SEND_RECEIVE AS ASSERT BITWISE_AND_EQ BITWISE_OR_EQ BITWISE_XOR BITWISE_XOR_ASSIGN BITWISE_XOR_EQ BOOLEAN BOOLEAN_DATA_TYPE BREAK CASE CLASS COLON COMMA COMMENT COMMENT_MULTI CONST CONTINUE DECREASE DEFAULT DEL DIVIDE DIVIDE_EQ DOT ELIF ELLIPSIS ELSE ENTERE_DIVIDE EQUAL EQUALEQUAL EXCEPT FALSE FAT_ARROW FINALLY FLOAT FLOAT_DATA_TYPE FMT_LIBRARY FOR FROM FUNC GLOBAL GREATER GREATER_EQUAL GREATER_THAN HEX_NUMBER IDENTIFIER IF IMPORT IN INCREASE INPUT INTEGER INTEGER_DATA_TYPE IS LAMBDA LBRACKET LEFT_SHIFT_EQ LESS LESS_EQUAL LESS_THAN LKEY LOGICAL_AND LOGICAL_NOT LOGICAL_OR LPAREN MINUS MINUS_EQ MODULE MODULO_EQ NONE NONLOCAL NOT NOT_EQUAL NULL OR PASS PIPE PLUS PLUS_EQ PRINTF PRINTLN RAISE RBRACKET RETURN RIGHT_SHIFT_EQ RKEY RPAREN SCIENTIFIC_NOTATION SEMICOLON SHORT_VAR_DECL STRING STRING_DATA_TYPE SWITCH TIMES TIMES_EQ TRUE TRY VAR WITH YIELD loop_program : program\n                  | loop_reserved\n                  | loop_program program\n                  | loop_program loop_reserved\n   func_program : program\n                  | RETURN\n                  | RETURN usable_value\n                  | func_program program\n                  | func_program RETURN\n                  | func_program RETURN usable_value\n  program : sentencia\n             | loop\n             | program sentencia\n             | program loop\n   loop_reserved : BREAK\n                  | CONTINUE\n                  | PASS\n  loop : for\n  sentencia : print\n               | print_withoutvalue\n               | def_function\n               | call_function\n               | input\n               | assignment\n               | short_assignment\n               | arithmetic_operation\n               | direct_arithmetic_operation\n               | if_statement\n               | function_call\n               | switch_statementfor : FOR LKEY loop_program RKEY\n         | FOR comparation_operation LKEY loop_program RKEY\n         | FOR short_assignment SEMICOLON comparation_operation SEMICOLON IDENTIFIER operator_for LKEY loop_program RKEYoperator_for : INCREASE\n                   | DECREASEfunction_call : IDENTIFIER LPAREN values RPARENif_statement : IF comparation_operation LKEY program RKEY\n                    | IF comparation_operation LKEY program RKEY conditions_elseif\n                    | IF comparation_operation LKEY program RKEY ELSE LKEY program RKEY\n                    | IF comparation_operation LKEY program RKEY conditions_elseif ELSE LKEY program RKEY\n    conditions_elseif : else_if\n                        | conditions_elseif else_if\n   else_if : ELSE IF comparation_operation LKEY program RKEY\n   \n    switch_statement : SWITCH value LKEY switch_cases RKEY\n                     | SWITCH LKEY switch_cases RKEY\n                     | SWITCH switch_expression LKEY switch_cases RKEY\n                     | SWITCH value LKEY switch_cases DEFAULT COLON statements RKEY\n                     | SWITCH LKEY switch_cases DEFAULT COLON statements RKEY\n                     | SWITCH switch_expression LKEY switch_cases DEFAULT COLON statements RKEY\n    \n    switch_expression : value\n                      |\n    \n    switch_cases : switch_case switch_cases\n                 |\n    \n    switch_case : CASE usable_value COLON statements\n               | CASE COLON statements\n               | IDENTIFIER COLON statements\n               | switch_expression COLON statements\n    \n    statements : statement statements\n               |\n    \n    statement : print\n               | print_withoutvalue\n               | call_function\n               | input\n               | assignment\n               | short_assignment\n               | arithmetic_operation\n               | direct_arithmetic_operation\n               | if_statement\n               | function_call\n               | switch_statement\n               print : FMT_LIBRARY DOT PRINTLN LPAREN data RPAREN\n           | FMT_LIBRARY DOT PRINTF LPAREN value RPAREN\n           | FMT_LIBRARY DOT PRINTF LPAREN value COMMA RPAREN\n           | FMT_LIBRARY DOT PRINTF LPAREN value COMMA data RPARENdata : value\n         | IDENTIFIER\n         | data COMMA value\n         | data COMMA IDENTIFIERprint_withoutvalue : FMT_LIBRARY DOT PRINTLN LPAREN RPAREN\n            | FMT_LIBRARY DOT PRINTF LPAREN RPARENassignment : VAR IDENTIFIER data_type EQUAL usable_value\n                | CONST IDENTIFIER data_type EQUAL usable_valueshort_assignment : IDENTIFIER SHORT_VAR_DECL usable_value usable_value : value\n                 | call_function\n                 | IDENTIFIER\n                 | arithmetic_operation\n                 | comparation_operation\n  \n  direct_arithmetic_operation : IDENTIFIER PLUS_EQ value\n                      | IDENTIFIER MINUS_EQ value\n                      | IDENTIFIER TIMES_EQ value\n                      | IDENTIFIER DIVIDE_EQ value\n                      | IDENTIFIER MODULO_EQ value\n                      | IDENTIFIER BITWISE_AND_EQ value\n                      | IDENTIFIER BITWISE_OR_EQ value\n                      | IDENTIFIER BITWISE_XOR_EQ value\n                      | IDENTIFIER LEFT_SHIFT_EQ value\n                      | IDENTIFIER RIGHT_SHIFT_EQ value\n  \n  arithmetic_operation : usable_value PLUS usable_value\n                      | usable_value MINUS usable_value\n                      | usable_value DIVIDE usable_value\n                      | usable_value TIMES usable_value\n                      | usable_value ENTERE_DIVIDE usable_value\n                      | usable_value MODULE usable_value\n  \n    comparation_operation : usable_value EQUALEQUAL usable_value\n                        | usable_value NOT_EQUAL usable_value\n                        | usable_value LESS_EQUAL usable_value\n                        | usable_value GREATER_EQUAL usable_value\n                        | usable_value LESS usable_value\n                        | usable_value GREATER usable_value\n                        | usable_value LOGICAL_AND usable_value\n                        | usable_value LOGICAL_OR usable_value\n    identifiers : IDENTIFIER\n                 | identifiers COMMA identifiersrule_comparation : IDENTIFIER EQUALEQUAL value\n                        | IDENTIFIER NOT_EQUAL value\n                        | IDENTIFIER LESS_EQUAL value\n                        | IDENTIFIER GREATER_EQUAL value\n                        | IDENTIFIER LESS value\n                        | IDENTIFIER GREATER value\n                        | IDENTIFIER LOGICAL_AND value\n                        | IDENTIFIER LOGICAL_OR value\n    condition : value comparation_operation value\n              | condition LOGICAL_AND condition\n              | condition LOGICAL_OR condition\n              | LOGICAL_NOT condition\n    def_function : FUNC IDENTIFIER LPAREN parameters RPAREN LKEY func_program RKEY\n                  | FUNC IDENTIFIER LPAREN parameters RPAREN data_type LKEY func_program RKEYcall_function : IDENTIFIER LPAREN values RPARENparameters : parameter\n                | parameters COMMA parameter parameter : IDENTIFIER data_typevalues : value\n            | values COMMA valuevalue : STRING\n          | INTEGER\n          | FLOAT\n          | BOOLEAN\n          | IDENTIFIERdata_type : INTEGER_DATA_TYPE\n               | FLOAT_DATA_TYPE\n               | BOOLEAN_DATA_TYPE\n               | STRING_DATA_TYPEinput : INPUT LPAREN RPAREN\n             | INPUT LPAREN value RPAREN\n             | INPUT LPAREN identifiers RPAREN\n    '
    
_lr_action_items = {'BREAK':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,31,34,35,36,37,38,39,40,41,75,76,77,81,82,91,92,93,94,95,96,97,98,99,100,101,102,111,112,113,114,115,116,117,118,119,120,121,122,123,124,136,137,144,146,147,154,162,163,166,170,177,178,179,180,181,200,202,204,206,211,213,222,229,233,238,239,247,248,249,251,254,255,256,258,259,],[6,6,-1,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-84,-88,-135,-136,-137,-138,-3,-4,-13,-14,-85,-86,-87,-139,6,-83,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-144,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,6,6,-36,-145,-146,-45,-31,6,-79,-80,-81,-82,-37,-129,-44,-46,-32,-71,-72,-38,-41,-73,-42,-48,-74,-127,-47,-49,6,-128,-39,6,-40,-33,-43,]),'CONTINUE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,31,34,35,36,37,38,39,40,41,75,76,77,81,82,91,92,93,94,95,96,97,98,99,100,101,102,111,112,113,114,115,116,117,118,119,120,121,122,123,124,136,137,144,146,147,154,162,163,166,170,177,178,179,180,181,200,202,204,206,211,213,222,229,233,238,239,247,248,249,251,254,255,256,258,259,],[7,7,-1,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-84,-88,-135,-136,-137,-138,-3,-4,-13,-14,-85,-86,-87,-139,7,-83,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-144,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,7,7,-36,-145,-146,-45,-31,7,-79,-80,-81,-82,-37,-129,-44,-46,-32,-71,-72,-38,-41,-73,-42,-48,-74,-127,-47,-49,7,-128,-39,7,-40,-33,-43,]),'PASS':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,31,34,35,36,37,38,39,40,41,75,76,77,81,82,91,92,93,94,95,96,97,98,99,100,101,102,111,112,113,114,115,116,117,118,119,120,121,122,123,124,136,137,144,146,147,154,162,163,166,170,177,178,179,180,181,200,202,204,206,211,213,222,229,233,238,239,247,248,249,251,254,255,256,258,259,],[8,8,-1,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-84,-88,-135,-136,-137,-138,-3,-4,-13,-14,-85,-86,-87,-139,8,-83,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-144,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,8,8,-36,-145,-146,-45,-31,8,-79,-80,-81,-82,-37,-129,-44,-46,-32,-71,-72,-38,-41,-73,-42,-48,-74,-127,-47,-49,8,-128,-39,8,-40,-33,-43,]),'FMT_LIBRARY':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,31,34,35,36,37,38,39,40,41,75,76,77,81,82,91,92,93,94,95,96,97,98,99,100,101,102,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,136,137,144,146,147,151,154,158,159,160,162,163,166,170,177,178,179,180,181,183,184,186,187,188,189,190,191,192,193,194,195,196,197,200,202,204,206,208,211,213,214,218,222,224,225,226,227,229,231,233,238,239,240,241,242,243,244,246,247,248,249,250,251,252,253,254,255,256,257,258,259,],[22,22,22,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-84,-88,-135,-136,-137,-138,22,-4,-13,-14,-85,-86,-87,-139,22,-83,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-144,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,22,22,22,-36,-145,-146,22,-45,22,22,22,-31,22,-79,-80,-81,-82,-37,-129,-44,22,22,22,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-46,-32,-71,-72,22,-38,-41,22,22,-73,22,22,-6,22,-42,22,-48,-74,-127,22,-9,-7,22,22,22,-47,-49,22,-10,-128,22,22,-39,22,-40,22,-33,-43,]),'FUNC':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,31,34,35,36,37,38,39,40,41,75,76,77,81,82,91,92,93,94,95,96,97,98,99,100,101,102,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,136,137,144,146,147,151,154,162,163,166,170,177,178,179,180,181,200,202,204,206,208,211,213,222,224,225,226,227,229,231,233,238,239,240,241,242,243,244,246,247,248,249,250,251,252,253,254,255,256,257,258,259,],[24,24,24,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-84,-88,-135,-136,-137,-138,24,-4,-13,-14,-85,-86,-87,-139,24,-83,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-144,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,24,24,24,-36,-145,-146,24,-45,-31,24,-79,-80,-81,-82,-37,-129,-44,-46,-32,-71,-72,24,-38,-41,-73,24,24,-6,24,-42,24,-48,-74,-127,24,-9,-7,24,24,24,-47,-49,24,-10,-128,24,24,-39,24,-40,24,-33,-43,]),'IDENTIFIER':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,27,29,30,31,32,33,34,35,36,37,38,39,40,41,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,75,76,77,79,81,82,88,91,92,93,94,95,96,97,98,99,100,101,102,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,130,131,135,136,137,138,139,140,144,145,146,147,148,149,150,151,154,158,159,160,162,163,166,170,173,177,178,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,202,203,204,205,206,207,208,211,213,214,216,217,218,222,224,225,226,227,229,230,231,233,238,239,240,241,242,243,244,246,247,248,249,250,251,252,253,254,255,256,257,258,259,],[25,25,25,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-84,43,57,72,76,-88,81,85,-135,-136,-137,-138,25,-4,-13,-14,81,76,81,81,81,81,81,81,81,81,81,81,105,76,76,76,76,76,76,76,76,76,76,76,76,76,76,-85,-86,-87,132,-139,25,141,-83,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-144,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,25,81,132,132,76,132,25,25,76,168,81,-36,81,-145,-146,176,76,76,25,-45,25,25,25,-31,25,-79,-80,141,-81,-82,-37,-129,-44,25,25,-55,25,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-56,-57,-46,-32,219,-71,221,-72,168,25,-38,-41,25,-54,-58,25,-73,25,25,76,25,-42,76,25,-48,-74,-127,25,76,-7,25,25,25,-47,-49,25,-10,-128,25,25,-39,25,-40,25,-33,-43,]),'INPUT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,31,34,35,36,37,38,39,40,41,75,76,77,81,82,91,92,93,94,95,96,97,98,99,100,101,102,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,136,137,144,146,147,151,154,158,159,160,162,163,166,170,177,178,179,180,181,183,184,186,187,188,189,190,191,192,193,194,195,196,197,200,202,204,206,208,211,213,214,218,222,224,225,226,227,229,231,233,238,239,240,241,242,243,244,246,247,248,249,250,251,252,253,254,255,256,257,258,259,],[26,26,26,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-84,-88,-135,-136,-137,-138,26,-4,-13,-14,-85,-86,-87,-139,26,-83,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-144,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,26,26,26,-36,-145,-146,26,-45,26,26,26,-31,26,-79,-80,-81,-82,-37,-129,-44,26,26,26,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-46,-32,-71,-72,26,-38,-41,26,26,-73,26,26,-6,26,-42,26,-48,-74,-127,26,-9,-7,26,26,26,-47,-49,26,-10,-128,26,26,-39,26,-40,26,-33,-43,]),'VAR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,31,34,35,36,37,38,39,40,41,75,76,77,81,82,91,92,93,94,95,96,97,98,99,100,101,102,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,136,137,144,146,147,151,154,158,159,160,162,163,166,170,177,178,179,180,181,183,184,186,187,188,189,190,191,192,193,194,195,196,197,200,202,204,206,208,211,213,214,218,222,224,225,226,227,229,231,233,238,239,240,241,242,243,244,246,247,248,249,250,251,252,253,254,255,256,257,258,259,],[27,27,27,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-84,-88,-135,-136,-137,-138,27,-4,-13,-14,-85,-86,-87,-139,27,-83,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-144,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,27,27,27,-36,-145,-146,27,-45,27,27,27,-31,27,-79,-80,-81,-82,-37,-129,-44,27,27,27,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-46,-32,-71,-72,27,-38,-41,27,27,-73,27,27,-6,27,-42,27,-48,-74,-127,27,-9,-7,27,27,27,-47,-49,27,-10,-128,27,27,-39,27,-40,27,-33,-43,]),'CONST':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,31,34,35,36,37,38,39,40,41,75,76,77,81,82,91,92,93,94,95,96,97,98,99,100,101,102,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,136,137,144,146,147,151,154,158,159,160,162,163,166,170,177,178,179,180,181,183,184,186,187,188,189,190,191,192,193,194,195,196,197,200,202,204,206,208,211,213,214,218,222,224,225,226,227,229,231,233,238,239,240,241,242,243,244,246,247,248,249,250,251,252,253,254,255,256,257,258,259,],[29,29,29,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-84,-88,-135,-136,-137,-138,29,-4,-13,-14,-85,-86,-87,-139,29,-83,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-144,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,29,29,29,-36,-145,-146,29,-45,29,29,29,-31,29,-79,-80,-81,-82,-37,-129,-44,29,29,29,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-46,-32,-71,-72,29,-38,-41,29,29,-73,29,29,-6,29,-42,29,-48,-74,-127,29,-9,-7,29,29,29,-47,-49,29,-10,-128,29,29,-39,29,-40,29,-33,-43,]),'IF':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,31,34,35,36,37,38,39,40,41,75,76,77,81,82,91,92,93,94,95,96,97,98,99,100,101,102,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,136,137,144,146,147,151,154,158,159,160,162,163,166,170,177,178,179,180,181,183,184,186,187,188,189,190,191,192,193,194,195,196,197,200,202,204,206,208,211,212,213,214,218,222,224,225,226,227,228,229,231,233,238,239,240,241,242,243,244,246,247,248,249,250,251,252,253,254,255,256,257,258,259,],[30,30,30,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-84,-88,-135,-136,-137,-138,30,-4,-13,-14,-85,-86,-87,-139,30,-83,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-144,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,30,30,30,-36,-145,-146,30,-45,30,30,30,-31,30,-79,-80,-81,-82,-37,-129,-44,30,30,30,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-46,-32,-71,-72,30,-38,230,-41,30,30,-73,30,30,-6,30,230,-42,30,-48,-74,-127,30,-9,-7,30,30,30,-47,-49,30,-10,-128,30,30,-39,30,-40,30,-33,-43,]),'SWITCH':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,31,34,35,36,37,38,39,40,41,75,76,77,81,82,91,92,93,94,95,96,97,98,99,100,101,102,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,136,137,144,146,147,151,154,158,159,160,162,163,166,170,177,178,179,180,181,183,184,186,187,188,189,190,191,192,193,194,195,196,197,200,202,204,206,208,211,213,214,218,222,224,225,226,227,229,231,233,238,239,240,241,242,243,244,246,247,248,249,250,251,252,253,254,255,256,257,258,259,],[32,32,32,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-84,-88,-135,-136,-137,-138,32,-4,-13,-14,-85,-86,-87,-139,32,-83,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-144,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,32,32,32,-36,-145,-146,32,-45,32,32,32,-31,32,-79,-80,-81,-82,-37,-129,-44,32,32,32,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-46,-32,-71,-72,32,-38,-41,32,32,-73,32,32,-6,32,-42,32,-48,-74,-127,32,-9,-7,32,32,32,-47,-49,32,-10,-128,32,32,-39,32,-40,32,-33,-43,]),'FOR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,31,34,35,36,37,38,39,40,41,75,76,77,81,82,91,92,93,94,95,96,97,98,99,100,101,102,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,136,137,144,146,147,151,154,162,163,166,170,177,178,179,180,181,200,202,204,206,208,211,213,222,224,225,226,227,229,231,233,238,239,240,241,242,243,244,246,247,248,249,250,251,252,253,254,255,256,257,258,259,],[33,33,33,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-84,-88,-135,-136,-137,-138,33,-4,-13,-14,-85,-86,-87,-139,33,-83,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-144,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,33,33,33,-36,-145,-146,33,-45,-31,33,-79,-80,-81,-82,-37,-129,-44,-46,-32,-71,-72,33,-38,-41,-73,33,33,-6,33,-42,33,-48,-74,-127,33,-9,-7,33,33,33,-47,-49,33,-10,-128,33,33,-39,33,-40,33,-33,-43,]),'STRING':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,30,31,32,33,34,35,36,37,38,39,40,41,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,75,76,77,79,81,82,91,92,93,94,95,96,97,98,99,100,101,102,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,130,131,135,136,137,138,139,140,144,145,146,147,149,150,151,154,158,159,160,162,163,166,170,177,178,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,202,204,205,206,207,208,211,213,214,216,217,218,222,224,225,226,227,229,230,231,233,238,239,240,241,242,243,244,246,247,248,249,250,251,252,253,254,255,256,257,258,259,],[34,34,34,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-84,34,-88,34,34,-135,-136,-137,-138,34,-4,-13,-14,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-85,-86,-87,34,-139,34,-83,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-144,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,34,34,34,34,34,34,34,34,34,34,34,-36,34,-145,-146,34,34,34,-45,34,34,34,-31,34,-79,-80,-81,-82,-37,-129,-44,34,34,-55,34,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-56,-57,-46,-32,-71,34,-72,34,34,-38,-41,34,-54,-58,34,-73,34,34,34,34,-42,34,34,-48,-74,-127,34,34,-7,34,34,34,-47,-49,34,-10,-128,34,34,-39,34,-40,34,-33,-43,]),'INTEGER':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,30,31,32,33,34,35,36,37,38,39,40,41,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,75,76,77,79,81,82,91,92,93,94,95,96,97,98,99,100,101,102,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,130,131,135,136,137,138,139,140,144,145,146,147,149,150,151,154,158,159,160,162,163,166,170,177,178,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,202,204,205,206,207,208,211,213,214,216,217,218,222,224,225,226,227,229,230,231,233,238,239,240,241,242,243,244,246,247,248,249,250,251,252,253,254,255,256,257,258,259,],[35,35,35,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-84,35,-88,35,35,-135,-136,-137,-138,35,-4,-13,-14,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-85,-86,-87,35,-139,35,-83,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-144,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,35,35,35,35,35,35,35,35,35,35,35,-36,35,-145,-146,35,35,35,-45,35,35,35,-31,35,-79,-80,-81,-82,-37,-129,-44,35,35,-55,35,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-56,-57,-46,-32,-71,35,-72,35,35,-38,-41,35,-54,-58,35,-73,35,35,35,35,-42,35,35,-48,-74,-127,35,35,-7,35,35,35,-47,-49,35,-10,-128,35,35,-39,35,-40,35,-33,-43,]),'FLOAT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,30,31,32,33,34,35,36,37,38,39,40,41,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,75,76,77,79,81,82,91,92,93,94,95,96,97,98,99,100,101,102,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,130,131,135,136,137,138,139,140,144,145,146,147,149,150,151,154,158,159,160,162,163,166,170,177,178,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,202,204,205,206,207,208,211,213,214,216,217,218,222,224,225,226,227,229,230,231,233,238,239,240,241,242,243,244,246,247,248,249,250,251,252,253,254,255,256,257,258,259,],[36,36,36,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-84,36,-88,36,36,-135,-136,-137,-138,36,-4,-13,-14,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-85,-86,-87,36,-139,36,-83,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-144,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,36,36,36,36,36,36,36,36,36,36,36,-36,36,-145,-146,36,36,36,-45,36,36,36,-31,36,-79,-80,-81,-82,-37,-129,-44,36,36,-55,36,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-56,-57,-46,-32,-71,36,-72,36,36,-38,-41,36,-54,-58,36,-73,36,36,36,36,-42,36,36,-48,-74,-127,36,36,-7,36,36,36,-47,-49,36,-10,-128,36,36,-39,36,-40,36,-33,-43,]),'BOOLEAN':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,30,31,32,33,34,35,36,37,38,39,40,41,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,75,76,77,79,81,82,91,92,93,94,95,96,97,98,99,100,101,102,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,130,131,135,136,137,138,139,140,144,145,146,147,149,150,151,154,158,159,160,162,163,166,170,177,178,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,202,204,205,206,207,208,211,213,214,216,217,218,222,224,225,226,227,229,230,231,233,238,239,240,241,242,243,244,246,247,248,249,250,251,252,253,254,255,256,257,258,259,],[37,37,37,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-84,37,-88,37,37,-135,-136,-137,-138,37,-4,-13,-14,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-85,-86,-87,37,-139,37,-83,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-144,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,37,37,37,37,37,37,37,37,37,37,37,-36,37,-145,-146,37,37,37,-45,37,37,37,-31,37,-79,-80,-81,-82,-37,-129,-44,37,37,-55,37,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-56,-57,-46,-32,-71,37,-72,37,37,-38,-41,37,-54,-58,37,-73,37,37,37,37,-42,37,37,-48,-74,-127,37,37,-7,37,37,37,-47,-49,37,-10,-128,37,37,-39,37,-40,37,-33,-43,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,31,34,35,36,37,38,39,40,41,75,76,77,81,91,92,93,94,95,96,97,98,99,100,101,102,111,112,113,114,115,116,117,118,119,120,121,122,123,124,144,146,147,154,162,166,170,177,178,179,180,181,200,202,204,206,211,213,222,229,233,238,239,247,248,251,254,256,258,259,],[0,-1,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-84,-88,-135,-136,-137,-138,-3,-4,-13,-14,-85,-86,-87,-139,-83,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-144,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-36,-145,-146,-45,-31,-79,-80,-81,-82,-37,-129,-44,-46,-32,-71,-72,-38,-41,-73,-42,-48,-74,-127,-47,-49,-128,-39,-40,-33,-43,]),'RKEY':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,31,34,35,36,37,38,39,40,41,75,76,77,79,81,91,92,93,94,95,96,97,98,99,100,101,102,111,112,113,114,115,116,117,118,119,120,121,122,123,124,128,129,130,135,136,144,146,147,151,153,154,156,158,159,160,161,162,163,166,170,177,178,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,202,204,206,211,213,214,215,216,217,218,222,224,225,226,229,232,233,234,238,239,240,241,242,243,246,247,248,250,251,252,254,255,256,257,258,259,],[-1,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-84,-88,-135,-136,-137,-138,-3,-4,-13,-14,-85,-86,-87,-53,-139,-83,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-144,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-53,154,-53,-53,162,-36,-145,-146,179,181,-45,-52,-59,-59,-59,200,-31,202,-79,-80,-81,-82,-37,-129,-44,-59,-59,-55,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-56,-57,-46,-32,-71,-72,-38,-41,-59,233,-54,-58,-59,-73,239,-5,-6,-42,247,-48,248,-74,-127,-8,-9,-7,251,254,-47,-49,-10,-128,256,-39,258,-40,259,-33,-43,]),'RETURN':([4,5,9,10,11,12,13,14,15,16,17,18,19,20,21,23,31,34,35,36,37,40,41,75,76,77,81,91,92,93,94,95,96,97,98,99,100,101,102,111,112,113,114,115,116,117,118,119,120,121,122,123,124,144,146,147,154,162,166,170,177,178,179,180,181,200,202,204,206,208,211,213,222,224,225,226,227,229,233,238,239,240,241,242,243,247,248,250,251,254,256,258,259,],[-11,-12,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-84,-88,-135,-136,-137,-138,-13,-14,-85,-86,-87,-139,-83,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-144,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-36,-145,-146,-45,-31,-79,-80,-81,-82,-37,-129,-44,-46,-32,-71,-72,226,-38,-41,-73,241,-5,-6,226,-42,-48,-74,-127,-8,-9,-7,241,-47,-49,-10,-128,-39,-40,-33,-43,]),'PLUS':([12,16,23,25,28,31,34,35,36,37,73,74,75,76,77,83,85,91,111,112,113,114,115,116,117,118,119,120,121,122,123,124,144,157,164,177,178,180,189,193,242,245,250,],[-85,-87,-84,-86,58,-88,-135,-136,-137,-138,-88,58,-85,-86,-87,-88,-86,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-129,58,-88,58,58,-129,-85,-87,58,-88,58,]),'MINUS':([12,16,23,25,28,31,34,35,36,37,73,74,75,76,77,83,85,91,111,112,113,114,115,116,117,118,119,120,121,122,123,124,144,157,164,177,178,180,189,193,242,245,250,],[-85,-87,-84,-86,59,-88,-135,-136,-137,-138,-88,59,-85,-86,-87,-88,-86,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-129,59,-88,59,59,-129,-85,-87,59,-88,59,]),'DIVIDE':([12,16,23,25,28,31,34,35,36,37,73,74,75,76,77,83,85,91,111,112,113,114,115,116,117,118,119,120,121,122,123,124,144,157,164,177,178,180,189,193,242,245,250,],[-85,-87,-84,-86,60,-88,-135,-136,-137,-138,-88,60,-85,-86,-87,-88,-86,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-129,60,-88,60,60,-129,-85,-87,60,-88,60,]),'TIMES':([12,16,23,25,28,31,34,35,36,37,73,74,75,76,77,83,85,91,111,112,113,114,115,116,117,118,119,120,121,122,123,124,144,157,164,177,178,180,189,193,242,245,250,],[-85,-87,-84,-86,61,-88,-135,-136,-137,-138,-88,61,-85,-86,-87,-88,-86,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-129,61,-88,61,61,-129,-85,-87,61,-88,61,]),'ENTERE_DIVIDE':([12,16,23,25,28,31,34,35,36,37,73,74,75,76,77,83,85,91,111,112,113,114,115,116,117,118,119,120,121,122,123,124,144,157,164,177,178,180,189,193,242,245,250,],[-85,-87,-84,-86,62,-88,-135,-136,-137,-138,-88,62,-85,-86,-87,-88,-86,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-129,62,-88,62,62,-129,-85,-87,62,-88,62,]),'MODULE':([12,16,23,25,28,31,34,35,36,37,73,74,75,76,77,83,85,91,111,112,113,114,115,116,117,118,119,120,121,122,123,124,144,157,164,177,178,180,189,193,242,245,250,],[-85,-87,-84,-86,63,-88,-135,-136,-137,-138,-88,63,-85,-86,-87,-88,-86,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-129,63,-88,63,63,-129,-85,-87,63,-88,63,]),'EQUALEQUAL':([12,16,23,25,28,31,34,35,36,37,73,74,75,76,77,83,85,91,111,112,113,114,115,116,117,118,119,120,121,122,123,124,144,157,164,177,178,180,189,193,242,245,250,],[-85,-87,-84,-86,64,-88,-135,-136,-137,-138,-88,64,-85,-86,-87,-88,-86,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-129,64,-88,64,64,-129,-85,-87,64,-88,64,]),'NOT_EQUAL':([12,16,23,25,28,31,34,35,36,37,73,74,75,76,77,83,85,91,111,112,113,114,115,116,117,118,119,120,121,122,123,124,144,157,164,177,178,180,189,193,242,245,250,],[-85,-87,-84,-86,65,-88,-135,-136,-137,-138,-88,65,-85,-86,-87,-88,-86,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-129,65,-88,65,65,-129,-85,-87,65,-88,65,]),'LESS_EQUAL':([12,16,23,25,28,31,34,35,36,37,73,74,75,76,77,83,85,91,111,112,113,114,115,116,117,118,119,120,121,122,123,124,144,157,164,177,178,180,189,193,242,245,250,],[-85,-87,-84,-86,66,-88,-135,-136,-137,-138,-88,66,-85,-86,-87,-88,-86,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-129,66,-88,66,66,-129,-85,-87,66,-88,66,]),'GREATER_EQUAL':([12,16,23,25,28,31,34,35,36,37,73,74,75,76,77,83,85,91,111,112,113,114,115,116,117,118,119,120,121,122,123,124,144,157,164,177,178,180,189,193,242,245,250,],[-85,-87,-84,-86,67,-88,-135,-136,-137,-138,-88,67,-85,-86,-87,-88,-86,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-129,67,-88,67,67,-129,-85,-87,67,-88,67,]),'LESS':([12,16,23,25,28,31,34,35,36,37,73,74,75,76,77,83,85,91,111,112,113,114,115,116,117,118,119,120,121,122,123,124,144,157,164,177,178,180,189,193,242,245,250,],[-85,-87,-84,-86,68,-88,-135,-136,-137,-138,-88,68,-85,-86,-87,-88,-86,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-129,68,-88,68,68,-129,-85,-87,68,-88,68,]),'GREATER':([12,16,23,25,28,31,34,35,36,37,73,74,75,76,77,83,85,91,111,112,113,114,115,116,117,118,119,120,121,122,123,124,144,157,164,177,178,180,189,193,242,245,250,],[-85,-87,-84,-86,69,-88,-135,-136,-137,-138,-88,69,-85,-86,-87,-88,-86,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,-129,69,-88,69,69,-129,-85,-87,69,-88,69,]),'LOGICAL_AND':([12,16,23,25,28,31,34,35,36,37,73,74,75,76,77,83,85,91,111,112,113,114,115,116,117,118,119,120,121,122,123,124,144,157,164,177,178,180,189,193,242,245,250,],[-85,-87,-84,-86,70,-88,-135,-136,-137,-138,-88,70,-85,-86,-87,-88,-86,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,-129,70,-88,70,70,-129,-85,-87,70,-88,70,]),'LOGICAL_OR':([12,16,23,25,28,31,34,35,36,37,73,74,75,76,77,83,85,91,111,112,113,114,115,116,117,118,119,120,121,122,123,124,144,157,164,177,178,180,189,193,242,245,250,],[-85,-87,-84,-86,71,-88,-135,-136,-137,-138,-88,71,-85,-86,-87,-88,-86,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-129,71,-88,71,71,-129,-85,-87,71,-88,71,]),'DOT':([22,],[42,]),'SEMICOLON':([23,31,34,35,36,37,75,76,77,84,91,111,112,113,114,115,116,117,118,119,120,121,122,123,124,164,180,],[-84,-88,-135,-136,-137,-138,-85,-86,-87,138,-83,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,203,-129,]),'CASE':([23,31,34,35,36,37,75,76,77,79,81,91,92,93,94,95,96,97,98,99,100,101,102,111,112,113,114,115,116,117,118,119,120,121,122,123,124,128,130,135,144,146,147,154,158,159,160,166,170,177,178,179,180,181,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,204,206,211,213,216,217,222,229,233,238,247,248,254,256,259,],[-84,-88,-135,-136,-137,-138,-85,-86,-87,131,-139,-83,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-144,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,131,131,131,-36,-145,-146,-45,-59,-59,-59,-79,-80,-81,-82,-37,-129,-44,-59,-55,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-56,-57,-46,-71,-72,-38,-41,-54,-58,-73,-42,-48,-74,-47,-49,-39,-40,-43,]),'COLON':([23,31,34,35,36,37,75,76,77,79,81,91,92,93,94,95,96,97,98,99,100,101,102,111,112,113,114,115,116,117,118,119,120,121,122,123,124,128,130,131,132,133,134,135,144,146,147,154,155,157,158,159,160,166,170,177,178,179,180,181,182,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,204,206,211,213,216,217,222,229,233,238,247,248,254,256,259,],[-84,-88,-135,-136,-137,-138,-85,-86,-87,-51,-139,-83,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-144,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-51,-51,158,159,160,-50,-51,-36,-145,-146,-45,183,184,-59,-59,-59,-79,-80,-81,-82,-37,-129,-44,214,-59,-55,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-56,-57,-46,218,-71,-72,-38,-41,-54,-58,-73,-42,-48,-74,-47,-49,-39,-40,-43,]),'DEFAULT':([23,31,34,35,36,37,75,76,77,79,81,91,92,93,94,95,96,97,98,99,100,101,102,111,112,113,114,115,116,117,118,119,120,121,122,123,124,128,129,130,135,144,146,147,153,154,156,158,159,160,161,166,170,177,178,179,180,181,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,204,206,211,213,216,217,222,229,233,238,247,248,254,256,259,],[-84,-88,-135,-136,-137,-138,-85,-86,-87,-53,-139,-83,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-144,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-53,155,-53,-53,-36,-145,-146,182,-45,-52,-59,-59,-59,201,-79,-80,-81,-82,-37,-129,-44,-59,-55,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-56,-57,-46,-71,-72,-38,-41,-54,-58,-73,-42,-48,-74,-47,-49,-39,-40,-43,]),'LKEY':([23,31,32,33,34,35,36,37,73,75,76,77,78,80,81,83,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,172,180,209,212,228,235,236,237,245,],[-84,-88,79,82,-135,-136,-137,-138,126,-85,-86,-87,128,135,-139,137,-140,-141,-142,-143,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,208,-129,227,231,244,249,-34,-35,253,]),'LPAREN':([25,26,43,76,85,86,87,],[44,56,88,127,127,139,140,]),'SHORT_VAR_DECL':([25,85,],[45,45,]),'PLUS_EQ':([25,],[46,]),'MINUS_EQ':([25,],[47,]),'TIMES_EQ':([25,],[48,]),'DIVIDE_EQ':([25,],[49,]),'MODULO_EQ':([25,],[50,]),'BITWISE_AND_EQ':([25,],[51,]),'BITWISE_OR_EQ':([25,],[52,]),'BITWISE_XOR_EQ':([25,],[53,]),'LEFT_SHIFT_EQ':([25,],[54,]),'RIGHT_SHIFT_EQ':([25,],[55,]),'RPAREN':([34,35,36,37,56,81,89,90,103,104,105,107,108,109,110,139,140,142,143,152,165,167,168,169,171,174,175,176,207,210,220,221,223,],[-135,-136,-137,-138,102,-139,144,-133,146,147,-113,-140,-141,-142,-143,166,170,172,-130,180,204,-75,-76,206,-132,-134,-114,-113,222,-131,-77,-78,238,]),'COMMA':([34,35,36,37,81,89,90,104,105,107,108,109,110,142,143,152,165,167,168,169,171,174,175,176,210,220,221,223,],[-135,-136,-137,-138,-139,145,-133,148,-113,-140,-141,-142,-143,173,-130,145,205,-75,-76,207,-132,-134,148,-113,-131,-77,-78,205,]),'PRINTLN':([42,],[86,]),'PRINTF':([42,],[87,]),'INTEGER_DATA_TYPE':([57,72,141,172,],[107,107,107,107,]),'FLOAT_DATA_TYPE':([57,72,141,172,],[108,108,108,108,]),'BOOLEAN_DATA_TYPE':([57,72,141,172,],[109,109,109,109,]),'STRING_DATA_TYPE':([57,72,141,172,],[110,110,110,110,]),'EQUAL':([106,107,108,109,110,125,],[149,-140,-141,-142,-143,150,]),'ELSE':([179,211,213,229,259,],[212,228,-41,-42,-43,]),'INCREASE':([219,],[236,]),'DECREASE':([219,],[237,]),}
=======
_lr_signature = 'AMPERSAND AND ARROW_FUNCTION_TYPE ARROW_SEND_RECEIVE AS ASSERT BITWISE_AND_EQ BITWISE_OR_EQ BITWISE_XOR BITWISE_XOR_ASSIGN BITWISE_XOR_EQ BOOLEAN BOOLEAN_DATA_TYPE BREAK CASE CLASS COLON COMMA COMMENT COMMENT_MULTI CONST CONTINUE DECREASE DEFAULT DEL DIVIDE DIVIDE_EQ DOT DOUBLE_QUOTE ELIF ELLIPSIS ELSE ENTERE_DIVIDE EQUAL EQUALEQUAL EXCEPT FALSE FAT_ARROW FINALLY FLOAT FLOAT_DATA_TYPE FMT_LIBRARY FOR FROM FUNC GLOBAL GREATER GREATER_EQUAL GREATER_THAN HEX_NUMBER IDENTIFIER IF IMPORT IN INCREASE INPUT INTEGER INTEGER_DATA_TYPE IS LAMBDA LBRACKET LEFT_SHIFT_EQ LESS LESS_EQUAL LESS_THAN LKEY LOGICAL_AND LOGICAL_NOT LOGICAL_OR LPAREN MINUS MINUS_EQ MODULE MODULO_EQ NONE NONLOCAL NOT NOT_EQUAL NULL OR PASS PERCENT_D PIPE PLUS PLUS_EQ PRINTF PRINTLN RAISE RBRACKET RETURN RIGHT_SHIFT_EQ RKEY RPAREN SCIENTIFIC_NOTATION SEMICOLON SHORT_VAR_DECL STRING STRING_DATA_TYPE SWITCH TIMES TIMES_EQ TRUE TRY VAR WITH YIELD loop_program : program\n                  | loop_reserved\n                  | loop_program program\n                  | loop_program loop_reserved\n   func_program : program\n                  | RETURN\n                  | RETURN usable_value\n                  | func_program program\n                  | func_program RETURN\n                  | func_program RETURN usable_value\n  program : sentencia\n             | loop\n             | program sentencia\n             | program loop\n   loop_reserved : BREAK\n                  | CONTINUE\n                  | PASS\n  loop : for\n  sentencia : print\n               | print_withoutvalue\n               | def_function\n               | call_function\n               | input\n               | assignment\n               | short_assignment\n               | arithmetic_operation\n               | direct_arithmetic_operation\n               | if_statement\n               | function_call\n               | switch_statementfor : FOR LKEY loop_program RKEY\n         | FOR comparation_operation LKEY loop_program RKEY\n         | FOR short_assignment SEMICOLON comparation_operation SEMICOLON IDENTIFIER operator_for LKEY loop_program RKEYoperator_for : INCREASE\n                   | DECREASEfunction_call : IDENTIFIER LPAREN values RPARENif_statement : IF comparation_operation LKEY program RKEY\n                    | IF comparation_operation LKEY program RKEY conditions_elseif\n                    | IF comparation_operation LKEY program RKEY ELSE LKEY program RKEY\n                    | IF comparation_operation LKEY program RKEY conditions_elseif ELSE LKEY program RKEY\n    conditions_elseif : else_if\n                        | conditions_elseif else_if\n   else_if : ELSE IF comparation_operation LKEY program RKEY\n   \n    switch_statement : SWITCH value LKEY switch_cases RKEY\n                     | SWITCH LKEY switch_cases RKEY\n                     | SWITCH switch_expression LKEY switch_cases RKEY\n    \n    switch_expression : value\n                     |\n    \n    switch_cases : switch_case switch_cases\n                 |\n    \n    switch_case : CASE value COLON statements\n               | CASE COLON statements\n    \n    statements : statement statements\n               |\n    \n    statement : print\n               | print_withoutvalue\n               | def_function\n               | call_function\n               | input\n               | assignment\n               | short_assignment\n               | arithmetic_operation\n               | direct_arithmetic_operation\n               | if_statement\n               | function_call\n               | switch_statementprint : FMT_LIBRARY DOT PRINTLN LPAREN data RPAREN\n           | FMT_LIBRARY DOT PRINTF LPAREN value RPAREN\n           | FMT_LIBRARY DOT PRINTF LPAREN value COMMA RPAREN\n           | FMT_LIBRARY DOT PRINTF LPAREN value COMMA data RPARENdata : value\n         | IDENTIFIER\n         | data COMMA value\n         | data COMMA IDENTIFIERprint_withoutvalue : FMT_LIBRARY DOT PRINTLN LPAREN RPAREN\n            | FMT_LIBRARY DOT PRINTF LPAREN RPARENassignment : VAR IDENTIFIER data_type EQUAL usable_value\n                | CONST IDENTIFIER data_type EQUAL usable_valueshort_assignment : IDENTIFIER SHORT_VAR_DECL usable_value usable_value : value\n                 | call_function\n                 | IDENTIFIER\n                 | arithmetic_operation\n                 | comparation_operation\n  \n  direct_arithmetic_operation : IDENTIFIER PLUS_EQ value\n                      | IDENTIFIER MINUS_EQ value\n                      | IDENTIFIER TIMES_EQ value\n                      | IDENTIFIER DIVIDE_EQ value\n                      | IDENTIFIER MODULO_EQ value\n                      | IDENTIFIER BITWISE_AND_EQ value\n                      | IDENTIFIER BITWISE_OR_EQ value\n                      | IDENTIFIER BITWISE_XOR_EQ value\n                      | IDENTIFIER LEFT_SHIFT_EQ value\n                      | IDENTIFIER RIGHT_SHIFT_EQ value\n  \n  arithmetic_operation : usable_value PLUS usable_value\n                      | usable_value MINUS usable_value\n                      | usable_value DIVIDE usable_value\n                      | usable_value TIMES usable_value\n                      | usable_value ENTERE_DIVIDE usable_value\n                      | usable_value MODULE usable_value\n  \n    comparation_operation : usable_value EQUALEQUAL usable_value\n                        | usable_value NOT_EQUAL usable_value\n                        | usable_value LESS_EQUAL usable_value\n                        | usable_value GREATER_EQUAL usable_value\n                        | usable_value LESS usable_value\n                        | usable_value GREATER usable_value\n                        | usable_value LOGICAL_AND usable_value\n                        | usable_value LOGICAL_OR usable_value\n    identifiers : IDENTIFIER\n                 | identifiers COMMA identifiersrule_comparation : IDENTIFIER EQUALEQUAL value\n                        | IDENTIFIER NOT_EQUAL value\n                        | IDENTIFIER LESS_EQUAL value\n                        | IDENTIFIER GREATER_EQUAL value\n                        | IDENTIFIER LESS value\n                        | IDENTIFIER GREATER value\n                        | IDENTIFIER LOGICAL_AND value\n                        | IDENTIFIER LOGICAL_OR value\n    condition : value comparation_operation value\n              | condition LOGICAL_AND condition\n              | condition LOGICAL_OR condition\n              | LOGICAL_NOT condition\n    def_function : FUNC IDENTIFIER LPAREN parameters RPAREN LKEY func_program RKEY\n                  | FUNC IDENTIFIER LPAREN parameters RPAREN data_type LKEY func_program RKEY\n                  | FUNC FMT_LIBRARY DOT PRINTF LPAREN STRING COMMA data RPAREN LKEY func_program RKEY\n                  | FUNC FMT_LIBRARY DOT PRINTF LPAREN STRING COMMA data COMMA RPAREN LKEY func_program RKEY\n                  | FUNC FMT_LIBRARY DOT PRINTF LPAREN STRING COMMA IDENTIFIER RPAREN LKEY func_program RKEY\n                  | FUNC FMT_LIBRARY DOT PRINTF LPAREN STRING COMMA IDENTIFIER COMMA RPAREN LKEY func_program RKEY\n                  | FUNC FMT_LIBRARY DOT PRINTF LPAREN STRING COMMA FLOAT RPAREN LKEY func_program RKEY\n                  | FUNC FMT_LIBRARY DOT PRINTF LPAREN STRING COMMA FLOAT COMMA RPAREN LKEY func_program RKEY\n                  | FUNC FMT_LIBRARY DOT PRINTF LPAREN STRING COMMA INTEGER RPAREN LKEY func_program RKEY\n                  | FUNC FMT_LIBRARY DOT PRINTF LPAREN STRING COMMA INTEGER COMMA RPAREN LKEY func_program RKEY\n                  | FUNC FMT_LIBRARY DOT PRINTF LPAREN STRING COMMA BOOLEAN RPAREN LKEY func_program RKEY\n                  | FUNC FMT_LIBRARY DOT PRINTF LPAREN STRING COMMA BOOLEAN COMMA RPAREN LKEY func_program RKEY\n                  | FUNC FMT_LIBRARY DOT PRINTF LPAREN STRING COMMA IDENTIFIER COMMA FLOAT RPAREN LKEY func_program RKEY\n                  | FUNC FMT_LIBRARY DOT PRINTF LPAREN STRING COMMA IDENTIFIER COMMA FLOAT COMMA RPAREN LKEY func_program RKEY\n                  | FUNC FMT_LIBRARY DOT PRINTF LPAREN STRING COMMA IDENTIFIER COMMA INTEGER RPAREN LKEY func_program RKEY\n                  | FUNC FMT_LIBRARY DOT PRINTF LPAREN STRING COMMA IDENTIFIER COMMA INTEGER COMMA RPAREN LKEY func_program RKEY\n                  | FUNC FMT_LIBRARY DOT PRINTF LPAREN STRING COMMA IDENTIFIER COMMA BOOLEAN RPAREN LKEY func_program RKEY\n                  | FUNC FMT_LIBRARY DOT PRINTF LPAREN STRING COMMA IDENTIFIER COMMA BOOLEAN COMMA RPAREN LKEY func_program RKEYcall_function : IDENTIFIER LPAREN values RPARENparameters : parameter\n                | parameters COMMA parameter parameter : IDENTIFIER data_typevalues : value\n            | values COMMA valuevalue : STRING\n          | INTEGER\n          | FLOAT\n          | BOOLEAN\n          | IDENTIFIERdata_type : INTEGER_DATA_TYPE\n               | FLOAT_DATA_TYPE\n               | BOOLEAN_DATA_TYPE\n               | STRING_DATA_TYPEinput : INPUT LPAREN RPAREN\n             | INPUT LPAREN value RPAREN\n             | INPUT LPAREN identifiers RPAREN\n    '
    
_lr_action_items = {'BREAK':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,26,27,28,29,35,38,39,40,41,76,77,78,82,83,93,94,95,96,97,98,99,100,101,102,103,104,113,114,115,116,117,118,119,120,121,122,123,124,125,126,135,136,144,146,147,154,159,160,163,167,175,176,177,178,179,195,196,198,200,206,208,214,222,228,229,242,244,257,258,272,274,291,293,301,303,305,307,308,309,316,317,318,320,322,324,325,326,327,],[6,6,-1,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-80,-147,-149,-148,-150,-84,-3,-4,-13,-14,-81,-82,-83,-151,6,-79,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-156,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,6,6,-36,-157,-158,-45,-31,6,-75,-76,-77,-78,-37,-141,-44,-46,-32,-67,-68,-38,-41,-69,-42,-70,-123,6,-124,-39,6,-40,-33,-43,-125,-127,-129,-131,-133,-126,-128,-130,-132,-134,-135,-137,-139,-136,-138,-140,]),'CONTINUE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,26,27,28,29,35,38,39,40,41,76,77,78,82,83,93,94,95,96,97,98,99,100,101,102,103,104,113,114,115,116,117,118,119,120,121,122,123,124,125,126,135,136,144,146,147,154,159,160,163,167,175,176,177,178,179,195,196,198,200,206,208,214,222,228,229,242,244,257,258,272,274,291,293,301,303,305,307,308,309,316,317,318,320,322,324,325,326,327,],[7,7,-1,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-80,-147,-149,-148,-150,-84,-3,-4,-13,-14,-81,-82,-83,-151,7,-79,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-156,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,7,7,-36,-157,-158,-45,-31,7,-75,-76,-77,-78,-37,-141,-44,-46,-32,-67,-68,-38,-41,-69,-42,-70,-123,7,-124,-39,7,-40,-33,-43,-125,-127,-129,-131,-133,-126,-128,-130,-132,-134,-135,-137,-139,-136,-138,-140,]),'PASS':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,26,27,28,29,35,38,39,40,41,76,77,78,82,83,93,94,95,96,97,98,99,100,101,102,103,104,113,114,115,116,117,118,119,120,121,122,123,124,125,126,135,136,144,146,147,154,159,160,163,167,175,176,177,178,179,195,196,198,200,206,208,214,222,228,229,242,244,257,258,272,274,291,293,301,303,305,307,308,309,316,317,318,320,322,324,325,326,327,],[8,8,-1,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-80,-147,-149,-148,-150,-84,-3,-4,-13,-14,-81,-82,-83,-151,8,-79,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-156,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,8,8,-36,-157,-158,-45,-31,8,-75,-76,-77,-78,-37,-141,-44,-46,-32,-67,-68,-38,-41,-69,-42,-70,-123,8,-124,-39,8,-40,-33,-43,-125,-127,-129,-131,-133,-126,-128,-130,-132,-134,-135,-137,-139,-136,-138,-140,]),'FMT_LIBRARY':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,26,27,28,29,35,38,39,40,41,76,77,78,82,83,93,94,95,96,97,98,99,100,101,102,103,104,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,135,136,144,146,147,151,154,157,159,160,163,167,175,176,177,178,179,180,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,198,200,202,206,208,214,216,217,218,219,222,224,228,229,230,231,232,233,239,241,242,243,244,255,256,257,258,260,265,267,269,271,272,273,274,275,276,277,284,285,286,287,288,289,290,291,292,293,294,296,298,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,],[22,22,22,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-80,44,-147,-149,-148,-150,-84,22,-4,-13,-14,-81,-82,-83,-151,22,-79,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-156,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,22,22,22,-36,-157,-158,22,-45,22,-31,22,-75,-76,-77,-78,-37,-141,-44,22,22,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-46,-32,-67,-68,22,-38,-41,-69,22,22,-6,22,-42,22,-70,-123,22,-9,-7,22,22,22,22,-10,-124,22,22,-39,22,22,22,22,22,22,-40,22,-33,22,22,22,22,22,22,22,22,22,22,-43,22,-125,22,22,22,22,-127,22,-129,22,-131,22,-133,-126,-128,22,22,22,22,22,22,-130,-132,-134,22,-135,22,-137,22,-139,-136,-138,-140,]),'FUNC':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,26,27,28,29,35,38,39,40,41,76,77,78,82,83,93,94,95,96,97,98,99,100,101,102,103,104,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,135,136,144,146,147,151,154,157,159,160,163,167,175,176,177,178,179,180,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,198,200,202,206,208,214,216,217,218,219,222,224,228,229,230,231,232,233,239,241,242,243,244,255,256,257,258,260,265,267,269,271,272,273,274,275,276,277,284,285,286,287,288,289,290,291,292,293,294,296,298,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,],[24,24,24,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-80,-147,-149,-148,-150,-84,24,-4,-13,-14,-81,-82,-83,-151,24,-79,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-156,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,24,24,24,-36,-157,-158,24,-45,24,-31,24,-75,-76,-77,-78,-37,-141,-44,24,24,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-46,-32,-67,-68,24,-38,-41,-69,24,24,-6,24,-42,24,-70,-123,24,-9,-7,24,24,24,24,-10,-124,24,24,-39,24,24,24,24,24,24,-40,24,-33,24,24,24,24,24,24,24,24,24,24,-43,24,-125,24,24,24,24,-127,24,-129,24,-131,24,-133,-126,-128,24,24,24,24,24,24,-130,-132,-134,24,-135,24,-137,24,-139,-136,-138,-140,]),'IDENTIFIER':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,26,27,28,29,31,33,34,35,36,37,38,39,40,41,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,76,77,78,82,83,89,93,94,95,96,97,98,99,100,101,102,103,104,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,129,133,135,136,137,138,139,144,145,146,147,148,149,150,151,154,157,159,160,163,167,170,175,176,177,178,179,180,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,206,208,214,216,217,218,219,220,222,223,224,228,229,230,231,232,233,239,241,242,243,244,245,255,256,257,258,260,265,267,269,271,272,273,274,275,276,277,284,285,286,287,288,289,290,291,292,293,294,296,298,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,],[25,25,25,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-80,43,-147,-149,-148,-150,58,73,77,-84,82,86,25,-4,-13,-14,82,77,82,82,82,82,82,82,82,82,82,82,107,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-81,-82,-83,-151,25,140,-79,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-156,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,25,82,82,25,25,77,165,82,-36,82,-157,-158,174,77,77,25,-45,25,-31,25,-75,-76,140,-77,-78,-37,-141,-44,25,25,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-46,-32,211,-67,213,-68,165,25,-38,-41,-69,25,25,77,25,235,-42,77,25,-70,-123,25,77,-7,25,25,25,25,-10,-124,213,25,25,-39,25,25,25,25,25,25,-40,25,-33,25,25,25,25,25,25,25,25,25,25,-43,25,-125,25,25,25,25,-127,25,-129,25,-131,25,-133,-126,-128,25,25,25,25,25,25,-130,-132,-134,25,-135,25,-137,25,-139,-136,-138,-140,]),'INPUT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,26,27,28,29,35,38,39,40,41,76,77,78,82,83,93,94,95,96,97,98,99,100,101,102,103,104,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,135,136,144,146,147,151,154,157,159,160,163,167,175,176,177,178,179,180,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,198,200,202,206,208,214,216,217,218,219,222,224,228,229,230,231,232,233,239,241,242,243,244,255,256,257,258,260,265,267,269,271,272,273,274,275,276,277,284,285,286,287,288,289,290,291,292,293,294,296,298,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,],[30,30,30,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-80,-147,-149,-148,-150,-84,30,-4,-13,-14,-81,-82,-83,-151,30,-79,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-156,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,30,30,30,-36,-157,-158,30,-45,30,-31,30,-75,-76,-77,-78,-37,-141,-44,30,30,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-46,-32,-67,-68,30,-38,-41,-69,30,30,-6,30,-42,30,-70,-123,30,-9,-7,30,30,30,30,-10,-124,30,30,-39,30,30,30,30,30,30,-40,30,-33,30,30,30,30,30,30,30,30,30,30,-43,30,-125,30,30,30,30,-127,30,-129,30,-131,30,-133,-126,-128,30,30,30,30,30,30,-130,-132,-134,30,-135,30,-137,30,-139,-136,-138,-140,]),'VAR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,26,27,28,29,35,38,39,40,41,76,77,78,82,83,93,94,95,96,97,98,99,100,101,102,103,104,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,135,136,144,146,147,151,154,157,159,160,163,167,175,176,177,178,179,180,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,198,200,202,206,208,214,216,217,218,219,222,224,228,229,230,231,232,233,239,241,242,243,244,255,256,257,258,260,265,267,269,271,272,273,274,275,276,277,284,285,286,287,288,289,290,291,292,293,294,296,298,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,],[31,31,31,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-80,-147,-149,-148,-150,-84,31,-4,-13,-14,-81,-82,-83,-151,31,-79,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-156,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,31,31,31,-36,-157,-158,31,-45,31,-31,31,-75,-76,-77,-78,-37,-141,-44,31,31,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-46,-32,-67,-68,31,-38,-41,-69,31,31,-6,31,-42,31,-70,-123,31,-9,-7,31,31,31,31,-10,-124,31,31,-39,31,31,31,31,31,31,-40,31,-33,31,31,31,31,31,31,31,31,31,31,-43,31,-125,31,31,31,31,-127,31,-129,31,-131,31,-133,-126,-128,31,31,31,31,31,31,-130,-132,-134,31,-135,31,-137,31,-139,-136,-138,-140,]),'CONST':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,26,27,28,29,35,38,39,40,41,76,77,78,82,83,93,94,95,96,97,98,99,100,101,102,103,104,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,135,136,144,146,147,151,154,157,159,160,163,167,175,176,177,178,179,180,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,198,200,202,206,208,214,216,217,218,219,222,224,228,229,230,231,232,233,239,241,242,243,244,255,256,257,258,260,265,267,269,271,272,273,274,275,276,277,284,285,286,287,288,289,290,291,292,293,294,296,298,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,],[33,33,33,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-80,-147,-149,-148,-150,-84,33,-4,-13,-14,-81,-82,-83,-151,33,-79,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-156,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,33,33,33,-36,-157,-158,33,-45,33,-31,33,-75,-76,-77,-78,-37,-141,-44,33,33,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-46,-32,-67,-68,33,-38,-41,-69,33,33,-6,33,-42,33,-70,-123,33,-9,-7,33,33,33,33,-10,-124,33,33,-39,33,33,33,33,33,33,-40,33,-33,33,33,33,33,33,33,33,33,33,33,-43,33,-125,33,33,33,33,-127,33,-129,33,-131,33,-133,-126,-128,33,33,33,33,33,33,-130,-132,-134,33,-135,33,-137,33,-139,-136,-138,-140,]),'IF':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,26,27,28,29,35,38,39,40,41,76,77,78,82,83,93,94,95,96,97,98,99,100,101,102,103,104,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,135,136,144,146,147,151,154,157,159,160,163,167,175,176,177,178,179,180,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,198,200,202,206,207,208,214,216,217,218,219,221,222,224,228,229,230,231,232,233,239,241,242,243,244,255,256,257,258,260,265,267,269,271,272,273,274,275,276,277,284,285,286,287,288,289,290,291,292,293,294,296,298,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,],[34,34,34,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-80,-147,-149,-148,-150,-84,34,-4,-13,-14,-81,-82,-83,-151,34,-79,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-156,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,34,34,34,-36,-157,-158,34,-45,34,-31,34,-75,-76,-77,-78,-37,-141,-44,34,34,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-46,-32,-67,-68,34,-38,223,-41,-69,34,34,-6,34,223,-42,34,-70,-123,34,-9,-7,34,34,34,34,-10,-124,34,34,-39,34,34,34,34,34,34,-40,34,-33,34,34,34,34,34,34,34,34,34,34,-43,34,-125,34,34,34,34,-127,34,-129,34,-131,34,-133,-126,-128,34,34,34,34,34,34,-130,-132,-134,34,-135,34,-137,34,-139,-136,-138,-140,]),'SWITCH':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,26,27,28,29,35,38,39,40,41,76,77,78,82,83,93,94,95,96,97,98,99,100,101,102,103,104,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,135,136,144,146,147,151,154,157,159,160,163,167,175,176,177,178,179,180,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,198,200,202,206,208,214,216,217,218,219,222,224,228,229,230,231,232,233,239,241,242,243,244,255,256,257,258,260,265,267,269,271,272,273,274,275,276,277,284,285,286,287,288,289,290,291,292,293,294,296,298,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,],[36,36,36,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-80,-147,-149,-148,-150,-84,36,-4,-13,-14,-81,-82,-83,-151,36,-79,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-156,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,36,36,36,-36,-157,-158,36,-45,36,-31,36,-75,-76,-77,-78,-37,-141,-44,36,36,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-46,-32,-67,-68,36,-38,-41,-69,36,36,-6,36,-42,36,-70,-123,36,-9,-7,36,36,36,36,-10,-124,36,36,-39,36,36,36,36,36,36,-40,36,-33,36,36,36,36,36,36,36,36,36,36,-43,36,-125,36,36,36,36,-127,36,-129,36,-131,36,-133,-126,-128,36,36,36,36,36,36,-130,-132,-134,36,-135,36,-137,36,-139,-136,-138,-140,]),'FOR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,26,27,28,29,35,38,39,40,41,76,77,78,82,83,93,94,95,96,97,98,99,100,101,102,103,104,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,135,136,144,146,147,151,154,159,160,163,167,175,176,177,178,179,195,196,198,200,202,206,208,214,216,217,218,219,222,224,228,229,230,231,232,233,239,241,242,243,244,255,256,257,258,260,265,267,269,271,272,273,274,275,276,277,284,285,286,287,288,289,290,291,292,293,294,296,298,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,],[37,37,37,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-80,-147,-149,-148,-150,-84,37,-4,-13,-14,-81,-82,-83,-151,37,-79,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-156,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,37,37,37,-36,-157,-158,37,-45,-31,37,-75,-76,-77,-78,-37,-141,-44,-46,-32,-67,-68,37,-38,-41,-69,37,37,-6,37,-42,37,-70,-123,37,-9,-7,37,37,37,37,-10,-124,37,37,-39,37,37,37,37,37,37,-40,37,-33,37,37,37,37,37,37,37,37,37,37,-43,37,-125,37,37,37,37,-127,37,-129,37,-131,37,-133,-126,-128,37,37,37,37,37,37,-130,-132,-134,37,-135,37,-137,37,-139,-136,-138,-140,]),'STRING':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,26,27,28,29,34,35,36,37,38,39,40,41,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,76,77,78,82,83,93,94,95,96,97,98,99,100,101,102,103,104,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,129,133,135,136,137,138,139,144,145,146,147,149,150,151,154,157,159,160,163,167,171,175,176,177,178,179,180,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,198,199,200,201,202,206,208,214,216,217,218,219,220,222,223,224,228,229,230,231,232,233,239,241,242,243,244,245,255,256,257,258,260,265,267,269,271,272,273,274,275,276,277,284,285,286,287,288,289,290,291,292,293,294,296,298,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,],[26,26,26,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-80,-147,-149,-148,-150,26,-84,26,26,26,-4,-13,-14,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-81,-82,-83,-151,26,-79,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-156,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,26,26,26,26,26,26,26,26,-36,26,-157,-158,26,26,26,-45,26,-31,26,-75,-76,205,-77,-78,-37,-141,-44,26,26,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-46,-32,-67,26,-68,26,26,-38,-41,-69,26,26,26,26,26,-42,26,26,-70,-123,26,26,-7,26,26,26,26,-10,-124,26,26,26,-39,26,26,26,26,26,26,-40,26,-33,26,26,26,26,26,26,26,26,26,26,-43,26,-125,26,26,26,26,-127,26,-129,26,-131,26,-133,-126,-128,26,26,26,26,26,26,-130,-132,-134,26,-135,26,-137,26,-139,-136,-138,-140,]),'INTEGER':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,26,27,28,29,34,35,36,37,38,39,40,41,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,76,77,78,82,83,93,94,95,96,97,98,99,100,101,102,103,104,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,129,133,135,136,137,138,139,144,145,146,147,149,150,151,154,157,159,160,163,167,175,176,177,178,179,180,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,198,199,200,201,202,206,208,214,216,217,218,219,220,222,223,224,228,229,230,231,232,233,239,241,242,243,244,245,247,255,256,257,258,260,265,267,269,271,272,273,274,275,276,277,284,285,286,287,288,289,290,291,292,293,294,296,298,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,],[28,28,28,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-80,-147,-149,-148,-150,28,-84,28,28,28,-4,-13,-14,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-81,-82,-83,-151,28,-79,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-156,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,28,28,28,28,28,28,28,28,-36,28,-157,-158,28,28,28,-45,28,-31,28,-75,-76,-77,-78,-37,-141,-44,28,28,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-46,-32,-67,28,-68,28,28,-38,-41,-69,28,28,28,28,237,-42,28,28,-70,-123,28,28,-7,28,28,28,28,-10,-124,28,263,28,28,-39,28,28,28,28,28,28,-40,28,-33,28,28,28,28,28,28,28,28,28,28,-43,28,-125,28,28,28,28,-127,28,-129,28,-131,28,-133,-126,-128,28,28,28,28,28,28,-130,-132,-134,28,-135,28,-137,28,-139,-136,-138,-140,]),'FLOAT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,26,27,28,29,34,35,36,37,38,39,40,41,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,76,77,78,82,83,93,94,95,96,97,98,99,100,101,102,103,104,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,129,133,135,136,137,138,139,144,145,146,147,149,150,151,154,157,159,160,163,167,175,176,177,178,179,180,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,198,199,200,201,202,206,208,214,216,217,218,219,220,222,223,224,228,229,230,231,232,233,239,241,242,243,244,245,247,255,256,257,258,260,265,267,269,271,272,273,274,275,276,277,284,285,286,287,288,289,290,291,292,293,294,296,298,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,],[27,27,27,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-80,-147,-149,-148,-150,27,-84,27,27,27,-4,-13,-14,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-81,-82,-83,-151,27,-79,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-156,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,27,27,27,27,27,27,27,27,-36,27,-157,-158,27,27,27,-45,27,-31,27,-75,-76,-77,-78,-37,-141,-44,27,27,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-46,-32,-67,27,-68,27,27,-38,-41,-69,27,27,27,27,236,-42,27,27,-70,-123,27,27,-7,27,27,27,27,-10,-124,27,262,27,27,-39,27,27,27,27,27,27,-40,27,-33,27,27,27,27,27,27,27,27,27,27,-43,27,-125,27,27,27,27,-127,27,-129,27,-131,27,-133,-126,-128,27,27,27,27,27,27,-130,-132,-134,27,-135,27,-137,27,-139,-136,-138,-140,]),'BOOLEAN':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,26,27,28,29,34,35,36,37,38,39,40,41,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,76,77,78,82,83,93,94,95,96,97,98,99,100,101,102,103,104,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,129,133,135,136,137,138,139,144,145,146,147,149,150,151,154,157,159,160,163,167,175,176,177,178,179,180,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,198,199,200,201,202,206,208,214,216,217,218,219,220,222,223,224,228,229,230,231,232,233,239,241,242,243,244,245,247,255,256,257,258,260,265,267,269,271,272,273,274,275,276,277,284,285,286,287,288,289,290,291,292,293,294,296,298,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,],[29,29,29,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-80,-147,-149,-148,-150,29,-84,29,29,29,-4,-13,-14,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-81,-82,-83,-151,29,-79,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-156,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,29,29,29,29,29,29,29,29,-36,29,-157,-158,29,29,29,-45,29,-31,29,-75,-76,-77,-78,-37,-141,-44,29,29,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-46,-32,-67,29,-68,29,29,-38,-41,-69,29,29,29,29,238,-42,29,29,-70,-123,29,29,-7,29,29,29,29,-10,-124,29,264,29,29,-39,29,29,29,29,29,29,-40,29,-33,29,29,29,29,29,29,29,29,29,29,-43,29,-125,29,29,29,29,-127,29,-129,29,-131,29,-133,-126,-128,29,29,29,29,29,29,-130,-132,-134,29,-135,29,-137,29,-139,-136,-138,-140,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,26,27,28,29,35,38,39,40,41,76,77,78,82,93,94,95,96,97,98,99,100,101,102,103,104,113,114,115,116,117,118,119,120,121,122,123,124,125,126,144,146,147,154,159,163,167,175,176,177,178,179,195,196,198,200,206,208,214,222,228,229,244,257,272,274,291,293,301,303,305,307,308,309,316,317,318,320,322,324,325,326,327,],[0,-1,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-80,-147,-149,-148,-150,-84,-3,-4,-13,-14,-81,-82,-83,-151,-79,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-156,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-36,-157,-158,-45,-31,-75,-76,-77,-78,-37,-141,-44,-46,-32,-67,-68,-38,-41,-69,-42,-70,-123,-124,-39,-40,-33,-43,-125,-127,-129,-131,-133,-126,-128,-130,-132,-134,-135,-137,-139,-136,-138,-140,]),'RKEY':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,26,27,28,29,35,38,39,40,41,76,77,78,80,82,93,94,95,96,97,98,99,100,101,102,103,104,113,114,115,116,117,118,119,120,121,122,123,124,125,126,130,131,132,134,135,144,146,147,151,153,154,155,157,158,159,160,163,167,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,198,200,206,208,209,210,214,216,217,218,222,228,229,230,231,232,233,241,243,244,255,257,258,272,273,274,276,284,286,288,290,291,292,293,294,301,302,303,304,305,306,307,308,309,311,313,315,316,317,318,319,320,321,322,323,324,325,326,327,],[-1,-2,-11,-12,-15,-16,-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-80,-147,-149,-148,-150,-84,-3,-4,-13,-14,-81,-82,-83,-50,-151,-79,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-156,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-50,154,-50,-50,159,-36,-157,-158,177,179,-45,-49,-54,195,-31,196,-75,-76,-77,-78,-37,-141,-44,-54,-52,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-46,-32,-67,-68,-38,-41,-51,-53,-69,229,-5,-6,-42,-70,-123,-8,-9,-7,244,257,-10,-124,272,-39,274,-40,291,-33,293,301,303,305,307,-43,308,-125,309,-127,316,-129,317,-131,318,-133,-126,-128,320,322,324,-130,-132,-134,325,-135,326,-137,327,-139,-136,-138,-140,]),'RETURN':([4,5,9,10,11,12,13,14,15,16,17,18,19,20,21,23,26,27,28,29,35,40,41,76,77,78,82,93,94,95,96,97,98,99,100,101,102,103,104,113,114,115,116,117,118,119,120,121,122,123,124,125,126,144,146,147,154,159,163,167,175,176,177,178,179,195,196,198,200,202,206,208,214,216,217,218,219,222,228,229,230,231,232,233,243,244,257,260,265,267,269,271,272,274,275,276,277,284,285,286,287,288,289,290,291,292,293,294,296,298,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,],[-11,-12,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-18,-80,-147,-149,-148,-150,-84,-13,-14,-81,-82,-83,-151,-79,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-156,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-36,-157,-158,-45,-31,-75,-76,-77,-78,-37,-141,-44,-46,-32,-67,-68,218,-38,-41,-69,231,-5,-6,218,-42,-70,-123,-8,-9,-7,231,-10,-124,-39,218,218,218,218,218,-40,-33,218,231,218,231,218,231,218,231,218,231,-43,231,-125,231,218,218,218,-127,231,-129,231,-131,231,-133,-126,-128,218,231,218,231,218,231,-130,-132,-134,231,-135,231,-137,231,-139,-136,-138,-140,]),'PLUS':([12,16,23,25,26,27,28,29,32,35,74,75,76,77,78,84,86,93,113,114,115,116,117,118,119,120,121,122,123,124,125,126,144,161,175,176,178,186,190,232,240,243,],[-81,-83,-80,-82,-147,-149,-148,-150,59,-84,-84,59,-81,-82,-83,-84,-82,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-141,-84,59,59,-141,-81,-83,59,-84,59,]),'MINUS':([12,16,23,25,26,27,28,29,32,35,74,75,76,77,78,84,86,93,113,114,115,116,117,118,119,120,121,122,123,124,125,126,144,161,175,176,178,186,190,232,240,243,],[-81,-83,-80,-82,-147,-149,-148,-150,60,-84,-84,60,-81,-82,-83,-84,-82,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-141,-84,60,60,-141,-81,-83,60,-84,60,]),'DIVIDE':([12,16,23,25,26,27,28,29,32,35,74,75,76,77,78,84,86,93,113,114,115,116,117,118,119,120,121,122,123,124,125,126,144,161,175,176,178,186,190,232,240,243,],[-81,-83,-80,-82,-147,-149,-148,-150,61,-84,-84,61,-81,-82,-83,-84,-82,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-141,-84,61,61,-141,-81,-83,61,-84,61,]),'TIMES':([12,16,23,25,26,27,28,29,32,35,74,75,76,77,78,84,86,93,113,114,115,116,117,118,119,120,121,122,123,124,125,126,144,161,175,176,178,186,190,232,240,243,],[-81,-83,-80,-82,-147,-149,-148,-150,62,-84,-84,62,-81,-82,-83,-84,-82,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-141,-84,62,62,-141,-81,-83,62,-84,62,]),'ENTERE_DIVIDE':([12,16,23,25,26,27,28,29,32,35,74,75,76,77,78,84,86,93,113,114,115,116,117,118,119,120,121,122,123,124,125,126,144,161,175,176,178,186,190,232,240,243,],[-81,-83,-80,-82,-147,-149,-148,-150,63,-84,-84,63,-81,-82,-83,-84,-82,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-141,-84,63,63,-141,-81,-83,63,-84,63,]),'MODULE':([12,16,23,25,26,27,28,29,32,35,74,75,76,77,78,84,86,93,113,114,115,116,117,118,119,120,121,122,123,124,125,126,144,161,175,176,178,186,190,232,240,243,],[-81,-83,-80,-82,-147,-149,-148,-150,64,-84,-84,64,-81,-82,-83,-84,-82,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-141,-84,64,64,-141,-81,-83,64,-84,64,]),'EQUALEQUAL':([12,16,23,25,26,27,28,29,32,35,74,75,76,77,78,84,86,93,113,114,115,116,117,118,119,120,121,122,123,124,125,126,144,161,175,176,178,186,190,232,240,243,],[-81,-83,-80,-82,-147,-149,-148,-150,65,-84,-84,65,-81,-82,-83,-84,-82,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-141,-84,65,65,-141,-81,-83,65,-84,65,]),'NOT_EQUAL':([12,16,23,25,26,27,28,29,32,35,74,75,76,77,78,84,86,93,113,114,115,116,117,118,119,120,121,122,123,124,125,126,144,161,175,176,178,186,190,232,240,243,],[-81,-83,-80,-82,-147,-149,-148,-150,66,-84,-84,66,-81,-82,-83,-84,-82,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-141,-84,66,66,-141,-81,-83,66,-84,66,]),'LESS_EQUAL':([12,16,23,25,26,27,28,29,32,35,74,75,76,77,78,84,86,93,113,114,115,116,117,118,119,120,121,122,123,124,125,126,144,161,175,176,178,186,190,232,240,243,],[-81,-83,-80,-82,-147,-149,-148,-150,67,-84,-84,67,-81,-82,-83,-84,-82,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-141,-84,67,67,-141,-81,-83,67,-84,67,]),'GREATER_EQUAL':([12,16,23,25,26,27,28,29,32,35,74,75,76,77,78,84,86,93,113,114,115,116,117,118,119,120,121,122,123,124,125,126,144,161,175,176,178,186,190,232,240,243,],[-81,-83,-80,-82,-147,-149,-148,-150,68,-84,-84,68,-81,-82,-83,-84,-82,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-141,-84,68,68,-141,-81,-83,68,-84,68,]),'LESS':([12,16,23,25,26,27,28,29,32,35,74,75,76,77,78,84,86,93,113,114,115,116,117,118,119,120,121,122,123,124,125,126,144,161,175,176,178,186,190,232,240,243,],[-81,-83,-80,-82,-147,-149,-148,-150,69,-84,-84,69,-81,-82,-83,-84,-82,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,-141,-84,69,69,-141,-81,-83,69,-84,69,]),'GREATER':([12,16,23,25,26,27,28,29,32,35,74,75,76,77,78,84,86,93,113,114,115,116,117,118,119,120,121,122,123,124,125,126,144,161,175,176,178,186,190,232,240,243,],[-81,-83,-80,-82,-147,-149,-148,-150,70,-84,-84,70,-81,-82,-83,-84,-82,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,-141,-84,70,70,-141,-81,-83,70,-84,70,]),'LOGICAL_AND':([12,16,23,25,26,27,28,29,32,35,74,75,76,77,78,84,86,93,113,114,115,116,117,118,119,120,121,122,123,124,125,126,144,161,175,176,178,186,190,232,240,243,],[-81,-83,-80,-82,-147,-149,-148,-150,71,-84,-84,71,-81,-82,-83,-84,-82,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-141,-84,71,71,-141,-81,-83,71,-84,71,]),'LOGICAL_OR':([12,16,23,25,26,27,28,29,32,35,74,75,76,77,78,84,86,93,113,114,115,116,117,118,119,120,121,122,123,124,125,126,144,161,175,176,178,186,190,232,240,243,],[-81,-83,-80,-82,-147,-149,-148,-150,72,-84,-84,72,-81,-82,-83,-84,-82,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,-141,-84,72,72,-141,-81,-83,72,-84,72,]),'DOT':([22,44,],[42,90,]),'SEMICOLON':([23,26,27,28,29,35,76,77,78,85,93,113,114,115,116,117,118,119,120,121,122,123,124,125,126,161,178,],[-80,-147,-149,-148,-150,-84,-81,-82,-83,137,-79,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,197,-141,]),'CASE':([23,26,27,28,29,35,76,77,78,80,82,93,94,95,96,97,98,99,100,101,102,103,104,113,114,115,116,117,118,119,120,121,122,123,124,125,126,130,132,134,144,146,147,154,157,163,167,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,200,206,208,209,210,214,222,228,229,244,257,272,291,293,301,303,305,307,308,309,316,317,318,320,322,324,325,326,327,],[-80,-147,-149,-148,-150,-84,-81,-82,-83,133,-151,-79,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-156,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,133,133,133,-36,-157,-158,-45,-54,-75,-76,-77,-78,-37,-141,-44,-54,-52,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-46,-67,-68,-38,-41,-51,-53,-69,-42,-70,-123,-124,-39,-40,-43,-125,-127,-129,-131,-133,-126,-128,-130,-132,-134,-135,-137,-139,-136,-138,-140,]),'LKEY':([23,26,27,28,29,35,36,37,74,76,77,78,79,81,82,84,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,169,178,203,207,221,225,226,227,240,246,248,250,252,254,259,261,266,268,270,279,281,283,295,297,299,],[-80,-147,-149,-148,-150,-84,80,83,128,-81,-82,-83,130,134,-151,136,-152,-153,-154,-155,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,202,-141,219,224,239,242,-34,-35,256,260,265,267,269,271,275,277,285,287,289,296,298,300,310,312,314,]),'LPAREN':([25,30,43,77,86,87,88,143,],[45,57,89,129,129,138,139,171,]),'SHORT_VAR_DECL':([25,86,],[46,46,]),'PLUS_EQ':([25,],[47,]),'MINUS_EQ':([25,],[48,]),'TIMES_EQ':([25,],[49,]),'DIVIDE_EQ':([25,],[50,]),'MODULO_EQ':([25,],[51,]),'BITWISE_AND_EQ':([25,],[52,]),'BITWISE_OR_EQ':([25,],[53,]),'BITWISE_XOR_EQ':([25,],[54,]),'LEFT_SHIFT_EQ':([25,],[55,]),'RIGHT_SHIFT_EQ':([25,],[56,]),'RPAREN':([26,27,28,29,57,82,91,92,105,106,107,109,110,111,112,138,139,141,142,152,162,164,165,166,168,172,173,174,201,204,212,213,215,234,235,236,237,238,245,247,249,251,253,262,263,264,278,280,282,],[-147,-149,-148,-150,104,-151,144,-145,146,147,-109,-152,-153,-154,-155,163,167,169,-142,178,198,-71,-72,200,-144,-146,-110,-109,214,-143,-73,-74,228,246,248,250,252,254,259,261,266,268,270,279,281,283,295,297,299,]),'COMMA':([26,27,28,29,82,91,92,106,107,109,110,111,112,141,142,152,162,164,165,166,168,172,173,174,204,205,212,213,215,234,235,236,237,238,262,263,264,],[-147,-149,-148,-150,-151,145,-145,148,-109,-152,-153,-154,-155,170,-142,145,199,-71,-72,201,-144,-146,148,-109,-143,220,-73,-74,199,245,247,249,251,253,278,280,282,]),'COLON':([26,27,28,29,82,133,156,],[-147,-149,-148,-150,-151,157,180,]),'PRINTLN':([42,],[87,]),'PRINTF':([42,90,],[88,143,]),'INTEGER_DATA_TYPE':([58,73,140,169,],[109,109,109,109,]),'FLOAT_DATA_TYPE':([58,73,140,169,],[110,110,110,110,]),'BOOLEAN_DATA_TYPE':([58,73,140,169,],[111,111,111,111,]),'STRING_DATA_TYPE':([58,73,140,169,],[112,112,112,112,]),'EQUAL':([108,109,110,111,112,127,],[149,-152,-153,-154,-155,150,]),'ELSE':([177,206,208,222,291,],[207,221,-41,-42,-43,]),'INCREASE':([211,],[226,]),'DECREASE':([211,],[227,]),}
>>>>>>> e0bc78f8595551e544bcd44423588f55fb04a65b

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

<<<<<<< HEAD
_lr_goto_items = {'loop_program':([0,82,137,249,],[1,136,163,255,]),'program':([0,1,82,126,136,137,163,208,224,227,231,243,244,249,253,255,],[2,38,2,151,38,2,38,225,240,225,246,240,252,2,257,38,]),'loop_reserved':([0,1,82,136,137,163,249,255,],[3,39,3,39,3,39,3,39,]),'sentencia':([0,1,2,38,82,126,136,137,151,163,208,224,225,227,231,240,243,244,246,249,252,253,255,257,],[4,4,40,40,4,4,4,4,40,4,4,4,40,4,4,40,4,4,40,4,40,4,4,40,]),'loop':([0,1,2,38,82,126,136,137,151,163,208,224,225,227,231,240,243,244,246,249,252,253,255,257,],[5,5,41,41,5,5,5,5,41,5,5,5,41,5,5,41,5,5,41,5,41,5,5,41,]),'print':([0,1,2,38,82,126,136,137,151,158,159,160,163,183,184,186,208,214,218,224,225,227,231,240,243,244,246,249,252,253,255,257,],[9,9,9,9,9,9,9,9,9,187,187,187,9,187,187,187,9,187,187,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'print_withoutvalue':([0,1,2,38,82,126,136,137,151,158,159,160,163,183,184,186,208,214,218,224,225,227,231,240,243,244,246,249,252,253,255,257,],[10,10,10,10,10,10,10,10,10,188,188,188,10,188,188,188,10,188,188,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'def_function':([0,1,2,38,82,126,136,137,151,163,208,224,225,227,231,240,243,244,246,249,252,253,255,257,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'call_function':([0,1,2,30,33,38,45,58,59,60,61,62,63,64,65,66,67,68,69,70,71,82,126,131,136,137,138,149,150,151,158,159,160,163,183,184,186,208,214,218,224,225,226,227,230,231,240,241,243,244,246,249,252,253,255,257,],[12,12,12,75,75,12,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,12,12,75,12,12,75,75,75,12,189,189,189,12,189,189,189,12,189,189,12,12,75,12,75,12,12,75,12,12,12,12,12,12,12,12,]),'input':([0,1,2,38,82,126,136,137,151,158,159,160,163,183,184,186,208,214,218,224,225,227,231,240,243,244,246,249,252,253,255,257,],[13,13,13,13,13,13,13,13,13,190,190,190,13,190,190,190,13,190,190,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'assignment':([0,1,2,38,82,126,136,137,151,158,159,160,163,183,184,186,208,214,218,224,225,227,231,240,243,244,246,249,252,253,255,257,],[14,14,14,14,14,14,14,14,14,191,191,191,14,191,191,191,14,191,191,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'short_assignment':([0,1,2,33,38,82,126,136,137,151,158,159,160,163,183,184,186,208,214,218,224,225,227,231,240,243,244,246,249,252,253,255,257,],[15,15,15,84,15,15,15,15,15,15,192,192,192,15,192,192,192,15,192,192,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'arithmetic_operation':([0,1,2,30,33,38,45,58,59,60,61,62,63,64,65,66,67,68,69,70,71,82,126,131,136,137,138,149,150,151,158,159,160,163,183,184,186,208,214,218,224,225,226,227,230,231,240,241,243,244,246,249,252,253,255,257,],[16,16,16,77,77,16,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,16,16,77,16,16,77,77,77,16,193,193,193,16,193,193,193,16,193,193,16,16,77,16,77,16,16,77,16,16,16,16,16,16,16,16,]),'direct_arithmetic_operation':([0,1,2,38,82,126,136,137,151,158,159,160,163,183,184,186,208,214,218,224,225,227,231,240,243,244,246,249,252,253,255,257,],[17,17,17,17,17,17,17,17,17,194,194,194,17,194,194,194,17,194,194,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'if_statement':([0,1,2,38,82,126,136,137,151,158,159,160,163,183,184,186,208,214,218,224,225,227,231,240,243,244,246,249,252,253,255,257,],[18,18,18,18,18,18,18,18,18,195,195,195,18,195,195,195,18,195,195,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'function_call':([0,1,2,38,82,126,136,137,151,158,159,160,163,183,184,186,208,214,218,224,225,227,231,240,243,244,246,249,252,253,255,257,],[19,19,19,19,19,19,19,19,19,196,196,196,19,196,196,196,19,196,196,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'switch_statement':([0,1,2,38,82,126,136,137,151,158,159,160,163,183,184,186,208,214,218,224,225,227,231,240,243,244,246,249,252,253,255,257,],[20,20,20,20,20,20,20,20,20,197,197,197,20,197,197,197,20,197,197,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'for':([0,1,2,38,82,126,136,137,151,163,208,224,225,227,231,240,243,244,246,249,252,253,255,257,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'value':([0,1,2,30,32,33,38,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,79,82,126,127,128,130,131,135,136,137,138,139,140,145,149,150,151,158,159,160,163,183,184,186,205,207,208,214,218,224,225,226,227,230,231,240,241,243,244,246,249,252,253,255,257,],[23,23,23,23,78,23,23,90,23,92,93,94,95,96,97,98,99,100,101,103,23,23,23,23,23,23,23,23,23,23,23,23,23,23,134,23,23,90,134,134,23,134,23,23,23,167,169,174,23,23,23,23,23,23,23,23,23,23,220,167,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'usable_value':([0,1,2,30,33,38,45,58,59,60,61,62,63,64,65,66,67,68,69,70,71,82,126,131,136,137,138,149,150,151,158,159,160,163,183,184,186,208,214,218,224,225,226,227,230,231,240,241,243,244,246,249,252,253,255,257,],[28,28,28,74,74,28,91,111,112,113,114,115,116,117,118,119,120,121,122,123,124,28,28,157,28,28,74,177,178,28,28,28,28,28,28,28,28,28,28,28,28,28,242,28,74,28,28,250,28,28,28,28,28,28,28,28,]),'comparation_operation':([0,1,2,30,33,38,45,58,59,60,61,62,63,64,65,66,67,68,69,70,71,82,126,131,136,137,138,149,150,151,158,159,160,163,183,184,186,208,214,218,224,225,226,227,230,231,240,241,243,244,246,249,252,253,255,257,],[31,31,31,73,83,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,164,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,245,31,31,31,31,31,31,31,31,31,31,31,]),'switch_expression':([32,79,128,130,135,],[80,133,133,133,133,]),'values':([44,127,],[89,152,]),'identifiers':([56,148,],[104,175,]),'data_type':([57,72,141,172,],[106,125,171,209,]),'switch_cases':([79,128,130,135,],[129,153,156,161,]),'switch_case':([79,128,130,135,],[130,130,130,130,]),'parameters':([88,],[142,]),'parameter':([88,173,],[143,210,]),'data':([139,207,],[165,223,]),'statements':([158,159,160,183,184,186,214,218,],[185,198,199,215,216,217,232,234,]),'statement':([158,159,160,183,184,186,214,218,],[186,186,186,186,186,186,186,186,]),'conditions_elseif':([179,],[211,]),'else_if':([179,211,],[213,229,]),'func_program':([208,227,],[224,243,]),'operator_for':([219,],[235,]),}
=======
_lr_goto_items = {'loop_program':([0,83,136,242,],[1,135,160,258,]),'program':([0,1,83,128,135,136,160,202,216,219,224,233,239,242,256,258,260,265,267,269,271,275,276,277,284,285,286,287,288,289,290,292,294,296,298,300,302,304,306,310,311,312,313,314,315,319,321,323,],[2,38,2,151,38,2,38,217,230,217,241,230,255,2,273,38,217,217,217,217,217,217,230,217,230,217,230,217,230,217,230,230,230,217,217,217,230,230,230,217,230,217,230,217,230,230,230,230,]),'loop_reserved':([0,1,83,135,136,160,242,258,],[3,39,3,39,3,39,3,39,]),'sentencia':([0,1,2,38,83,128,135,136,151,160,202,216,217,219,224,230,233,239,241,242,255,256,258,260,265,267,269,271,273,275,276,277,284,285,286,287,288,289,290,292,294,296,298,300,302,304,306,310,311,312,313,314,315,319,321,323,],[4,4,40,40,4,4,4,4,40,4,4,4,40,4,4,40,4,4,40,4,40,4,4,4,4,4,4,4,40,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'loop':([0,1,2,38,83,128,135,136,151,160,202,216,217,219,224,230,233,239,241,242,255,256,258,260,265,267,269,271,273,275,276,277,284,285,286,287,288,289,290,292,294,296,298,300,302,304,306,310,311,312,313,314,315,319,321,323,],[5,5,41,41,5,5,5,5,41,5,5,5,41,5,5,41,5,5,41,5,41,5,5,5,5,5,5,5,41,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'print':([0,1,2,38,83,128,135,136,151,157,160,180,182,202,216,217,219,224,230,233,239,241,242,255,256,258,260,265,267,269,271,273,275,276,277,284,285,286,287,288,289,290,292,294,296,298,300,302,304,306,310,311,312,313,314,315,319,321,323,],[9,9,9,9,9,9,9,9,9,183,9,183,183,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'print_withoutvalue':([0,1,2,38,83,128,135,136,151,157,160,180,182,202,216,217,219,224,230,233,239,241,242,255,256,258,260,265,267,269,271,273,275,276,277,284,285,286,287,288,289,290,292,294,296,298,300,302,304,306,310,311,312,313,314,315,319,321,323,],[10,10,10,10,10,10,10,10,10,184,10,184,184,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'def_function':([0,1,2,38,83,128,135,136,151,157,160,180,182,202,216,217,219,224,230,233,239,241,242,255,256,258,260,265,267,269,271,273,275,276,277,284,285,286,287,288,289,290,292,294,296,298,300,302,304,306,310,311,312,313,314,315,319,321,323,],[11,11,11,11,11,11,11,11,11,185,11,185,185,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'call_function':([0,1,2,34,37,38,46,59,60,61,62,63,64,65,66,67,68,69,70,71,72,83,128,135,136,137,149,150,151,157,160,180,182,202,216,217,218,219,223,224,230,231,233,239,241,242,255,256,258,260,265,267,269,271,273,275,276,277,284,285,286,287,288,289,290,292,294,296,298,300,302,304,306,310,311,312,313,314,315,319,321,323,],[12,12,12,76,76,12,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,12,12,12,12,76,76,76,12,186,12,186,186,12,12,12,76,12,76,12,12,76,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'input':([0,1,2,38,83,128,135,136,151,157,160,180,182,202,216,217,219,224,230,233,239,241,242,255,256,258,260,265,267,269,271,273,275,276,277,284,285,286,287,288,289,290,292,294,296,298,300,302,304,306,310,311,312,313,314,315,319,321,323,],[13,13,13,13,13,13,13,13,13,187,13,187,187,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'assignment':([0,1,2,38,83,128,135,136,151,157,160,180,182,202,216,217,219,224,230,233,239,241,242,255,256,258,260,265,267,269,271,273,275,276,277,284,285,286,287,288,289,290,292,294,296,298,300,302,304,306,310,311,312,313,314,315,319,321,323,],[14,14,14,14,14,14,14,14,14,188,14,188,188,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'short_assignment':([0,1,2,37,38,83,128,135,136,151,157,160,180,182,202,216,217,219,224,230,233,239,241,242,255,256,258,260,265,267,269,271,273,275,276,277,284,285,286,287,288,289,290,292,294,296,298,300,302,304,306,310,311,312,313,314,315,319,321,323,],[15,15,15,85,15,15,15,15,15,15,189,15,189,189,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'arithmetic_operation':([0,1,2,34,37,38,46,59,60,61,62,63,64,65,66,67,68,69,70,71,72,83,128,135,136,137,149,150,151,157,160,180,182,202,216,217,218,219,223,224,230,231,233,239,241,242,255,256,258,260,265,267,269,271,273,275,276,277,284,285,286,287,288,289,290,292,294,296,298,300,302,304,306,310,311,312,313,314,315,319,321,323,],[16,16,16,78,78,16,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,16,16,16,16,78,78,78,16,190,16,190,190,16,16,16,78,16,78,16,16,78,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'direct_arithmetic_operation':([0,1,2,38,83,128,135,136,151,157,160,180,182,202,216,217,219,224,230,233,239,241,242,255,256,258,260,265,267,269,271,273,275,276,277,284,285,286,287,288,289,290,292,294,296,298,300,302,304,306,310,311,312,313,314,315,319,321,323,],[17,17,17,17,17,17,17,17,17,191,17,191,191,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'if_statement':([0,1,2,38,83,128,135,136,151,157,160,180,182,202,216,217,219,224,230,233,239,241,242,255,256,258,260,265,267,269,271,273,275,276,277,284,285,286,287,288,289,290,292,294,296,298,300,302,304,306,310,311,312,313,314,315,319,321,323,],[18,18,18,18,18,18,18,18,18,192,18,192,192,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'function_call':([0,1,2,38,83,128,135,136,151,157,160,180,182,202,216,217,219,224,230,233,239,241,242,255,256,258,260,265,267,269,271,273,275,276,277,284,285,286,287,288,289,290,292,294,296,298,300,302,304,306,310,311,312,313,314,315,319,321,323,],[19,19,19,19,19,19,19,19,19,193,19,193,193,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'switch_statement':([0,1,2,38,83,128,135,136,151,157,160,180,182,202,216,217,219,224,230,233,239,241,242,255,256,258,260,265,267,269,271,273,275,276,277,284,285,286,287,288,289,290,292,294,296,298,300,302,304,306,310,311,312,313,314,315,319,321,323,],[20,20,20,20,20,20,20,20,20,194,20,194,194,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'for':([0,1,2,38,83,128,135,136,151,160,202,216,217,219,224,230,233,239,241,242,255,256,258,260,265,267,269,271,273,275,276,277,284,285,286,287,288,289,290,292,294,296,298,300,302,304,306,310,311,312,313,314,315,319,321,323,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'value':([0,1,2,34,36,37,38,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,83,128,129,133,135,136,137,138,139,145,149,150,151,157,160,180,182,199,201,202,216,217,218,219,220,223,224,230,231,233,239,241,242,245,255,256,258,260,265,267,269,271,273,275,276,277,284,285,286,287,288,289,290,292,294,296,298,300,302,304,306,310,311,312,313,314,315,319,321,323,],[23,23,23,23,79,23,23,92,23,94,95,96,97,98,99,100,101,102,103,105,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,92,156,23,23,23,164,166,172,23,23,23,23,23,23,23,212,164,23,23,23,23,23,164,23,23,23,23,23,23,23,23,212,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'usable_value':([0,1,2,34,37,38,46,59,60,61,62,63,64,65,66,67,68,69,70,71,72,83,128,135,136,137,149,150,151,157,160,180,182,202,216,217,218,219,223,224,230,231,233,239,241,242,255,256,258,260,265,267,269,271,273,275,276,277,284,285,286,287,288,289,290,292,294,296,298,300,302,304,306,310,311,312,313,314,315,319,321,323,],[32,32,32,75,75,32,93,113,114,115,116,117,118,119,120,121,122,123,124,125,126,32,32,32,32,75,175,176,32,32,32,32,32,32,32,32,232,32,75,32,32,243,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'comparation_operation':([0,1,2,34,37,38,46,59,60,61,62,63,64,65,66,67,68,69,70,71,72,83,128,135,136,137,149,150,151,157,160,180,182,202,216,217,218,219,223,224,230,231,233,239,241,242,255,256,258,260,265,267,269,271,273,275,276,277,284,285,286,287,288,289,290,292,294,296,298,300,302,304,306,310,311,312,313,314,315,319,321,323,],[35,35,35,74,84,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,161,35,35,35,35,35,35,35,35,35,35,35,35,240,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'switch_expression':([36,],[81,]),'values':([45,129,],[91,152,]),'identifiers':([57,148,],[106,173,]),'data_type':([58,73,140,169,],[108,127,168,203,]),'switch_cases':([80,130,132,134,],[131,153,155,158,]),'switch_case':([80,130,132,134,],[132,132,132,132,]),'parameters':([89,],[141,]),'parameter':([89,170,],[142,204,]),'data':([138,201,220,],[162,215,234,]),'statements':([157,180,182,],[181,209,210,]),'statement':([157,180,182,],[182,182,182,]),'conditions_elseif':([177,],[206,]),'else_if':([177,206,],[208,222,]),'func_program':([202,219,260,265,267,269,271,275,277,285,287,289,296,298,300,310,312,314,],[216,233,276,284,286,288,290,292,294,302,304,306,311,313,315,319,321,323,]),'operator_for':([211,],[225,]),}
>>>>>>> e0bc78f8595551e544bcd44423588f55fb04a65b

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> loop_program","S'",1,None,None,None),
  ('loop_program -> program','loop_program',1,'p_loop_program','syntax_analyzer.py',5),
  ('loop_program -> loop_reserved','loop_program',1,'p_loop_program','syntax_analyzer.py',6),
  ('loop_program -> loop_program program','loop_program',2,'p_loop_program','syntax_analyzer.py',7),
  ('loop_program -> loop_program loop_reserved','loop_program',2,'p_loop_program','syntax_analyzer.py',8),
  ('func_program -> program','func_program',1,'p_func_program','syntax_analyzer.py',11),
  ('func_program -> RETURN','func_program',1,'p_func_program','syntax_analyzer.py',12),
  ('func_program -> RETURN usable_value','func_program',2,'p_func_program','syntax_analyzer.py',13),
  ('func_program -> func_program program','func_program',2,'p_func_program','syntax_analyzer.py',14),
  ('func_program -> func_program RETURN','func_program',2,'p_func_program','syntax_analyzer.py',15),
  ('func_program -> func_program RETURN usable_value','func_program',3,'p_func_program','syntax_analyzer.py',16),
  ('program -> sentencia','program',1,'p_program','syntax_analyzer.py',20),
  ('program -> loop','program',1,'p_program','syntax_analyzer.py',21),
  ('program -> program sentencia','program',2,'p_program','syntax_analyzer.py',22),
  ('program -> program loop','program',2,'p_program','syntax_analyzer.py',23),
  ('loop_reserved -> BREAK','loop_reserved',1,'p_loop_reserved','syntax_analyzer.py',27),
  ('loop_reserved -> CONTINUE','loop_reserved',1,'p_loop_reserved','syntax_analyzer.py',28),
  ('loop_reserved -> PASS','loop_reserved',1,'p_loop_reserved','syntax_analyzer.py',29),
  ('loop -> for','loop',1,'p_loop','syntax_analyzer.py',33),
  ('sentencia -> print','sentencia',1,'p_sentencia','syntax_analyzer.py',37),
  ('sentencia -> print_withoutvalue','sentencia',1,'p_sentencia','syntax_analyzer.py',38),
  ('sentencia -> def_function','sentencia',1,'p_sentencia','syntax_analyzer.py',39),
  ('sentencia -> call_function','sentencia',1,'p_sentencia','syntax_analyzer.py',40),
  ('sentencia -> input','sentencia',1,'p_sentencia','syntax_analyzer.py',41),
  ('sentencia -> assignment','sentencia',1,'p_sentencia','syntax_analyzer.py',42),
  ('sentencia -> short_assignment','sentencia',1,'p_sentencia','syntax_analyzer.py',43),
  ('sentencia -> arithmetic_operation','sentencia',1,'p_sentencia','syntax_analyzer.py',44),
  ('sentencia -> direct_arithmetic_operation','sentencia',1,'p_sentencia','syntax_analyzer.py',45),
  ('sentencia -> if_statement','sentencia',1,'p_sentencia','syntax_analyzer.py',46),
  ('sentencia -> function_call','sentencia',1,'p_sentencia','syntax_analyzer.py',47),
  ('sentencia -> switch_statement','sentencia',1,'p_sentencia','syntax_analyzer.py',48),
  ('for -> FOR LKEY loop_program RKEY','for',4,'p_for','syntax_analyzer.py',53),
  ('for -> FOR comparation_operation LKEY loop_program RKEY','for',5,'p_for','syntax_analyzer.py',54),
  ('for -> FOR short_assignment SEMICOLON comparation_operation SEMICOLON IDENTIFIER operator_for LKEY loop_program RKEY','for',10,'p_for','syntax_analyzer.py',55),
  ('operator_for -> INCREASE','operator_for',1,'p_operator_for','syntax_analyzer.py',58),
  ('operator_for -> DECREASE','operator_for',1,'p_operator_for','syntax_analyzer.py',59),
  ('function_call -> IDENTIFIER LPAREN values RPAREN','function_call',4,'p_function_call','syntax_analyzer.py',62),
  ('if_statement -> IF comparation_operation LKEY program RKEY','if_statement',5,'p_if_statement','syntax_analyzer.py',67),
  ('if_statement -> IF comparation_operation LKEY program RKEY conditions_elseif','if_statement',6,'p_if_statement','syntax_analyzer.py',68),
  ('if_statement -> IF comparation_operation LKEY program RKEY ELSE LKEY program RKEY','if_statement',9,'p_if_statement','syntax_analyzer.py',69),
  ('if_statement -> IF comparation_operation LKEY program RKEY conditions_elseif ELSE LKEY program RKEY','if_statement',10,'p_if_statement','syntax_analyzer.py',70),
  ('conditions_elseif -> else_if','conditions_elseif',1,'p_conditions_elseif','syntax_analyzer.py',75),
  ('conditions_elseif -> conditions_elseif else_if','conditions_elseif',2,'p_conditions_elseif','syntax_analyzer.py',76),
  ('else_if -> ELSE IF comparation_operation LKEY program RKEY','else_if',6,'p_else_if','syntax_analyzer.py',80),
  ('switch_statement -> SWITCH value LKEY switch_cases RKEY','switch_statement',5,'p_switch_statement','syntax_analyzer.py',85),
  ('switch_statement -> SWITCH LKEY switch_cases RKEY','switch_statement',4,'p_switch_statement','syntax_analyzer.py',86),
  ('switch_statement -> SWITCH switch_expression LKEY switch_cases RKEY','switch_statement',5,'p_switch_statement','syntax_analyzer.py',87),
<<<<<<< HEAD
  ('switch_statement -> SWITCH value LKEY switch_cases DEFAULT COLON statements RKEY','switch_statement',8,'p_switch_statement','syntax_analyzer.py',88),
  ('switch_statement -> SWITCH LKEY switch_cases DEFAULT COLON statements RKEY','switch_statement',7,'p_switch_statement','syntax_analyzer.py',89),
  ('switch_statement -> SWITCH switch_expression LKEY switch_cases DEFAULT COLON statements RKEY','switch_statement',8,'p_switch_statement','syntax_analyzer.py',90),
  ('switch_expression -> value','switch_expression',1,'p_switch_expression','syntax_analyzer.py',95),
  ('switch_expression -> <empty>','switch_expression',0,'p_switch_expression','syntax_analyzer.py',96),
  ('switch_cases -> switch_case switch_cases','switch_cases',2,'p_switch_cases','syntax_analyzer.py',101),
  ('switch_cases -> <empty>','switch_cases',0,'p_switch_cases','syntax_analyzer.py',102),
  ('switch_case -> CASE usable_value COLON statements','switch_case',4,'p_switch_case','syntax_analyzer.py',107),
  ('switch_case -> CASE COLON statements','switch_case',3,'p_switch_case','syntax_analyzer.py',108),
  ('switch_case -> IDENTIFIER COLON statements','switch_case',3,'p_switch_case','syntax_analyzer.py',109),
  ('switch_case -> switch_expression COLON statements','switch_case',3,'p_switch_case','syntax_analyzer.py',110),
  ('statements -> statement statements','statements',2,'p_statements','syntax_analyzer.py',115),
  ('statements -> <empty>','statements',0,'p_statements','syntax_analyzer.py',116),
  ('statement -> print','statement',1,'p_statement','syntax_analyzer.py',121),
  ('statement -> print_withoutvalue','statement',1,'p_statement','syntax_analyzer.py',122),
  ('statement -> call_function','statement',1,'p_statement','syntax_analyzer.py',123),
  ('statement -> input','statement',1,'p_statement','syntax_analyzer.py',124),
  ('statement -> assignment','statement',1,'p_statement','syntax_analyzer.py',125),
  ('statement -> short_assignment','statement',1,'p_statement','syntax_analyzer.py',126),
  ('statement -> arithmetic_operation','statement',1,'p_statement','syntax_analyzer.py',127),
  ('statement -> direct_arithmetic_operation','statement',1,'p_statement','syntax_analyzer.py',128),
  ('statement -> if_statement','statement',1,'p_statement','syntax_analyzer.py',129),
  ('statement -> function_call','statement',1,'p_statement','syntax_analyzer.py',130),
  ('statement -> switch_statement','statement',1,'p_statement','syntax_analyzer.py',131),
  ('print -> FMT_LIBRARY DOT PRINTLN LPAREN data RPAREN','print',6,'p_print','syntax_analyzer.py',147),
  ('print -> FMT_LIBRARY DOT PRINTF LPAREN value RPAREN','print',6,'p_print','syntax_analyzer.py',148),
  ('print -> FMT_LIBRARY DOT PRINTF LPAREN value COMMA RPAREN','print',7,'p_print','syntax_analyzer.py',149),
  ('print -> FMT_LIBRARY DOT PRINTF LPAREN value COMMA data RPAREN','print',8,'p_print','syntax_analyzer.py',150),
  ('data -> value','data',1,'p_data','syntax_analyzer.py',153),
  ('data -> IDENTIFIER','data',1,'p_data','syntax_analyzer.py',154),
  ('data -> data COMMA value','data',3,'p_data','syntax_analyzer.py',155),
  ('data -> data COMMA IDENTIFIER','data',3,'p_data','syntax_analyzer.py',156),
  ('print_withoutvalue -> FMT_LIBRARY DOT PRINTLN LPAREN RPAREN','print_withoutvalue',5,'p_print_withoutvalue','syntax_analyzer.py',159),
  ('print_withoutvalue -> FMT_LIBRARY DOT PRINTF LPAREN RPAREN','print_withoutvalue',5,'p_print_withoutvalue','syntax_analyzer.py',160),
  ('assignment -> VAR IDENTIFIER data_type EQUAL usable_value','assignment',5,'p_assignment','syntax_analyzer.py',163),
  ('assignment -> CONST IDENTIFIER data_type EQUAL usable_value','assignment',5,'p_assignment','syntax_analyzer.py',164),
  ('short_assignment -> IDENTIFIER SHORT_VAR_DECL usable_value','short_assignment',3,'p_short_assignment','syntax_analyzer.py',167),
  ('usable_value -> value','usable_value',1,'p_usable_value','syntax_analyzer.py',170),
  ('usable_value -> call_function','usable_value',1,'p_usable_value','syntax_analyzer.py',171),
  ('usable_value -> IDENTIFIER','usable_value',1,'p_usable_value','syntax_analyzer.py',172),
  ('usable_value -> arithmetic_operation','usable_value',1,'p_usable_value','syntax_analyzer.py',173),
  ('usable_value -> comparation_operation','usable_value',1,'p_usable_value','syntax_analyzer.py',174),
  ('direct_arithmetic_operation -> IDENTIFIER PLUS_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',180),
  ('direct_arithmetic_operation -> IDENTIFIER MINUS_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',181),
  ('direct_arithmetic_operation -> IDENTIFIER TIMES_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',182),
  ('direct_arithmetic_operation -> IDENTIFIER DIVIDE_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',183),
  ('direct_arithmetic_operation -> IDENTIFIER MODULO_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',184),
  ('direct_arithmetic_operation -> IDENTIFIER BITWISE_AND_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',185),
  ('direct_arithmetic_operation -> IDENTIFIER BITWISE_OR_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',186),
  ('direct_arithmetic_operation -> IDENTIFIER BITWISE_XOR_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',187),
  ('direct_arithmetic_operation -> IDENTIFIER LEFT_SHIFT_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',188),
  ('direct_arithmetic_operation -> IDENTIFIER RIGHT_SHIFT_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',189),
  ('arithmetic_operation -> usable_value PLUS usable_value','arithmetic_operation',3,'p_arithmetic_operation','syntax_analyzer.py',194),
  ('arithmetic_operation -> usable_value MINUS usable_value','arithmetic_operation',3,'p_arithmetic_operation','syntax_analyzer.py',195),
  ('arithmetic_operation -> usable_value DIVIDE usable_value','arithmetic_operation',3,'p_arithmetic_operation','syntax_analyzer.py',196),
  ('arithmetic_operation -> usable_value TIMES usable_value','arithmetic_operation',3,'p_arithmetic_operation','syntax_analyzer.py',197),
  ('arithmetic_operation -> usable_value ENTERE_DIVIDE usable_value','arithmetic_operation',3,'p_arithmetic_operation','syntax_analyzer.py',198),
  ('arithmetic_operation -> usable_value MODULE usable_value','arithmetic_operation',3,'p_arithmetic_operation','syntax_analyzer.py',199),
  ('comparation_operation -> usable_value EQUALEQUAL usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',206),
  ('comparation_operation -> usable_value NOT_EQUAL usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',207),
  ('comparation_operation -> usable_value LESS_EQUAL usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',208),
  ('comparation_operation -> usable_value GREATER_EQUAL usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',209),
  ('comparation_operation -> usable_value LESS usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',210),
  ('comparation_operation -> usable_value GREATER usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',211),
  ('comparation_operation -> usable_value LOGICAL_AND usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',212),
  ('comparation_operation -> usable_value LOGICAL_OR usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',213),
  ('identifiers -> IDENTIFIER','identifiers',1,'p_identifiers','syntax_analyzer.py',218),
  ('identifiers -> identifiers COMMA identifiers','identifiers',3,'p_identifiers','syntax_analyzer.py',219),
  ('rule_comparation -> IDENTIFIER EQUALEQUAL value','rule_comparation',3,'p_rule_comparation','syntax_analyzer.py',223),
  ('rule_comparation -> IDENTIFIER NOT_EQUAL value','rule_comparation',3,'p_rule_comparation','syntax_analyzer.py',224),
  ('rule_comparation -> IDENTIFIER LESS_EQUAL value','rule_comparation',3,'p_rule_comparation','syntax_analyzer.py',225),
  ('rule_comparation -> IDENTIFIER GREATER_EQUAL value','rule_comparation',3,'p_rule_comparation','syntax_analyzer.py',226),
  ('rule_comparation -> IDENTIFIER LESS value','rule_comparation',3,'p_rule_comparation','syntax_analyzer.py',227),
  ('rule_comparation -> IDENTIFIER GREATER value','rule_comparation',3,'p_rule_comparation','syntax_analyzer.py',228),
  ('rule_comparation -> IDENTIFIER LOGICAL_AND value','rule_comparation',3,'p_rule_comparation','syntax_analyzer.py',229),
  ('rule_comparation -> IDENTIFIER LOGICAL_OR value','rule_comparation',3,'p_rule_comparation','syntax_analyzer.py',230),
  ('condition -> value comparation_operation value','condition',3,'p_condition','syntax_analyzer.py',234),
  ('condition -> condition LOGICAL_AND condition','condition',3,'p_condition','syntax_analyzer.py',235),
  ('condition -> condition LOGICAL_OR condition','condition',3,'p_condition','syntax_analyzer.py',236),
  ('condition -> LOGICAL_NOT condition','condition',2,'p_condition','syntax_analyzer.py',237),
  ('def_function -> FUNC IDENTIFIER LPAREN parameters RPAREN LKEY func_program RKEY','def_function',8,'p_def_function','syntax_analyzer.py',243),
  ('def_function -> FUNC IDENTIFIER LPAREN parameters RPAREN data_type LKEY func_program RKEY','def_function',9,'p_def_function','syntax_analyzer.py',244),
  ('call_function -> IDENTIFIER LPAREN values RPAREN','call_function',4,'p_call_funcion','syntax_analyzer.py',247),
  ('parameters -> parameter','parameters',1,'p_parameters','syntax_analyzer.py',250),
  ('parameters -> parameters COMMA parameter','parameters',3,'p_parameters','syntax_analyzer.py',251),
  ('parameter -> IDENTIFIER data_type','parameter',2,'p_parameter','syntax_analyzer.py',256),
  ('values -> value','values',1,'p_values','syntax_analyzer.py',259),
  ('values -> values COMMA value','values',3,'p_values','syntax_analyzer.py',260),
  ('value -> STRING','value',1,'p_value','syntax_analyzer.py',264),
  ('value -> INTEGER','value',1,'p_value','syntax_analyzer.py',265),
  ('value -> FLOAT','value',1,'p_value','syntax_analyzer.py',266),
  ('value -> BOOLEAN','value',1,'p_value','syntax_analyzer.py',267),
  ('value -> IDENTIFIER','value',1,'p_value','syntax_analyzer.py',268),
  ('data_type -> INTEGER_DATA_TYPE','data_type',1,'p_data_type','syntax_analyzer.py',271),
  ('data_type -> FLOAT_DATA_TYPE','data_type',1,'p_data_type','syntax_analyzer.py',272),
  ('data_type -> BOOLEAN_DATA_TYPE','data_type',1,'p_data_type','syntax_analyzer.py',273),
  ('data_type -> STRING_DATA_TYPE','data_type',1,'p_data_type','syntax_analyzer.py',274),
  ('input -> INPUT LPAREN RPAREN','input',3,'p_input','syntax_analyzer.py',278),
  ('input -> INPUT LPAREN value RPAREN','input',4,'p_input','syntax_analyzer.py',279),
  ('input -> INPUT LPAREN identifiers RPAREN','input',4,'p_input','syntax_analyzer.py',280),
=======
  ('switch_expression -> value','switch_expression',1,'p_switch_expression','syntax_analyzer.py',92),
  ('switch_expression -> <empty>','switch_expression',0,'p_switch_expression','syntax_analyzer.py',93),
  ('switch_cases -> switch_case switch_cases','switch_cases',2,'p_switch_cases','syntax_analyzer.py',98),
  ('switch_cases -> <empty>','switch_cases',0,'p_switch_cases','syntax_analyzer.py',99),
  ('switch_case -> CASE value COLON statements','switch_case',4,'p_switch_case','syntax_analyzer.py',104),
  ('switch_case -> CASE COLON statements','switch_case',3,'p_switch_case','syntax_analyzer.py',105),
  ('statements -> statement statements','statements',2,'p_statements','syntax_analyzer.py',110),
  ('statements -> <empty>','statements',0,'p_statements','syntax_analyzer.py',111),
  ('statement -> print','statement',1,'p_statement','syntax_analyzer.py',116),
  ('statement -> print_withoutvalue','statement',1,'p_statement','syntax_analyzer.py',117),
  ('statement -> def_function','statement',1,'p_statement','syntax_analyzer.py',118),
  ('statement -> call_function','statement',1,'p_statement','syntax_analyzer.py',119),
  ('statement -> input','statement',1,'p_statement','syntax_analyzer.py',120),
  ('statement -> assignment','statement',1,'p_statement','syntax_analyzer.py',121),
  ('statement -> short_assignment','statement',1,'p_statement','syntax_analyzer.py',122),
  ('statement -> arithmetic_operation','statement',1,'p_statement','syntax_analyzer.py',123),
  ('statement -> direct_arithmetic_operation','statement',1,'p_statement','syntax_analyzer.py',124),
  ('statement -> if_statement','statement',1,'p_statement','syntax_analyzer.py',125),
  ('statement -> function_call','statement',1,'p_statement','syntax_analyzer.py',126),
  ('statement -> switch_statement','statement',1,'p_statement','syntax_analyzer.py',127),
  ('print -> FMT_LIBRARY DOT PRINTLN LPAREN data RPAREN','print',6,'p_print','syntax_analyzer.py',135),
  ('print -> FMT_LIBRARY DOT PRINTF LPAREN value RPAREN','print',6,'p_print','syntax_analyzer.py',136),
  ('print -> FMT_LIBRARY DOT PRINTF LPAREN value COMMA RPAREN','print',7,'p_print','syntax_analyzer.py',137),
  ('print -> FMT_LIBRARY DOT PRINTF LPAREN value COMMA data RPAREN','print',8,'p_print','syntax_analyzer.py',138),
  ('data -> value','data',1,'p_data','syntax_analyzer.py',141),
  ('data -> IDENTIFIER','data',1,'p_data','syntax_analyzer.py',142),
  ('data -> data COMMA value','data',3,'p_data','syntax_analyzer.py',143),
  ('data -> data COMMA IDENTIFIER','data',3,'p_data','syntax_analyzer.py',144),
  ('print_withoutvalue -> FMT_LIBRARY DOT PRINTLN LPAREN RPAREN','print_withoutvalue',5,'p_print_withoutvalue','syntax_analyzer.py',147),
  ('print_withoutvalue -> FMT_LIBRARY DOT PRINTF LPAREN RPAREN','print_withoutvalue',5,'p_print_withoutvalue','syntax_analyzer.py',148),
  ('assignment -> VAR IDENTIFIER data_type EQUAL usable_value','assignment',5,'p_assignment','syntax_analyzer.py',151),
  ('assignment -> CONST IDENTIFIER data_type EQUAL usable_value','assignment',5,'p_assignment','syntax_analyzer.py',152),
  ('short_assignment -> IDENTIFIER SHORT_VAR_DECL usable_value','short_assignment',3,'p_short_assignment','syntax_analyzer.py',155),
  ('usable_value -> value','usable_value',1,'p_usable_value','syntax_analyzer.py',158),
  ('usable_value -> call_function','usable_value',1,'p_usable_value','syntax_analyzer.py',159),
  ('usable_value -> IDENTIFIER','usable_value',1,'p_usable_value','syntax_analyzer.py',160),
  ('usable_value -> arithmetic_operation','usable_value',1,'p_usable_value','syntax_analyzer.py',161),
  ('usable_value -> comparation_operation','usable_value',1,'p_usable_value','syntax_analyzer.py',162),
  ('direct_arithmetic_operation -> IDENTIFIER PLUS_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',168),
  ('direct_arithmetic_operation -> IDENTIFIER MINUS_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',169),
  ('direct_arithmetic_operation -> IDENTIFIER TIMES_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',170),
  ('direct_arithmetic_operation -> IDENTIFIER DIVIDE_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',171),
  ('direct_arithmetic_operation -> IDENTIFIER MODULO_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',172),
  ('direct_arithmetic_operation -> IDENTIFIER BITWISE_AND_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',173),
  ('direct_arithmetic_operation -> IDENTIFIER BITWISE_OR_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',174),
  ('direct_arithmetic_operation -> IDENTIFIER BITWISE_XOR_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',175),
  ('direct_arithmetic_operation -> IDENTIFIER LEFT_SHIFT_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',176),
  ('direct_arithmetic_operation -> IDENTIFIER RIGHT_SHIFT_EQ value','direct_arithmetic_operation',3,'p_direct_arithmetic_operation','syntax_analyzer.py',177),
  ('arithmetic_operation -> usable_value PLUS usable_value','arithmetic_operation',3,'p_arithmetic_operation','syntax_analyzer.py',182),
  ('arithmetic_operation -> usable_value MINUS usable_value','arithmetic_operation',3,'p_arithmetic_operation','syntax_analyzer.py',183),
  ('arithmetic_operation -> usable_value DIVIDE usable_value','arithmetic_operation',3,'p_arithmetic_operation','syntax_analyzer.py',184),
  ('arithmetic_operation -> usable_value TIMES usable_value','arithmetic_operation',3,'p_arithmetic_operation','syntax_analyzer.py',185),
  ('arithmetic_operation -> usable_value ENTERE_DIVIDE usable_value','arithmetic_operation',3,'p_arithmetic_operation','syntax_analyzer.py',186),
  ('arithmetic_operation -> usable_value MODULE usable_value','arithmetic_operation',3,'p_arithmetic_operation','syntax_analyzer.py',187),
  ('comparation_operation -> usable_value EQUALEQUAL usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',195),
  ('comparation_operation -> usable_value NOT_EQUAL usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',196),
  ('comparation_operation -> usable_value LESS_EQUAL usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',197),
  ('comparation_operation -> usable_value GREATER_EQUAL usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',198),
  ('comparation_operation -> usable_value LESS usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',199),
  ('comparation_operation -> usable_value GREATER usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',200),
  ('comparation_operation -> usable_value LOGICAL_AND usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',201),
  ('comparation_operation -> usable_value LOGICAL_OR usable_value','comparation_operation',3,'p_comparation_operation','syntax_analyzer.py',202),
  ('identifiers -> IDENTIFIER','identifiers',1,'p_identifiers','syntax_analyzer.py',207),
  ('identifiers -> identifiers COMMA identifiers','identifiers',3,'p_identifiers','syntax_analyzer.py',208),
  ('rule_comparation -> IDENTIFIER EQUALEQUAL value','rule_comparation',3,'p_rule_comparation','syntax_analyzer.py',212),
  ('rule_comparation -> IDENTIFIER NOT_EQUAL value','rule_comparation',3,'p_rule_comparation','syntax_analyzer.py',213),
  ('rule_comparation -> IDENTIFIER LESS_EQUAL value','rule_comparation',3,'p_rule_comparation','syntax_analyzer.py',214),
  ('rule_comparation -> IDENTIFIER GREATER_EQUAL value','rule_comparation',3,'p_rule_comparation','syntax_analyzer.py',215),
  ('rule_comparation -> IDENTIFIER LESS value','rule_comparation',3,'p_rule_comparation','syntax_analyzer.py',216),
  ('rule_comparation -> IDENTIFIER GREATER value','rule_comparation',3,'p_rule_comparation','syntax_analyzer.py',217),
  ('rule_comparation -> IDENTIFIER LOGICAL_AND value','rule_comparation',3,'p_rule_comparation','syntax_analyzer.py',218),
  ('rule_comparation -> IDENTIFIER LOGICAL_OR value','rule_comparation',3,'p_rule_comparation','syntax_analyzer.py',219),
  ('condition -> value comparation_operation value','condition',3,'p_condition','syntax_analyzer.py',223),
  ('condition -> condition LOGICAL_AND condition','condition',3,'p_condition','syntax_analyzer.py',224),
  ('condition -> condition LOGICAL_OR condition','condition',3,'p_condition','syntax_analyzer.py',225),
  ('condition -> LOGICAL_NOT condition','condition',2,'p_condition','syntax_analyzer.py',226),
  ('def_function -> FUNC IDENTIFIER LPAREN parameters RPAREN LKEY func_program RKEY','def_function',8,'p_def_function','syntax_analyzer.py',233),
  ('def_function -> FUNC IDENTIFIER LPAREN parameters RPAREN data_type LKEY func_program RKEY','def_function',9,'p_def_function','syntax_analyzer.py',234),
  ('def_function -> FUNC FMT_LIBRARY DOT PRINTF LPAREN STRING COMMA data RPAREN LKEY func_program RKEY','def_function',12,'p_def_function','syntax_analyzer.py',235),
  ('def_function -> FUNC FMT_LIBRARY DOT PRINTF LPAREN STRING COMMA data COMMA RPAREN LKEY func_program RKEY','def_function',13,'p_def_function','syntax_analyzer.py',236),
  ('def_function -> FUNC FMT_LIBRARY DOT PRINTF LPAREN STRING COMMA IDENTIFIER RPAREN LKEY func_program RKEY','def_function',12,'p_def_function','syntax_analyzer.py',237),
  ('def_function -> FUNC FMT_LIBRARY DOT PRINTF LPAREN STRING COMMA IDENTIFIER COMMA RPAREN LKEY func_program RKEY','def_function',13,'p_def_function','syntax_analyzer.py',238),
  ('def_function -> FUNC FMT_LIBRARY DOT PRINTF LPAREN STRING COMMA FLOAT RPAREN LKEY func_program RKEY','def_function',12,'p_def_function','syntax_analyzer.py',239),
  ('def_function -> FUNC FMT_LIBRARY DOT PRINTF LPAREN STRING COMMA FLOAT COMMA RPAREN LKEY func_program RKEY','def_function',13,'p_def_function','syntax_analyzer.py',240),
  ('def_function -> FUNC FMT_LIBRARY DOT PRINTF LPAREN STRING COMMA INTEGER RPAREN LKEY func_program RKEY','def_function',12,'p_def_function','syntax_analyzer.py',241),
  ('def_function -> FUNC FMT_LIBRARY DOT PRINTF LPAREN STRING COMMA INTEGER COMMA RPAREN LKEY func_program RKEY','def_function',13,'p_def_function','syntax_analyzer.py',242),
  ('def_function -> FUNC FMT_LIBRARY DOT PRINTF LPAREN STRING COMMA BOOLEAN RPAREN LKEY func_program RKEY','def_function',12,'p_def_function','syntax_analyzer.py',243),
  ('def_function -> FUNC FMT_LIBRARY DOT PRINTF LPAREN STRING COMMA BOOLEAN COMMA RPAREN LKEY func_program RKEY','def_function',13,'p_def_function','syntax_analyzer.py',244),
  ('def_function -> FUNC FMT_LIBRARY DOT PRINTF LPAREN STRING COMMA IDENTIFIER COMMA FLOAT RPAREN LKEY func_program RKEY','def_function',14,'p_def_function','syntax_analyzer.py',245),
  ('def_function -> FUNC FMT_LIBRARY DOT PRINTF LPAREN STRING COMMA IDENTIFIER COMMA FLOAT COMMA RPAREN LKEY func_program RKEY','def_function',15,'p_def_function','syntax_analyzer.py',246),
  ('def_function -> FUNC FMT_LIBRARY DOT PRINTF LPAREN STRING COMMA IDENTIFIER COMMA INTEGER RPAREN LKEY func_program RKEY','def_function',14,'p_def_function','syntax_analyzer.py',247),
  ('def_function -> FUNC FMT_LIBRARY DOT PRINTF LPAREN STRING COMMA IDENTIFIER COMMA INTEGER COMMA RPAREN LKEY func_program RKEY','def_function',15,'p_def_function','syntax_analyzer.py',248),
  ('def_function -> FUNC FMT_LIBRARY DOT PRINTF LPAREN STRING COMMA IDENTIFIER COMMA BOOLEAN RPAREN LKEY func_program RKEY','def_function',14,'p_def_function','syntax_analyzer.py',249),
  ('def_function -> FUNC FMT_LIBRARY DOT PRINTF LPAREN STRING COMMA IDENTIFIER COMMA BOOLEAN COMMA RPAREN LKEY func_program RKEY','def_function',15,'p_def_function','syntax_analyzer.py',250),
  ('call_function -> IDENTIFIER LPAREN values RPAREN','call_function',4,'p_call_funcion','syntax_analyzer.py',254),
  ('parameters -> parameter','parameters',1,'p_parameters','syntax_analyzer.py',257),
  ('parameters -> parameters COMMA parameter','parameters',3,'p_parameters','syntax_analyzer.py',258),
  ('parameter -> IDENTIFIER data_type','parameter',2,'p_parameter','syntax_analyzer.py',263),
  ('values -> value','values',1,'p_values','syntax_analyzer.py',266),
  ('values -> values COMMA value','values',3,'p_values','syntax_analyzer.py',267),
  ('value -> STRING','value',1,'p_value','syntax_analyzer.py',271),
  ('value -> INTEGER','value',1,'p_value','syntax_analyzer.py',272),
  ('value -> FLOAT','value',1,'p_value','syntax_analyzer.py',273),
  ('value -> BOOLEAN','value',1,'p_value','syntax_analyzer.py',274),
  ('value -> IDENTIFIER','value',1,'p_value','syntax_analyzer.py',275),
  ('data_type -> INTEGER_DATA_TYPE','data_type',1,'p_data_type','syntax_analyzer.py',278),
  ('data_type -> FLOAT_DATA_TYPE','data_type',1,'p_data_type','syntax_analyzer.py',279),
  ('data_type -> BOOLEAN_DATA_TYPE','data_type',1,'p_data_type','syntax_analyzer.py',280),
  ('data_type -> STRING_DATA_TYPE','data_type',1,'p_data_type','syntax_analyzer.py',281),
  ('input -> INPUT LPAREN RPAREN','input',3,'p_input','syntax_analyzer.py',285),
  ('input -> INPUT LPAREN value RPAREN','input',4,'p_input','syntax_analyzer.py',286),
  ('input -> INPUT LPAREN identifiers RPAREN','input',4,'p_input','syntax_analyzer.py',287),
>>>>>>> e0bc78f8595551e544bcd44423588f55fb04a65b
]
